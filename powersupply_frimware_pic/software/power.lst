

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Thu Mar 20 22:41:34 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F876A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_init
    43                           	FNCALL	_main,_init_timer0
    44                           	FNCALL	_main,_task_slow
    45                           	FNCALL	_main,_task_fast
    46                           	FNCALL	_task_fast,_Dispaly2raw_task
    47                           	FNCALL	_task_slow,_Read_Buton_state
    48                           	FNCALL	_task_slow,_adc_convert_one_channel
    49                           	FNCALL	_task_slow,_Convert_to_Voltage
    50                           	FNCALL	_task_slow,_Divizor_U_Sense
    51                           	FNCALL	_task_slow,_SetDisplay_Voltage
    52                           	FNCALL	_task_slow,_Rawvalue_to_Current
    53                           	FNCALL	_task_slow,_SetDisplay_Current
    54                           	FNCALL	_task_slow,_Divizor_U_Pot
    55                           	FNCALL	_task_slow,_SetDisplay_Current_target
    56                           	FNCALL	_task_slow,_UpotToPWM
    57                           	FNCALL	_task_slow,_pwm_setDuty
    58                           	FNCALL	_task_slow,_pwm_update
    59                           	FNCALL	_Dispaly2raw_task,_SetCommand
    60                           	FNCALL	_Dispaly2raw_task,_IsBusy
    61                           	FNCALL	_Dispaly2raw_task,_WriteData
    62                           	FNCALL	_init,_io_init
    63                           	FNCALL	_init,_pwm_setPeriod
    64                           	FNCALL	_init,_pwm_setDuty
    65                           	FNCALL	_init,_pwm_update
    66                           	FNCALL	_init,_pwm_init
    67                           	FNCALL	_init,_adc_init
    68                           	FNCALL	_init,_init_signal_procesing
    69                           	FNCALL	_init,_InitDisplay2raw
    70                           	FNCALL	_init,_init_botifilter
    71                           	FNCALL	_Read_Buton_state,_adc_convert_one_channel
    72                           	FNCALL	_Read_Buton_state,_Convert_to_Voltage
    73                           	FNCALL	_WriteData,_LCD_delay_us
    74                           	FNCALL	_IsBusy,_LCD_delay_us
    75                           	FNCALL	_SetCommand,_LCD_delay_us
    76                           	FNCALL	_UpotToPWM,___lmul
    77                           	FNCALL	_SetDisplay_Current_target,___wmul
    78                           	FNCALL	_Divizor_U_Pot,___lmul
    79                           	FNCALL	_SetDisplay_Current,___wmul
    80                           	FNCALL	_Rawvalue_to_Current,___lldiv
    81                           	FNCALL	_SetDisplay_Voltage,___awmod
    82                           	FNCALL	_SetDisplay_Voltage,___awdiv
    83                           	FNCALL	_SetDisplay_Voltage,___wmul
    84                           	FNCALL	_Divizor_U_Sense,___lmul
    85                           	FNCALL	_pwm_update,___lmul
    86                           	FNCALL	_Convert_to_Voltage,___lmul
    87                           	FNROOT	_main
    88                           	FNCALL	_external_isr,_timer0_isr
    89                           	FNCALL	intlevel1,_external_isr
    90                           	global	intlevel1
    91                           	FNROOT	intlevel1
    92                           	global	_s_pwm
    93                           	global	_duty_pwm1
    94                           	global	_duty_pwm2
    95                           	global	_ubNumberINT
    96                           	global	_uwNumberFRC
    97                           	global	_uw_ADCV0
    98                           	global	_uw_ADCV1
    99                           	global	_uw_ADCV2
   100                           	global	_uw_ADCV3
   101                           	global	_uw_ADCVS4
   102                           	global	_uw_IPot
   103                           	global	_uw_adcCH0
   104                           	global	_uw_adcCH1
   105                           	global	_uw_adcCH2
   106                           	global	_uw_adcCH3
   107                           	global	_uw_adcCH4
   108                           	global	_ubDispIndex
   109                           	global	_ubFirstByte
   110                           	global	_ubFourthByte
   111                           	global	_ubSecondByte
   112                           	global	_ubThrdByte
   113                           	global	_ub_Datawrite
   114                           	global	_ub_busy
   115                           	global	_ub_buton_s2
   116                           	global	_ub_buton_s3
   117                           	global	_ub_counter_1
   118                           	global	_ub_state_Display2r
   119                           	global	_ub_task
   120                           	global	_uw_Usense
   121                           	global	_ub_char
   122                           	global	_ub_counter_retry
   123                           	global	_ub_islimit_power
   124                           	global	_ubDisplay_buf
   125                           	global	_adc_buffer
   126                           	global	_ul_mseconds
   127                           	global	_ul_task1
   128                           	global	_ul_task2
   129                           	global	_temp_duty_pwm2
   130                           	global	_uw_ADCVS3
   131                           	global	_uw_Isense
   132                           	global	_uw_UPot
   133                           	global	_auwPWMOut
   134                           	global	_auwUPOT
   135                           	global	_ADRESH
   136                           psect	text818,local,class=CODE,delta=2
   137                           global __ptext818
   138  0000                     __ptext818:
   139  001E                     _ADRESH	set	30
   140                           	global	_CCPR1L
   141  0015                     _CCPR1L	set	21
   142                           	global	_CCPR2L
   143  001B                     _CCPR2L	set	27
   144                           	global	_PORTA
   145  0005                     _PORTA	set	5
   146                           	global	_PORTB
   147  0006                     _PORTB	set	6
   148                           	global	_PORTC
   149  0007                     _PORTC	set	7
   150                           	global	_TMR0
   151  0001                     _TMR0	set	1
   152                           	global	_ADCS0
   153  00FE                     _ADCS0	set	254
   154                           	global	_ADCS1
   155  00FF                     _ADCS1	set	255
   156                           	global	_ADIF
   157  0066                     _ADIF	set	102
   158                           	global	_ADON
   159  00F8                     _ADON	set	248
   160                           	global	_CARRY
   161  0018                     _CARRY	set	24
   162                           	global	_CCP1M0
   163  00B8                     _CCP1M0	set	184
   164                           	global	_CCP1M1
   165  00B9                     _CCP1M1	set	185
   166                           	global	_CCP1M2
   167  00BA                     _CCP1M2	set	186
   168                           	global	_CCP1M3
   169  00BB                     _CCP1M3	set	187
   170                           	global	_CCP1X
   171  00BD                     _CCP1X	set	189
   172                           	global	_CCP1Y
   173  00BC                     _CCP1Y	set	188
   174                           	global	_CCP2M0
   175  00E8                     _CCP2M0	set	232
   176                           	global	_CCP2M1
   177  00E9                     _CCP2M1	set	233
   178                           	global	_CCP2M2
   179  00EA                     _CCP2M2	set	234
   180                           	global	_CCP2M3
   181  00EB                     _CCP2M3	set	235
   182                           	global	_CCP2X
   183  00ED                     _CCP2X	set	237
   184                           	global	_CCP2Y
   185  00EC                     _CCP2Y	set	236
   186                           	global	_CHS0
   187  00FB                     _CHS0	set	251
   188                           	global	_CHS1
   189  00FC                     _CHS1	set	252
   190                           	global	_CHS2
   191  00FD                     _CHS2	set	253
   192                           	global	_GIE
   193  005F                     _GIE	set	95
   194                           	global	_GO_DONE
   195  00FA                     _GO_DONE	set	250
   196                           	global	_PEIE
   197  005E                     _PEIE	set	94
   198                           	global	_RC0
   199  0038                     _RC0	set	56
   200                           	global	_RC3
   201  003B                     _RC3	set	59
   202                           	global	_RC4
   203  003C                     _RC4	set	60
   204                           	global	_RC5
   205  003D                     _RC5	set	61
   206                           	global	_T2CKPS0
   207  0090                     _T2CKPS0	set	144
   208                           	global	_T2CKPS1
   209  0091                     _T2CKPS1	set	145
   210                           	global	_TMR0IE
   211  005D                     _TMR0IE	set	93
   212                           	global	_TMR0IF
   213  005A                     _TMR0IF	set	90
   214                           	global	_TMR2ON
   215  0092                     _TMR2ON	set	146
   216                           	global	_ADRESL
   217  009E                     _ADRESL	set	158
   218                           	global	_PR2
   219  0092                     _PR2	set	146
   220                           	global	_TRISA
   221  0085                     _TRISA	set	133
   222                           	global	_TRISB
   223  0086                     _TRISB	set	134
   224                           	global	_TRISC
   225  0087                     _TRISC	set	135
   226                           	global	_ADCS2
   227  04FE                     _ADCS2	set	1278
   228                           	global	_ADFM
   229  04FF                     _ADFM	set	1279
   230                           	global	_PCFG0
   231  04F8                     _PCFG0	set	1272
   232                           	global	_PCFG1
   233  04F9                     _PCFG1	set	1273
   234                           	global	_PCFG2
   235  04FA                     _PCFG2	set	1274
   236                           	global	_PCFG3
   237  04FB                     _PCFG3	set	1275
   238                           	global	_PS0
   239  0408                     _PS0	set	1032
   240                           	global	_PS1
   241  0409                     _PS1	set	1033
   242                           	global	_PS2
   243  040A                     _PS2	set	1034
   244                           	global	_PSA
   245  040B                     _PSA	set	1035
   246                           	global	_T0CS
   247  040D                     _T0CS	set	1037
   248                           	global	_TRISA0
   249  0428                     _TRISA0	set	1064
   250                           	global	_TRISA1
   251  0429                     _TRISA1	set	1065
   252                           	global	_TRISA2
   253  042A                     _TRISA2	set	1066
   254                           	global	_TRISA3
   255  042B                     _TRISA3	set	1067
   256                           	global	_TRISC1
   257  0439                     _TRISC1	set	1081
   258                           	global	_TRISC2
   259  043A                     _TRISC2	set	1082
   260                           	global	_EEADR
   261  010D                     _EEADR	set	269
   262                           	global	_EEDATA
   263  010C                     _EEDATA	set	268
   264                           	global	_EECON1
   265  018C                     _EECON1	set	396
   266                           	global	_EECON2
   267  018D                     _EECON2	set	397
   268                           	global	_RD
   269  0C60                     _RD	set	3168
   270                           	global	_WR
   271  0C61                     _WR	set	3169
   272                           	global	_WREN
   273  0C62                     _WREN	set	3170
   274                           	file	"C:\Users\Ghita\AppData\Local\Temp\s3ls."
   275                           	line	#
   276                           psect cinit,class=CODE,delta=2
   277                           global start_initialization
   278  0C2E                     start_initialization:
   279                           
   280                           psect	bssCOMMON,class=COMMON,space=1
   281                           global __pbssCOMMON
   282  0078                     __pbssCOMMON:
   283  0078                     _uw_Usense:
   284  0078                            ds      2
   285                           
   286  007A                     _ub_char:
   287  007A                            ds      1
   288                           
   289  007B                     _ub_counter_retry:
   290  007B                            ds      1
   291                           
   292  007C                     _ub_islimit_power:
   293  007C                            ds      1
   294                           
   295                           psect	bssBANK0,class=BANK0,space=1
   296                           global __pbssBANK0
   297  0020                     __pbssBANK0:
   298  0020                     _s_pwm:
   299  0020                            ds      7
   300                           
   301  0027                     _duty_pwm1:
   302  0027                            ds      2
   303                           
   304  0029                     _duty_pwm2:
   305  0029                            ds      2
   306                           
   307  002B                     _ubNumberINT:
   308  002B                            ds      2
   309                           
   310  002D                     _uwNumberFRC:
   311  002D                            ds      2
   312                           
   313  002F                     _uw_ADCV0:
   314  002F                            ds      2
   315                           
   316  0031                     _uw_ADCV1:
   317  0031                            ds      2
   318                           
   319  0033                     _uw_ADCV2:
   320  0033                            ds      2
   321                           
   322  0035                     _uw_ADCV3:
   323  0035                            ds      2
   324                           
   325  0037                     _uw_ADCVS4:
   326  0037                            ds      2
   327                           
   328  0039                     _uw_IPot:
   329  0039                            ds      2
   330                           
   331  003B                     _uw_adcCH0:
   332  003B                            ds      2
   333                           
   334  003D                     _uw_adcCH1:
   335  003D                            ds      2
   336                           
   337  003F                     _uw_adcCH2:
   338  003F                            ds      2
   339                           
   340  0041                     _uw_adcCH3:
   341  0041                            ds      2
   342                           
   343  0043                     _uw_adcCH4:
   344  0043                            ds      2
   345                           
   346  0045                     _ubDispIndex:
   347  0045                            ds      1
   348                           
   349  0046                     _ubFirstByte:
   350  0046                            ds      1
   351                           
   352  0047                     _ubFourthByte:
   353  0047                            ds      1
   354                           
   355  0048                     _ubSecondByte:
   356  0048                            ds      1
   357                           
   358  0049                     _ubThrdByte:
   359  0049                            ds      1
   360                           
   361  004A                     _ub_Datawrite:
   362  004A                            ds      1
   363                           
   364  004B                     _ub_busy:
   365  004B                            ds      1
   366                           
   367  004C                     _ub_buton_s2:
   368  004C                            ds      1
   369                           
   370  004D                     _ub_buton_s3:
   371  004D                            ds      1
   372                           
   373  004E                     _ub_counter_1:
   374  004E                            ds      1
   375                           
   376  004F                     _ub_state_Display2r:
   377  004F                            ds      1
   378                           
   379  0050                     _ub_task:
   380  0050                            ds      1
   381                           
   382                           psect	bssBANK1,class=BANK1,space=1
   383                           global __pbssBANK1
   384  00A0                     __pbssBANK1:
   385  00A0                     _ubDisplay_buf:
   386  00A0                            ds      16
   387                           
   388  00B0                     _adc_buffer:
   389  00B0                            ds      10
   390                           
   391  00BA                     _ul_mseconds:
   392  00BA                            ds      4
   393                           
   394  00BE                     _ul_task1:
   395  00BE                            ds      4
   396                           
   397  00C2                     _ul_task2:
   398  00C2                            ds      4
   399                           
   400  00C6                     _temp_duty_pwm2:
   401  00C6                            ds      2
   402                           
   403  00C8                     _uw_ADCVS3:
   404  00C8                            ds      2
   405                           
   406  00CA                     _uw_Isense:
   407  00CA                            ds      2
   408                           
   409  00CC                     _uw_UPot:
   410  00CC                            ds      2
   411                           
   412  00CE                     _auwPWMOut:
   413  00CE                            ds      16
   414                           
   415  00DE                     _auwUPOT:
   416  00DE                            ds      10
   417                           
   418                           psect clrtext,class=CODE,delta=2
   419                           global clear_ram
   420                           ;	Called with FSR containing the base address, and
   421                           ;	W with the last address+1
   422  0BC4                     clear_ram:
   423  0BC4  0064               	clrwdt			;clear the watchdog before getting into this loop
   424  0BC5                     clrloop:
   425  0BC5  0180               	clrf	indf		;clear RAM location pointed to by FSR
   426  0BC6  0A84               	incf	fsr,f		;increment pointer
   427  0BC7  0604               	xorwf	fsr,w		;XOR with final address
   428  0BC8  1903               	btfsc	status,2	;have we reached the end yet?
   429  0BC9  3400               	retlw	0		;all done for this memory range, return
   430  0BCA  0604               	xorwf	fsr,w		;XOR again to restore value
   431  0BCB  2BC5               	goto	clrloop		;do the next byte
   432                           
   433                           ; Clear objects allocated to COMMON
   434                           psect cinit,class=CODE,delta=2
   435  0C2E  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   436  0C2F  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   437  0C30  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
   438  0C31  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
   439  0C32  01FC               	clrf	((__pbssCOMMON)+4)&07Fh
   440                           ; Clear objects allocated to BANK0
   441                           psect cinit,class=CODE,delta=2
   442  0C33  1383               	bcf	status, 7	;select IRP bank0
   443  0C34  3020               	movlw	low(__pbssBANK0)
   444  0C35  0084               	movwf	fsr
   445  0C36  3051               	movlw	low((__pbssBANK0)+031h)
   446  0C37  120A  158A  23C4   	fcall	clear_ram
              120A  158A         
   447                           ; Clear objects allocated to BANK1
   448                           psect cinit,class=CODE,delta=2
   449  0C3C  30A0               	movlw	low(__pbssBANK1)
   450  0C3D  0084               	movwf	fsr
   451  0C3E  30E8               	movlw	low((__pbssBANK1)+048h)
   452  0C3F  120A  158A  23C4   	fcall	clear_ram
              120A  158A         
   453                           psect cinit,class=CODE,delta=2
   454                           global end_of_initialization
   455                           
   456                           ;End of C runtime variable initialization code
   457                           
   458  0C44                     end_of_initialization:
   459  0C44  0183               clrf status
   460  0C45  120A  118A  2DBE   ljmp _main	;jump to C main() function
   461                           psect	cstackCOMMON,class=COMMON,space=1
   462                           global __pcstackCOMMON
   463  0070                     __pcstackCOMMON:
   464                           	global	?_io_init
   465  0070                     ?_io_init:	; 0 bytes @ 0x0
   466                           	global	?_pwm_update
   467  0070                     ?_pwm_update:	; 0 bytes @ 0x0
   468                           	global	?_pwm_init
   469  0070                     ?_pwm_init:	; 0 bytes @ 0x0
   470                           	global	?_init_signal_procesing
   471  0070                     ?_init_signal_procesing:	; 0 bytes @ 0x0
   472                           	global	?_InitDisplay2raw
   473  0070                     ?_InitDisplay2raw:	; 0 bytes @ 0x0
   474                           	global	?_task_slow
   475  0070                     ?_task_slow:	; 0 bytes @ 0x0
   476                           	global	?_task_fast
   477  0070                     ?_task_fast:	; 0 bytes @ 0x0
   478                           	global	?_Dispaly2raw_task
   479  0070                     ?_Dispaly2raw_task:	; 0 bytes @ 0x0
   480                           	global	?_SetCommand
   481  0070                     ?_SetCommand:	; 0 bytes @ 0x0
   482                           	global	?_WriteData
   483  0070                     ?_WriteData:	; 0 bytes @ 0x0
   484                           	global	?_LCD_delay_us
   485  0070                     ?_LCD_delay_us:	; 0 bytes @ 0x0
   486                           	global	?_adc_init
   487  0070                     ?_adc_init:	; 0 bytes @ 0x0
   488                           	global	?_adc_convert_one_channel
   489  0070                     ?_adc_convert_one_channel:	; 0 bytes @ 0x0
   490                           	global	?_Read_Buton_state
   491  0070                     ?_Read_Buton_state:	; 0 bytes @ 0x0
   492                           	global	?_init
   493  0070                     ?_init:	; 0 bytes @ 0x0
   494                           	global	?_init_timer0
   495  0070                     ?_init_timer0:	; 0 bytes @ 0x0
   496                           	global	?_timer0_isr
   497  0070                     ?_timer0_isr:	; 0 bytes @ 0x0
   498                           	global	??_timer0_isr
   499  0070                     ??_timer0_isr:	; 0 bytes @ 0x0
   500                           	global	?_external_isr
   501  0070                     ?_external_isr:	; 0 bytes @ 0x0
   502                           	global	?_main
   503  0070                     ?_main:	; 0 bytes @ 0x0
   504                           	global	?_IsBusy
   505  0070                     ?_IsBusy:	; 1 bytes @ 0x0
   506  0070                     	ds	4
   507                           	global	??_external_isr
   508  0074                     ??_external_isr:	; 0 bytes @ 0x4
   509  0074                     	ds	4
   510                           psect	cstackBANK0,class=BANK0,space=1
   511                           global __pcstackBANK0
   512  0051                     __pcstackBANK0:
   513                           	global	??_io_init
   514  0051                     ??_io_init:	; 0 bytes @ 0x0
   515                           	global	?_pwm_setPeriod
   516  0051                     ?_pwm_setPeriod:	; 0 bytes @ 0x0
   517                           	global	?_pwm_setDuty
   518  0051                     ?_pwm_setDuty:	; 0 bytes @ 0x0
   519                           	global	??_pwm_init
   520  0051                     ??_pwm_init:	; 0 bytes @ 0x0
   521                           	global	??_init_signal_procesing
   522  0051                     ??_init_signal_procesing:	; 0 bytes @ 0x0
   523                           	global	??_InitDisplay2raw
   524  0051                     ??_InitDisplay2raw:	; 0 bytes @ 0x0
   525                           	global	?_init_botifilter
   526  0051                     ?_init_botifilter:	; 0 bytes @ 0x0
   527                           	global	??_LCD_delay_us
   528  0051                     ??_LCD_delay_us:	; 0 bytes @ 0x0
   529                           	global	??_adc_init
   530  0051                     ??_adc_init:	; 0 bytes @ 0x0
   531                           	global	??_adc_convert_one_channel
   532  0051                     ??_adc_convert_one_channel:	; 0 bytes @ 0x0
   533                           	global	??_init_timer0
   534  0051                     ??_init_timer0:	; 0 bytes @ 0x0
   535                           	global	?___wmul
   536  0051                     ?___wmul:	; 2 bytes @ 0x0
   537                           	global	?___awdiv
   538  0051                     ?___awdiv:	; 2 bytes @ 0x0
   539                           	global	?___awmod
   540  0051                     ?___awmod:	; 2 bytes @ 0x0
   541                           	global	?___lmul
   542  0051                     ?___lmul:	; 4 bytes @ 0x0
   543                           	global	?___lldiv
   544  0051                     ?___lldiv:	; 4 bytes @ 0x0
   545                           	global	pwm_init@loc_channel
   546  0051                     pwm_init@loc_channel:	; 1 bytes @ 0x0
   547                           	global	pwm_setDuty@lul_Duty
   548  0051                     pwm_setDuty@lul_Duty:	; 2 bytes @ 0x0
   549                           	global	pwm_setPeriod@luw_Period
   550  0051                     pwm_setPeriod@luw_Period:	; 2 bytes @ 0x0
   551                           	global	init_botifilter@luwInitValue
   552  0051                     init_botifilter@luwInitValue:	; 2 bytes @ 0x0
   553                           	global	___wmul@multiplier
   554  0051                     ___wmul@multiplier:	; 2 bytes @ 0x0
   555                           	global	___awdiv@divisor
   556  0051                     ___awdiv@divisor:	; 2 bytes @ 0x0
   557                           	global	___awmod@divisor
   558  0051                     ___awmod@divisor:	; 2 bytes @ 0x0
   559                           	global	___lmul@multiplier
   560  0051                     ___lmul@multiplier:	; 4 bytes @ 0x0
   561                           	global	___lldiv@divisor
   562  0051                     ___lldiv@divisor:	; 4 bytes @ 0x0
   563  0051                     	ds	1
   564                           	global	adc_convert_one_channel@ub_channel
   565  0052                     adc_convert_one_channel@ub_channel:	; 1 bytes @ 0x1
   566                           	global	LCD_delay_us@delay
   567  0052                     LCD_delay_us@delay:	; 1 bytes @ 0x1
   568  0052                     	ds	1
   569                           	global	??_pwm_setPeriod
   570  0053                     ??_pwm_setPeriod:	; 0 bytes @ 0x2
   571                           	global	??_pwm_setDuty
   572  0053                     ??_pwm_setDuty:	; 0 bytes @ 0x2
   573                           	global	??_init_botifilter
   574  0053                     ??_init_botifilter:	; 0 bytes @ 0x2
   575                           	global	adc_convert_one_channel@ub_Index1
   576  0053                     adc_convert_one_channel@ub_Index1:	; 1 bytes @ 0x2
   577                           	global	LCD_delay_us@index
   578  0053                     LCD_delay_us@index:	; 1 bytes @ 0x2
   579                           	global	___wmul@multiplicand
   580  0053                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   581                           	global	___awdiv@dividend
   582  0053                     ___awdiv@dividend:	; 2 bytes @ 0x2
   583                           	global	___awmod@dividend
   584  0053                     ___awmod@dividend:	; 2 bytes @ 0x2
   585  0053                     	ds	1
   586                           	global	??_SetCommand
   587  0054                     ??_SetCommand:	; 0 bytes @ 0x3
   588                           	global	??_IsBusy
   589  0054                     ??_IsBusy:	; 0 bytes @ 0x3
   590                           	global	??_WriteData
   591  0054                     ??_WriteData:	; 0 bytes @ 0x3
   592                           	global	pwm_setDuty@loc_channel
   593  0054                     pwm_setDuty@loc_channel:	; 1 bytes @ 0x3
   594                           	global	SetCommand@ub_Command
   595  0054                     SetCommand@ub_Command:	; 1 bytes @ 0x3
   596                           	global	WriteData@ub_Data
   597  0054                     WriteData@ub_Data:	; 1 bytes @ 0x3
   598  0054                     	ds	1
   599                           	global	??___wmul
   600  0055                     ??___wmul:	; 0 bytes @ 0x4
   601                           	global	??___awdiv
   602  0055                     ??___awdiv:	; 0 bytes @ 0x4
   603                           	global	??___awmod
   604  0055                     ??___awmod:	; 0 bytes @ 0x4
   605                           	global	init_botifilter@Buffer
   606  0055                     init_botifilter@Buffer:	; 1 bytes @ 0x4
   607                           	global	___wmul@product
   608  0055                     ___wmul@product:	; 2 bytes @ 0x4
   609                           	global	___lmul@multiplicand
   610  0055                     ___lmul@multiplicand:	; 4 bytes @ 0x4
   611                           	global	___lldiv@dividend
   612  0055                     ___lldiv@dividend:	; 4 bytes @ 0x4
   613  0055                     	ds	1
   614                           	global	IsBusy@ub_Bussy
   615  0056                     IsBusy@ub_Bussy:	; 1 bytes @ 0x5
   616                           	global	init_botifilter@lubindex
   617  0056                     init_botifilter@lubindex:	; 1 bytes @ 0x5
   618                           	global	___awdiv@counter
   619  0056                     ___awdiv@counter:	; 1 bytes @ 0x5
   620                           	global	___awmod@counter
   621  0056                     ___awmod@counter:	; 1 bytes @ 0x5
   622  0056                     	ds	1
   623                           	global	??_Dispaly2raw_task
   624  0057                     ??_Dispaly2raw_task:	; 0 bytes @ 0x6
   625                           	global	?_SetDisplay_Current
   626  0057                     ?_SetDisplay_Current:	; 0 bytes @ 0x6
   627                           	global	?_SetDisplay_Current_target
   628  0057                     ?_SetDisplay_Current_target:	; 0 bytes @ 0x6
   629                           	global	___awdiv@sign
   630  0057                     ___awdiv@sign:	; 1 bytes @ 0x6
   631                           	global	___awmod@sign
   632  0057                     ___awmod@sign:	; 1 bytes @ 0x6
   633                           	global	SetDisplay_Current@uwCurent
   634  0057                     SetDisplay_Current@uwCurent:	; 2 bytes @ 0x6
   635                           	global	SetDisplay_Current_target@uwCurent
   636  0057                     SetDisplay_Current_target@uwCurent:	; 2 bytes @ 0x6
   637  0057                     	ds	1
   638                           	global	??_task_fast
   639  0058                     ??_task_fast:	; 0 bytes @ 0x7
   640                           	global	___awdiv@quotient
   641  0058                     ___awdiv@quotient:	; 2 bytes @ 0x7
   642  0058                     	ds	1
   643                           	global	??_SetDisplay_Current
   644  0059                     ??_SetDisplay_Current:	; 0 bytes @ 0x8
   645                           	global	??_SetDisplay_Current_target
   646  0059                     ??_SetDisplay_Current_target:	; 0 bytes @ 0x8
   647                           	global	??___lmul
   648  0059                     ??___lmul:	; 0 bytes @ 0x8
   649                           	global	??___lldiv
   650  0059                     ??___lldiv:	; 0 bytes @ 0x8
   651  0059                     	ds	1
   652                           	global	?_SetDisplay_Voltage
   653  005A                     ?_SetDisplay_Voltage:	; 0 bytes @ 0x9
   654                           	global	SetDisplay_Voltage@uwVoltage
   655  005A                     SetDisplay_Voltage@uwVoltage:	; 2 bytes @ 0x9
   656                           	global	___lmul@product
   657  005A                     ___lmul@product:	; 4 bytes @ 0x9
   658                           	global	___lldiv@quotient
   659  005A                     ___lldiv@quotient:	; 4 bytes @ 0x9
   660  005A                     	ds	1
   661                           	global	SetDisplay_Current@lubNumber
   662  005B                     SetDisplay_Current@lubNumber:	; 1 bytes @ 0xA
   663                           	global	SetDisplay_Current_target@lubNumber
   664  005B                     SetDisplay_Current_target@lubNumber:	; 1 bytes @ 0xA
   665  005B                     	ds	1
   666                           	global	??_SetDisplay_Voltage
   667  005C                     ??_SetDisplay_Voltage:	; 0 bytes @ 0xB
   668                           	global	SetDisplay_Current@luwTemp
   669  005C                     SetDisplay_Current@luwTemp:	; 2 bytes @ 0xB
   670                           	global	SetDisplay_Current_target@luwTemp
   671  005C                     SetDisplay_Current_target@luwTemp:	; 2 bytes @ 0xB
   672  005C                     	ds	2
   673                           	global	??_pwm_update
   674  005E                     ??_pwm_update:	; 0 bytes @ 0xD
   675                           	global	?_UpotToPWM
   676  005E                     ?_UpotToPWM:	; 1 bytes @ 0xD
   677                           	global	?_Convert_to_Voltage
   678  005E                     ?_Convert_to_Voltage:	; 2 bytes @ 0xD
   679                           	global	?_Divizor_U_Sense
   680  005E                     ?_Divizor_U_Sense:	; 2 bytes @ 0xD
   681                           	global	?_Divizor_U_Pot
   682  005E                     ?_Divizor_U_Pot:	; 2 bytes @ 0xD
   683                           	global	___lldiv@counter
   684  005E                     ___lldiv@counter:	; 1 bytes @ 0xD
   685                           	global	Convert_to_Voltage@uw_raw_value
   686  005E                     Convert_to_Voltage@uw_raw_value:	; 2 bytes @ 0xD
   687                           	global	Divizor_U_Sense@luw_ADCV0
   688  005E                     Divizor_U_Sense@luw_ADCV0:	; 2 bytes @ 0xD
   689                           	global	Divizor_U_Pot@luw_ADCV2
   690  005E                     Divizor_U_Pot@luw_ADCV2:	; 2 bytes @ 0xD
   691                           	global	UpotToPWM@luw_UPot
   692  005E                     UpotToPWM@luw_UPot:	; 2 bytes @ 0xD
   693  005E                     	ds	1
   694                           	global	?_Rawvalue_to_Current
   695  005F                     ?_Rawvalue_to_Current:	; 2 bytes @ 0xE
   696                           	global	SetDisplay_Voltage@lubSecondByte
   697  005F                     SetDisplay_Voltage@lubSecondByte:	; 1 bytes @ 0xE
   698                           	global	Rawvalue_to_Current@luw_ADCV1
   699  005F                     Rawvalue_to_Current@luw_ADCV1:	; 2 bytes @ 0xE
   700  005F                     	ds	1
   701                           	global	??_Convert_to_Voltage
   702  0060                     ??_Convert_to_Voltage:	; 0 bytes @ 0xF
   703                           	global	??_Divizor_U_Sense
   704  0060                     ??_Divizor_U_Sense:	; 0 bytes @ 0xF
   705                           	global	??_Divizor_U_Pot
   706  0060                     ??_Divizor_U_Pot:	; 0 bytes @ 0xF
   707                           	global	??_UpotToPWM
   708  0060                     ??_UpotToPWM:	; 0 bytes @ 0xF
   709                           	global	SetDisplay_Voltage@lubFirstByte
   710  0060                     SetDisplay_Voltage@lubFirstByte:	; 1 bytes @ 0xF
   711  0060                     	ds	1
   712                           	global	??_Rawvalue_to_Current
   713  0061                     ??_Rawvalue_to_Current:	; 0 bytes @ 0x10
   714                           	global	SetDisplay_Voltage@luwNumberFrac
   715  0061                     SetDisplay_Voltage@luwNumberFrac:	; 2 bytes @ 0x10
   716  0061                     	ds	1
   717                           	global	pwm_update@loc_channel
   718  0062                     pwm_update@loc_channel:	; 1 bytes @ 0x11
   719  0062                     	ds	1
   720                           	global	SetDisplay_Voltage@lubNumber
   721  0063                     SetDisplay_Voltage@lubNumber:	; 1 bytes @ 0x12
   722                           	global	pwm_update@luw_duty
   723  0063                     pwm_update@luw_duty:	; 2 bytes @ 0x12
   724  0063                     	ds	1
   725                           	global	Convert_to_Voltage@luw_result
   726  0064                     Convert_to_Voltage@luw_result:	; 2 bytes @ 0x13
   727                           	global	Divizor_U_Sense@luw_UoutSense
   728  0064                     Divizor_U_Sense@luw_UoutSense:	; 2 bytes @ 0x13
   729                           	global	Divizor_U_Pot@luw_UoutSense
   730  0064                     Divizor_U_Pot@luw_UoutSense:	; 2 bytes @ 0x13
   731                           	global	UpotToPWM@lul_temp
   732  0064                     UpotToPWM@lul_temp:	; 4 bytes @ 0x13
   733  0064                     	ds	1
   734                           	global	??_init
   735  0065                     ??_init:	; 0 bytes @ 0x14
   736                           	global	Rawvalue_to_Current@lul_aux
   737  0065                     Rawvalue_to_Current@lul_aux:	; 4 bytes @ 0x14
   738  0065                     	ds	1
   739                           	global	Convert_to_Voltage@lul_result
   740  0066                     Convert_to_Voltage@lul_result:	; 4 bytes @ 0x15
   741                           	global	Divizor_U_Sense@lul_aux
   742  0066                     Divizor_U_Sense@lul_aux:	; 4 bytes @ 0x15
   743                           	global	Divizor_U_Pot@lul_aux
   744  0066                     Divizor_U_Pot@lul_aux:	; 4 bytes @ 0x15
   745  0066                     	ds	2
   746                           	global	UpotToPWM@lub_duty_pwm1
   747  0068                     UpotToPWM@lub_duty_pwm1:	; 1 bytes @ 0x17
   748  0068                     	ds	2
   749                           	global	??_task_slow
   750  006A                     ??_task_slow:	; 0 bytes @ 0x19
   751                           	global	??_Read_Buton_state
   752  006A                     ??_Read_Buton_state:	; 0 bytes @ 0x19
   753  006A                     	ds	4
   754                           	global	??_main
   755  006E                     ??_main:	; 0 bytes @ 0x1D
   756  006E                     	ds	1
   757 ;;Data sizes: Strings 0, constant 0, data 0, bss 126, persistent 0 stack 0
   758 ;;Auto spaces:   Size  Autos    Used
   759 ;; COMMON          14      8      13
   760 ;; BANK0           80     30      79
   761 ;; BANK1           80      0      72
   762 ;; BANK3           96      0       0
   763 ;; BANK2           96      0       0
   764                           
   765 ;;
   766 ;; Pointer list with targets:
   767                           
   768 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   769 ;;
   770 ;; ?___awdiv	int  size(1) Largest target is 0
   771 ;;
   772 ;; ?___awmod	int  size(1) Largest target is 0
   773 ;;
   774 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   775 ;;
   776 ;; ?_Divizor_U_Pot	unsigned short  size(1) Largest target is 0
   777 ;;
   778 ;; ?_Rawvalue_to_Current	unsigned short  size(1) Largest target is 0
   779 ;;
   780 ;; ?_Divizor_U_Sense	unsigned short  size(1) Largest target is 0
   781 ;;
   782 ;; ?___lmul	unsigned long  size(1) Largest target is 0
   783 ;;
   784 ;; ?_Convert_to_Voltage	unsigned short  size(1) Largest target is 0
   785 ;;
   786 ;; init_botifilter@Buffer	PTR unsigned short  size(1) Largest target is 16
   787 ;;		 -> auwPWMOut(BANK1[16]), auwUPOT(BANK1[10]), 
   788 ;;
   789                           
   790                           
   791 ;;
   792 ;; Critical Paths under _main in COMMON
   793 ;;
   794 ;;   None.
   795 ;;
   796 ;; Critical Paths under _external_isr in COMMON
   797 ;;
   798 ;;   _external_isr->_timer0_isr
   799 ;;
   800 ;; Critical Paths under _main in BANK0
   801 ;;
   802 ;;   _main->_task_slow
   803 ;;   _task_fast->_Dispaly2raw_task
   804 ;;   _task_slow->_Convert_to_Voltage
   805 ;;   _task_slow->_Divizor_U_Sense
   806 ;;   _task_slow->_Divizor_U_Pot
   807 ;;   _Dispaly2raw_task->_IsBusy
   808 ;;   _init->_pwm_update
   809 ;;   _Read_Buton_state->_Convert_to_Voltage
   810 ;;   _WriteData->_LCD_delay_us
   811 ;;   _IsBusy->_LCD_delay_us
   812 ;;   _SetCommand->_LCD_delay_us
   813 ;;   _UpotToPWM->___lmul
   814 ;;   _SetDisplay_Current_target->___wmul
   815 ;;   _Divizor_U_Pot->___lmul
   816 ;;   _SetDisplay_Current->___wmul
   817 ;;   _Rawvalue_to_Current->___lldiv
   818 ;;   _SetDisplay_Voltage->___awdiv
   819 ;;   _Divizor_U_Sense->___lmul
   820 ;;   _pwm_update->___lmul
   821 ;;   _Convert_to_Voltage->___lmul
   822 ;;
   823 ;; Critical Paths under _external_isr in BANK0
   824 ;;
   825 ;;   None.
   826 ;;
   827 ;; Critical Paths under _main in BANK1
   828 ;;
   829 ;;   None.
   830 ;;
   831 ;; Critical Paths under _external_isr in BANK1
   832 ;;
   833 ;;   None.
   834 ;;
   835 ;; Critical Paths under _main in BANK3
   836 ;;
   837 ;;   None.
   838 ;;
   839 ;; Critical Paths under _external_isr in BANK3
   840 ;;
   841 ;;   None.
   842 ;;
   843 ;; Critical Paths under _main in BANK2
   844 ;;
   845 ;;   None.
   846 ;;
   847 ;; Critical Paths under _external_isr in BANK2
   848 ;;
   849 ;;   None.
   850                           
   851 ;;
   852 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   853 ;;
   854                           
   855 ;;
   856 ;;Call Graph Tables:
   857 ;;
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   860 ;; ---------------------------------------------------------------------------------
   861 ;; (0) _main                                                 1     1      0    3930
   862 ;;                                             29 BANK0      1     1      0
   863 ;;                               _init
   864 ;;                        _init_timer0
   865 ;;                          _task_slow
   866 ;;                          _task_fast
   867 ;; ---------------------------------------------------------------------------------
   868 ;; (1) _task_fast                                            0     0      0     232
   869 ;;                   _Dispaly2raw_task
   870 ;; ---------------------------------------------------------------------------------
   871 ;; (1) _task_slow                                            4     4      0    3136
   872 ;;                                             25 BANK0      4     4      0
   873 ;;                   _Read_Buton_state
   874 ;;            _adc_convert_one_channel
   875 ;;                 _Convert_to_Voltage
   876 ;;                    _Divizor_U_Sense
   877 ;;                 _SetDisplay_Voltage
   878 ;;                _Rawvalue_to_Current
   879 ;;                 _SetDisplay_Current
   880 ;;                      _Divizor_U_Pot
   881 ;;          _SetDisplay_Current_target
   882 ;;                          _UpotToPWM
   883 ;;                        _pwm_setDuty
   884 ;;                         _pwm_update
   885 ;; ---------------------------------------------------------------------------------
   886 ;; (2) _Dispaly2raw_task                                     1     1      0     232
   887 ;;                                              6 BANK0      1     1      0
   888 ;;                         _SetCommand
   889 ;;                             _IsBusy
   890 ;;                          _WriteData
   891 ;; ---------------------------------------------------------------------------------
   892 ;; (1) _init                                                 0     0      0     562
   893 ;;                            _io_init
   894 ;;                      _pwm_setPeriod
   895 ;;                        _pwm_setDuty
   896 ;;                         _pwm_update
   897 ;;                           _pwm_init
   898 ;;                           _adc_init
   899 ;;              _init_signal_procesing
   900 ;;                    _InitDisplay2raw
   901 ;;                    _init_botifilter
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (2) _Read_Buton_state                                     0     0      0     365
   904 ;;            _adc_convert_one_channel
   905 ;;                 _Convert_to_Voltage
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (3) _WriteData                                            1     1      0      69
   908 ;;                                              3 BANK0      1     1      0
   909 ;;                       _LCD_delay_us
   910 ;; ---------------------------------------------------------------------------------
   911 ;; (3) _IsBusy                                               3     3      0      94
   912 ;;                                              3 BANK0      3     3      0
   913 ;;                       _LCD_delay_us
   914 ;; ---------------------------------------------------------------------------------
   915 ;; (3) _SetCommand                                           1     1      0      69
   916 ;;                                              3 BANK0      1     1      0
   917 ;;                       _LCD_delay_us
   918 ;; ---------------------------------------------------------------------------------
   919 ;; (2) _UpotToPWM                                           11     9      2     185
   920 ;;                                             13 BANK0     11     9      2
   921 ;;                             ___lmul
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (2) _SetDisplay_Current_target                            9     7      2     161
   924 ;;                                              6 BANK0      7     5      2
   925 ;;                             ___wmul
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (2) _Divizor_U_Pot                                       12    10      2     185
   928 ;;                                             13 BANK0     12    10      2
   929 ;;                             ___lmul
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (2) _SetDisplay_Current                                   9     7      2     161
   932 ;;                                              6 BANK0      7     5      2
   933 ;;                             ___wmul
   934 ;; ---------------------------------------------------------------------------------
   935 ;; (2) _Rawvalue_to_Current                                 10     8      2     231
   936 ;;                                             14 BANK0     10     8      2
   937 ;;                            ___lldiv
   938 ;; ---------------------------------------------------------------------------------
   939 ;; (2) _SetDisplay_Voltage                                  10     8      2     916
   940 ;;                                              9 BANK0     10     8      2
   941 ;;                            ___awmod
   942 ;;                            ___awdiv
   943 ;;                             ___wmul
   944 ;; ---------------------------------------------------------------------------------
   945 ;; (2) _Divizor_U_Sense                                     12    10      2     185
   946 ;;                                             13 BANK0     12    10      2
   947 ;;                             ___lmul
   948 ;; ---------------------------------------------------------------------------------
   949 ;; (2) _pwm_update                                           7     7      0     294
   950 ;;                                             13 BANK0      7     7      0
   951 ;;                             ___lmul
   952 ;; ---------------------------------------------------------------------------------
   953 ;; (2) _Convert_to_Voltage                                  12    10      2     185
   954 ;;                                             13 BANK0     12    10      2
   955 ;;                             ___lmul
   956 ;; ---------------------------------------------------------------------------------
   957 ;; (3) ___awmod                                              7     3      4     296
   958 ;;                                              0 BANK0      7     3      4
   959 ;; ---------------------------------------------------------------------------------
   960 ;; (3) ___lldiv                                             14     6      8     162
   961 ;;                                              0 BANK0     14     6      8
   962 ;; ---------------------------------------------------------------------------------
   963 ;; (3) ___awdiv                                              9     5      4     300
   964 ;;                                              0 BANK0      9     5      4
   965 ;; ---------------------------------------------------------------------------------
   966 ;; (3) ___lmul                                              13     5      8      92
   967 ;;                                              0 BANK0     13     5      8
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (3) ___wmul                                               6     2      4      92
   970 ;;                                              0 BANK0      6     2      4
   971 ;; ---------------------------------------------------------------------------------
   972 ;; (4) _LCD_delay_us                                         3     3      0      47
   973 ;;                                              0 BANK0      3     3      0
   974 ;; ---------------------------------------------------------------------------------
   975 ;; (1) _init_timer0                                          0     0      0       0
   976 ;; ---------------------------------------------------------------------------------
   977 ;; (2) _init_botifilter                                      6     4      2     113
   978 ;;                                              0 BANK0      6     4      2
   979 ;; ---------------------------------------------------------------------------------
   980 ;; (2) _InitDisplay2raw                                      1     1      0       0
   981 ;;                                              0 BANK0      1     1      0
   982 ;; ---------------------------------------------------------------------------------
   983 ;; (2) _init_signal_procesing                                0     0      0       0
   984 ;; ---------------------------------------------------------------------------------
   985 ;; (2) _pwm_init                                             1     1      0      22
   986 ;;                                              0 BANK0      1     1      0
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (2) _pwm_setDuty                                          4     2      2      88
   989 ;;                                              0 BANK0      4     2      2
   990 ;; ---------------------------------------------------------------------------------
   991 ;; (2) _pwm_setPeriod                                        3     1      2      45
   992 ;;                                              0 BANK0      3     1      2
   993 ;; ---------------------------------------------------------------------------------
   994 ;; (2) _io_init                                              0     0      0       0
   995 ;; ---------------------------------------------------------------------------------
   996 ;; (2) _adc_convert_one_channel                              3     3      0     180
   997 ;;                                              0 BANK0      3     3      0
   998 ;; ---------------------------------------------------------------------------------
   999 ;; (2) _adc_init                                             0     0      0       0
  1000 ;; ---------------------------------------------------------------------------------
  1001 ;; Estimated maximum stack depth 4
  1002 ;; ---------------------------------------------------------------------------------
  1003 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1004 ;; ---------------------------------------------------------------------------------
  1005 ;; (5) _external_isr                                         4     4      0       0
  1006 ;;                                              4 COMMON     4     4      0
  1007 ;;                         _timer0_isr
  1008 ;; ---------------------------------------------------------------------------------
  1009 ;; (6) _timer0_isr                                           4     4      0       0
  1010 ;;                                              0 COMMON     4     4      0
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; Estimated maximum stack depth 6
  1013 ;; ---------------------------------------------------------------------------------
  1014                           
  1015 ;; Call Graph Graphs:
  1016                           
  1017 ;; _main (ROOT)
  1018 ;;   _init
  1019 ;;     _io_init
  1020 ;;     _pwm_setPeriod
  1021 ;;     _pwm_setDuty
  1022 ;;     _pwm_update
  1023 ;;       ___lmul
  1024 ;;     _pwm_init
  1025 ;;     _adc_init
  1026 ;;     _init_signal_procesing
  1027 ;;     _InitDisplay2raw
  1028 ;;     _init_botifilter
  1029 ;;   _init_timer0
  1030 ;;   _task_slow
  1031 ;;     _Read_Buton_state
  1032 ;;       _adc_convert_one_channel
  1033 ;;       _Convert_to_Voltage
  1034 ;;         ___lmul
  1035 ;;     _adc_convert_one_channel
  1036 ;;     _Convert_to_Voltage
  1037 ;;       ___lmul
  1038 ;;     _Divizor_U_Sense
  1039 ;;       ___lmul
  1040 ;;     _SetDisplay_Voltage
  1041 ;;       ___awmod
  1042 ;;       ___awdiv
  1043 ;;       ___wmul
  1044 ;;     _Rawvalue_to_Current
  1045 ;;       ___lldiv
  1046 ;;     _SetDisplay_Current
  1047 ;;       ___wmul
  1048 ;;     _Divizor_U_Pot
  1049 ;;       ___lmul
  1050 ;;     _SetDisplay_Current_target
  1051 ;;       ___wmul
  1052 ;;     _UpotToPWM
  1053 ;;       ___lmul
  1054 ;;     _pwm_setDuty
  1055 ;;     _pwm_update
  1056 ;;       ___lmul
  1057 ;;   _task_fast
  1058 ;;     _Dispaly2raw_task
  1059 ;;       _SetCommand
  1060 ;;         _LCD_delay_us
  1061 ;;       _IsBusy
  1062 ;;         _LCD_delay_us
  1063 ;;       _WriteData
  1064 ;;         _LCD_delay_us
  1065 ;;
  1066 ;; _external_isr (ROOT)
  1067 ;;   _timer0_isr
  1068 ;;
  1069                           
  1070 ;; Address spaces:
  1071                           
  1072 ;;Name               Size   Autos  Total    Cost      Usage
  1073 ;;BITCOMMON            E      0       0       0        0.0%
  1074 ;;EEDATA             100      0       0       0        0.0%
  1075 ;;NULL                 0      0       0       0        0.0%
  1076 ;;CODE                 0      0       0       0        0.0%
  1077 ;;COMMON               E      8       D       1       92.9%
  1078 ;;BITSFR0              0      0       0       1        0.0%
  1079 ;;SFR0                 0      0       0       1        0.0%
  1080 ;;BITSFR1              0      0       0       2        0.0%
  1081 ;;SFR1                 0      0       0       2        0.0%
  1082 ;;STACK                0      0       8       2        0.0%
  1083 ;;ABS                  0      0      A4       3        0.0%
  1084 ;;BITBANK0            50      0       0       4        0.0%
  1085 ;;BITSFR3              0      0       0       4        0.0%
  1086 ;;SFR3                 0      0       0       4        0.0%
  1087 ;;BANK0               50     1E      4F       5       98.8%
  1088 ;;BITSFR2              0      0       0       5        0.0%
  1089 ;;SFR2                 0      0       0       5        0.0%
  1090 ;;BITBANK1            50      0       0       6        0.0%
  1091 ;;BANK1               50      0      48       7       90.0%
  1092 ;;BITBANK3            60      0       0       8        0.0%
  1093 ;;BANK3               60      0       0       9        0.0%
  1094 ;;BITBANK2            60      0       0      10        0.0%
  1095 ;;BANK2               60      0       0      11        0.0%
  1096 ;;DATA                 0      0      AC      12        0.0%
  1097                           
  1098                           	global	_main
  1099                           psect	maintext,global,class=CODE,delta=2
  1100                           global __pmaintext
  1101  05BE                     __pmaintext:
  1102                           
  1103 ;; *************** function _main *****************
  1104 ;; Defined at:
  1105 ;;		line 77 in file "E:\my_projects\2013\power\software\main.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;		None               void
  1112 ;; Registers used:
  1113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 17F/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0
  1121 ;;      Temps:          0       1       0       0       0
  1122 ;;      Totals:         0       1       0       0       0
  1123 ;;Total ram usage:        1 bytes
  1124 ;; Hardware stack levels required when called:    6
  1125 ;; This function calls:
  1126 ;;		_init
  1127 ;;		_init_timer0
  1128 ;;		_task_slow
  1129 ;;		_task_fast
  1130 ;; This function is called by:
  1131 ;;		Startup code after reset
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           psect	maintext
  1135                           	file	"E:\my_projects\2013\power\software\main.c"
  1136                           	line	77
  1137                           	global	__size_of_main
  1138  0073                     	__size_of_main	equ	__end_of_main-_main
  1139                           	
  1140  05BE                     _main:	
  1141                           	opt	stack 2
  1142                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1143                           	line	78
  1144                           	
  1145  05BE                     l11229:	
  1146                           ;main.c: 78: init();
  1147  05BE  120A  118A  2715   	fcall	_init
              120A  118A         
  1148                           	line	79
  1149                           	
  1150  05C3                     l11231:	
  1151                           ;main.c: 79: init_timer0();
  1152  05C3  120A  118A  27F5   	fcall	_init_timer0
              120A  118A         
  1153  05C8  2DC9               	goto	l11233
  1154                           	line	81
  1155                           ;main.c: 81: while(1)
  1156                           	
  1157  05C9                     l3166:	
  1158                           	line	84
  1159                           	
  1160  05C9                     l11233:	
  1161                           ;main.c: 82: {
  1162                           ;main.c: 84: if ((ub_task&0x02)==0x2)
  1163  05C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1164  05CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1165  05CB  1CD0               	btfss	(_ub_task),(1)&7
  1166  05CC  2DCE               	goto	u4471
  1167  05CD  2DCF               	goto	u4470
  1168  05CE                     u4471:
  1169  05CE  2DEC               	goto	l11241
  1170  05CF                     u4470:
  1171                           	line	86
  1172                           	
  1173  05CF                     l11235:	
  1174                           ;main.c: 85: {
  1175                           ;main.c: 86: task_slow();
  1176  05CF  120A  118A  2015   	fcall	_task_slow
              120A  118A         
  1177                           	line	87
  1178                           	
  1179  05D4                     l11237:	
  1180                           ;main.c: 87: ub_task=ub_task&(~0x02);
  1181  05D4  1283               	bcf	status, 5	;RP0=0, select bank0
  1182  05D5  1303               	bcf	status, 6	;RP1=0, select bank0
  1183  05D6  0850               	movf	(_ub_task),w
  1184  05D7  39FD               	andlw	0FDh
  1185  05D8  00EE               	movwf	(??_main+0)+0
  1186  05D9  086E               	movf	(??_main+0)+0,w
  1187  05DA  00D0               	movwf	(_ub_task)
  1188                           	line	88
  1189                           	
  1190  05DB                     l11239:	
  1191                           ;main.c: 88: ul_task1++;
  1192  05DB  3001               	movlw	01h
  1193  05DC  1683               	bsf	status, 5	;RP0=1, select bank1
  1194  05DD  1303               	bcf	status, 6	;RP1=0, select bank1
  1195  05DE  07BE               	addwf	(_ul_task1)^080h,f
  1196  05DF  3000               	movlw	0
  1197  05E0  1803               	skipnc
  1198  05E1  3001               movlw 1
  1199  05E2  07BF               	addwf	(_ul_task1+1)^080h,f
  1200  05E3  3000               	movlw	0
  1201  05E4  1803               	skipnc
  1202  05E5  3001               movlw 1
  1203  05E6  07C0               	addwf	(_ul_task1+2)^080h,f
  1204  05E7  3000               	movlw	0
  1205  05E8  1803               	skipnc
  1206  05E9  3001               movlw 1
  1207  05EA  07C1               	addwf	(_ul_task1+3)^080h,f
  1208  05EB  2DEC               	goto	l11241
  1209                           	line	89
  1210                           	
  1211  05EC                     l3167:	
  1212                           	line	90
  1213                           	
  1214  05EC                     l11241:	
  1215                           ;main.c: 89: }
  1216                           ;main.c: 90: if ((ub_task&0x01)==0x1)
  1217  05EC  1283               	bcf	status, 5	;RP0=0, select bank0
  1218  05ED  1C50               	btfss	(_ub_task),(0)&7
  1219  05EE  2DF0               	goto	u4481
  1220  05EF  2DF1               	goto	u4480
  1221  05F0                     u4481:
  1222  05F0  2DFE               	goto	l11247
  1223  05F1                     u4480:
  1224                           	line	92
  1225                           	
  1226  05F1                     l11243:	
  1227                           ;main.c: 91: {
  1228                           ;main.c: 92: task_fast();
  1229  05F1  120A  158A  23BD   	fcall	_task_fast
              120A  118A         
  1230                           	line	93
  1231                           	
  1232  05F6                     l11245:	
  1233                           ;main.c: 93: ub_task=ub_task&(~0x01);
  1234  05F6  1283               	bcf	status, 5	;RP0=0, select bank0
  1235  05F7  1303               	bcf	status, 6	;RP1=0, select bank0
  1236  05F8  0850               	movf	(_ub_task),w
  1237  05F9  39FE               	andlw	0FEh
  1238  05FA  00EE               	movwf	(??_main+0)+0
  1239  05FB  086E               	movf	(??_main+0)+0,w
  1240  05FC  00D0               	movwf	(_ub_task)
  1241  05FD  2DFE               	goto	l11247
  1242                           	line	94
  1243                           	
  1244  05FE                     l3168:	
  1245                           	line	96
  1246                           	
  1247  05FE                     l11247:	
  1248                           ;main.c: 94: }
  1249                           ;main.c: 96: if (ul_mseconds>0Xffffff00)
  1250  05FE  30FF               	movlw	0FFh
  1251  05FF  1683               	bsf	status, 5	;RP0=1, select bank1
  1252  0600  1303               	bcf	status, 6	;RP1=0, select bank1
  1253  0601  023D               	subwf	(_ul_mseconds+3)^080h,w
  1254  0602  1D03               	skipz
  1255  0603  2E0E               	goto	u4495
  1256  0604  30FF               	movlw	0FFh
  1257  0605  023C               	subwf	(_ul_mseconds+2)^080h,w
  1258  0606  1D03               	skipz
  1259  0607  2E0E               	goto	u4495
  1260  0608  30FF               	movlw	0FFh
  1261  0609  023B               	subwf	(_ul_mseconds+1)^080h,w
  1262  060A  1D03               	skipz
  1263  060B  2E0E               	goto	u4495
  1264  060C  3001               	movlw	01h
  1265  060D  023A               	subwf	(_ul_mseconds)^080h,w
  1266  060E                     u4495:
  1267  060E  1C03               	skipc
  1268  060F  2E11               	goto	u4491
  1269  0610  2E12               	goto	u4490
  1270  0611                     u4491:
  1271  0611  2DC9               	goto	l11233
  1272  0612                     u4490:
  1273                           	line	98
  1274                           	
  1275  0612                     l11249:	
  1276                           ;main.c: 97: {
  1277                           ;main.c: 98: ul_mseconds=0;
  1278  0612  3000               	movlw	0
  1279  0613  00BD               	movwf	(_ul_mseconds+3)^080h
  1280  0614  3000               	movlw	0
  1281  0615  00BC               	movwf	(_ul_mseconds+2)^080h
  1282  0616  3000               	movlw	0
  1283  0617  00BB               	movwf	(_ul_mseconds+1)^080h
  1284  0618  3000               	movlw	0
  1285  0619  00BA               	movwf	(_ul_mseconds)^080h
  1286                           
  1287                           	line	99
  1288                           ;main.c: 99: ul_task1=0;
  1289  061A  3000               	movlw	0
  1290  061B  00C1               	movwf	(_ul_task1+3)^080h
  1291  061C  3000               	movlw	0
  1292  061D  00C0               	movwf	(_ul_task1+2)^080h
  1293  061E  3000               	movlw	0
  1294  061F  00BF               	movwf	(_ul_task1+1)^080h
  1295  0620  3000               	movlw	0
  1296  0621  00BE               	movwf	(_ul_task1)^080h
  1297                           
  1298                           	line	100
  1299                           ;main.c: 100: ul_task2=0;
  1300  0622  3000               	movlw	0
  1301  0623  00C5               	movwf	(_ul_task2+3)^080h
  1302  0624  3000               	movlw	0
  1303  0625  00C4               	movwf	(_ul_task2+2)^080h
  1304  0626  3000               	movlw	0
  1305  0627  00C3               	movwf	(_ul_task2+1)^080h
  1306  0628  3000               	movlw	0
  1307  0629  00C2               	movwf	(_ul_task2)^080h
  1308                           
  1309                           	line	101
  1310                           	
  1311  062A                     l11251:	
  1312                           ;main.c: 101: {GIE=1;};
  1313  062A  178B               	bsf	(95/8),(95)&7
  1314  062B  2DC9               	goto	l11233
  1315                           	line	102
  1316                           	
  1317  062C                     l3169:	
  1318  062C  2DC9               	goto	l11233
  1319                           	line	103
  1320                           	
  1321  062D                     l3170:	
  1322                           	line	81
  1323  062D  2DC9               	goto	l11233
  1324                           	
  1325  062E                     l3171:	
  1326                           	line	104
  1327                           	
  1328  062E                     l3172:	
  1329                           	global	start
  1330  062E  120A  118A  2812   	ljmp	start
  1331                           	opt stack 0
  1332                           GLOBAL	__end_of_main
  1333  0631                     	__end_of_main:
  1334 ;; =============== function _main ends ============
  1335                           
  1336                           	signat	_main,88
  1337                           	global	_task_fast
  1338                           psect	text819,local,class=CODE,delta=2
  1339                           global __ptext819
  1340  0BBD                     __ptext819:
  1341                           
  1342 ;; *************** function _task_fast *****************
  1343 ;; Defined at:
  1344 ;;		line 38 in file "E:\my_projects\2013\power\software\tasks.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;		None               void
  1351 ;; Registers used:
  1352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0
  1361 ;;      Totals:         0       0       0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    5
  1365 ;; This function calls:
  1366 ;;		_Dispaly2raw_task
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           psect	text819
  1372                           	file	"E:\my_projects\2013\power\software\tasks.c"
  1373                           	line	38
  1374                           	global	__size_of_task_fast
  1375  0007                     	__size_of_task_fast	equ	__end_of_task_fast-_task_fast
  1376                           	
  1377  0BBD                     _task_fast:	
  1378                           	opt	stack 2
  1379                           ; Regs used in _task_fast: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1380                           	line	39
  1381                           	
  1382  0BBD                     l11225:	
  1383                           # 39 "E:\my_projects\2013\power\software\tasks.c"
  1384  0BBD  0064               clrwdt ;#
  1385                           psect	text819
  1386                           	line	41
  1387                           	
  1388  0BBE                     l11227:	
  1389                           ;tasks.c: 41: Dispaly2raw_task();
  1390  0BBE  120A  118A  21AA   	fcall	_Dispaly2raw_task
              120A  158A         
  1391                           	line	42
  1392                           	
  1393  0BC3                     l5124:	
  1394  0BC3  0008               	return
  1395                           	opt stack 0
  1396                           GLOBAL	__end_of_task_fast
  1397  0BC4                     	__end_of_task_fast:
  1398 ;; =============== function _task_fast ends ============
  1399                           
  1400                           	signat	_task_fast,88
  1401                           	global	_task_slow
  1402                           psect	text820,local,class=CODE,delta=2
  1403                           global __ptext820
  1404  0015                     __ptext820:
  1405                           
  1406 ;; *************** function _task_slow *****************
  1407 ;; Defined at:
  1408 ;;		line 45 in file "E:\my_projects\2013\power\software\tasks.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;		None               void
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1422 ;;      Params:         0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0
  1424 ;;      Temps:          0       4       0       0       0
  1425 ;;      Totals:         0       4       0       0       0
  1426 ;;Total ram usage:        4 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    5
  1429 ;; This function calls:
  1430 ;;		_Read_Buton_state
  1431 ;;		_adc_convert_one_channel
  1432 ;;		_Convert_to_Voltage
  1433 ;;		_Divizor_U_Sense
  1434 ;;		_SetDisplay_Voltage
  1435 ;;		_Rawvalue_to_Current
  1436 ;;		_SetDisplay_Current
  1437 ;;		_Divizor_U_Pot
  1438 ;;		_SetDisplay_Current_target
  1439 ;;		_UpotToPWM
  1440 ;;		_pwm_setDuty
  1441 ;;		_pwm_update
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           psect	text820
  1447                           	file	"E:\my_projects\2013\power\software\tasks.c"
  1448                           	line	45
  1449                           	global	__size_of_task_slow
  1450  0195                     	__size_of_task_slow	equ	__end_of_task_slow-_task_slow
  1451                           	
  1452  0015                     _task_slow:	
  1453                           	opt	stack 2
  1454                           ; Regs used in _task_slow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1455                           	line	48
  1456                           	
  1457  0015                     l11171:	
  1458                           ;tasks.c: 48: Read_Buton_state();
  1459  0015  120A  158A  257E   	fcall	_Read_Buton_state
              120A  118A         
  1460                           	line	52
  1461                           ;tasks.c: 52: adc_convert_one_channel(0);
  1462  001A  3000               	movlw	(0)
  1463  001B  120A  118A  2631   	fcall	_adc_convert_one_channel
              120A  118A         
  1464                           	line	53
  1465                           	
  1466  0020                     l11173:	
  1467                           ;tasks.c: 53: uw_adcCH0=(adc_buffer[0]);
  1468  0020  1683               	bsf	status, 5	;RP0=1, select bank1
  1469  0021  1303               	bcf	status, 6	;RP1=0, select bank1
  1470  0022  0831               	movf	(_adc_buffer+1)^080h,w
  1471  0023  1283               	bcf	status, 5	;RP0=0, select bank0
  1472  0024  1303               	bcf	status, 6	;RP1=0, select bank0
  1473  0025  01BC               	clrf	(_uw_adcCH0+1)
  1474  0026  07BC               	addwf	(_uw_adcCH0+1)
  1475  0027  1683               	bsf	status, 5	;RP0=1, select bank1
  1476  0028  1303               	bcf	status, 6	;RP1=0, select bank1
  1477  0029  0830               	movf	(_adc_buffer)^080h,w
  1478  002A  1283               	bcf	status, 5	;RP0=0, select bank0
  1479  002B  1303               	bcf	status, 6	;RP1=0, select bank0
  1480  002C  01BB               	clrf	(_uw_adcCH0)
  1481  002D  07BB               	addwf	(_uw_adcCH0)
  1482                           
  1483                           	line	55
  1484                           	
  1485  002E                     l11175:	
  1486                           ;tasks.c: 55: uw_ADCV0 = Convert_to_Voltage(uw_adcCH0);
  1487  002E  083C               	movf	(_uw_adcCH0+1),w
  1488  002F  01DF               	clrf	(?_Convert_to_Voltage+1)
  1489  0030  07DF               	addwf	(?_Convert_to_Voltage+1)
  1490  0031  083B               	movf	(_uw_adcCH0),w
  1491  0032  01DE               	clrf	(?_Convert_to_Voltage)
  1492  0033  07DE               	addwf	(?_Convert_to_Voltage)
  1493                           
  1494  0034  120A  158A  2655   	fcall	_Convert_to_Voltage
              120A  118A         
  1495  0039  1283               	bcf	status, 5	;RP0=0, select bank0
  1496  003A  1303               	bcf	status, 6	;RP1=0, select bank0
  1497  003B  085F               	movf	(1+(?_Convert_to_Voltage)),w
  1498  003C  01B0               	clrf	(_uw_ADCV0+1)
  1499  003D  07B0               	addwf	(_uw_ADCV0+1)
  1500  003E  085E               	movf	(0+(?_Convert_to_Voltage)),w
  1501  003F  01AF               	clrf	(_uw_ADCV0)
  1502  0040  07AF               	addwf	(_uw_ADCV0)
  1503                           
  1504                           	line	56
  1505                           	
  1506  0041                     l11177:	
  1507                           ;tasks.c: 56: uw_Usense = Divizor_U_Sense(uw_ADCV0);
  1508  0041  0830               	movf	(_uw_ADCV0+1),w
  1509  0042  01DF               	clrf	(?_Divizor_U_Sense+1)
  1510  0043  07DF               	addwf	(?_Divizor_U_Sense+1)
  1511  0044  082F               	movf	(_uw_ADCV0),w
  1512  0045  01DE               	clrf	(?_Divizor_U_Sense)
  1513  0046  07DE               	addwf	(?_Divizor_U_Sense)
  1514                           
  1515  0047  120A  158A  26A5   	fcall	_Divizor_U_Sense
              120A  118A         
  1516  004C  1283               	bcf	status, 5	;RP0=0, select bank0
  1517  004D  1303               	bcf	status, 6	;RP1=0, select bank0
  1518  004E  085F               	movf	(1+(?_Divizor_U_Sense)),w
  1519  004F  01F9               	clrf	(_uw_Usense+1)
  1520  0050  07F9               	addwf	(_uw_Usense+1)
  1521  0051  085E               	movf	(0+(?_Divizor_U_Sense)),w
  1522  0052  01F8               	clrf	(_uw_Usense)
  1523  0053  07F8               	addwf	(_uw_Usense)
  1524                           
  1525                           	line	57
  1526                           	
  1527  0054                     l11179:	
  1528                           ;tasks.c: 57: SetDisplay_Voltage(uw_Usense);
  1529  0054  0879               	movf	(_uw_Usense+1),w
  1530  0055  01DB               	clrf	(?_SetDisplay_Voltage+1)
  1531  0056  07DB               	addwf	(?_SetDisplay_Voltage+1)
  1532  0057  0878               	movf	(_uw_Usense),w
  1533  0058  01DA               	clrf	(?_SetDisplay_Voltage)
  1534  0059  07DA               	addwf	(?_SetDisplay_Voltage)
  1535                           
  1536  005A  120A  118A  23A5   	fcall	_SetDisplay_Voltage
              120A  118A         
  1537                           	line	61
  1538                           	
  1539  005F                     l11181:	
  1540                           ;tasks.c: 61: adc_convert_one_channel(1);
  1541  005F  3001               	movlw	(01h)
  1542  0060  120A  118A  2631   	fcall	_adc_convert_one_channel
              120A  118A         
  1543                           	line	62
  1544                           	
  1545  0065                     l11183:	
  1546                           ;tasks.c: 62: uw_adcCH1=(adc_buffer[1]);
  1547  0065  1683               	bsf	status, 5	;RP0=1, select bank1
  1548  0066  1303               	bcf	status, 6	;RP1=0, select bank1
  1549  0067  0833               	movf	1+(_adc_buffer)^080h+02h,w
  1550  0068  1283               	bcf	status, 5	;RP0=0, select bank0
  1551  0069  1303               	bcf	status, 6	;RP1=0, select bank0
  1552  006A  01BE               	clrf	(_uw_adcCH1+1)
  1553  006B  07BE               	addwf	(_uw_adcCH1+1)
  1554  006C  1683               	bsf	status, 5	;RP0=1, select bank1
  1555  006D  1303               	bcf	status, 6	;RP1=0, select bank1
  1556  006E  0832               	movf	0+(_adc_buffer)^080h+02h,w
  1557  006F  1283               	bcf	status, 5	;RP0=0, select bank0
  1558  0070  1303               	bcf	status, 6	;RP1=0, select bank0
  1559  0071  01BD               	clrf	(_uw_adcCH1)
  1560  0072  07BD               	addwf	(_uw_adcCH1)
  1561                           
  1562                           	line	64
  1563                           ;tasks.c: 64: uw_ADCV1 = Convert_to_Voltage(uw_adcCH1);
  1564  0073  083E               	movf	(_uw_adcCH1+1),w
  1565  0074  01DF               	clrf	(?_Convert_to_Voltage+1)
  1566  0075  07DF               	addwf	(?_Convert_to_Voltage+1)
  1567  0076  083D               	movf	(_uw_adcCH1),w
  1568  0077  01DE               	clrf	(?_Convert_to_Voltage)
  1569  0078  07DE               	addwf	(?_Convert_to_Voltage)
  1570                           
  1571  0079  120A  158A  2655   	fcall	_Convert_to_Voltage
              120A  118A         
  1572  007E  1283               	bcf	status, 5	;RP0=0, select bank0
  1573  007F  1303               	bcf	status, 6	;RP1=0, select bank0
  1574  0080  085F               	movf	(1+(?_Convert_to_Voltage)),w
  1575  0081  01B2               	clrf	(_uw_ADCV1+1)
  1576  0082  07B2               	addwf	(_uw_ADCV1+1)
  1577  0083  085E               	movf	(0+(?_Convert_to_Voltage)),w
  1578  0084  01B1               	clrf	(_uw_ADCV1)
  1579  0085  07B1               	addwf	(_uw_ADCV1)
  1580                           
  1581                           	line	65
  1582                           ;tasks.c: 65: uw_Isense = Rawvalue_to_Current(uw_ADCV1);
  1583  0086  0832               	movf	(_uw_ADCV1+1),w
  1584  0087  01E0               	clrf	(?_Rawvalue_to_Current+1)
  1585  0088  07E0               	addwf	(?_Rawvalue_to_Current+1)
  1586  0089  0831               	movf	(_uw_ADCV1),w
  1587  008A  01DF               	clrf	(?_Rawvalue_to_Current)
  1588  008B  07DF               	addwf	(?_Rawvalue_to_Current)
  1589                           
  1590  008C  120A  158A  2745   	fcall	_Rawvalue_to_Current
              120A  118A         
  1591  0091  1283               	bcf	status, 5	;RP0=0, select bank0
  1592  0092  1303               	bcf	status, 6	;RP1=0, select bank0
  1593  0093  0860               	movf	(1+(?_Rawvalue_to_Current)),w
  1594  0094  1683               	bsf	status, 5	;RP0=1, select bank1
  1595  0095  1303               	bcf	status, 6	;RP1=0, select bank1
  1596  0096  01CB               	clrf	(_uw_Isense+1)^080h
  1597  0097  07CB               	addwf	(_uw_Isense+1)^080h
  1598  0098  1283               	bcf	status, 5	;RP0=0, select bank0
  1599  0099  1303               	bcf	status, 6	;RP1=0, select bank0
  1600  009A  085F               	movf	(0+(?_Rawvalue_to_Current)),w
  1601  009B  1683               	bsf	status, 5	;RP0=1, select bank1
  1602  009C  1303               	bcf	status, 6	;RP1=0, select bank1
  1603  009D  01CA               	clrf	(_uw_Isense)^080h
  1604  009E  07CA               	addwf	(_uw_Isense)^080h
  1605                           
  1606                           	line	66
  1607                           ;tasks.c: 66: SetDisplay_Current(uw_Isense);
  1608  009F  084B               	movf	(_uw_Isense+1)^080h,w
  1609  00A0  1283               	bcf	status, 5	;RP0=0, select bank0
  1610  00A1  1303               	bcf	status, 6	;RP1=0, select bank0
  1611  00A2  01D8               	clrf	(?_SetDisplay_Current+1)
  1612  00A3  07D8               	addwf	(?_SetDisplay_Current+1)
  1613  00A4  1683               	bsf	status, 5	;RP0=1, select bank1
  1614  00A5  1303               	bcf	status, 6	;RP1=0, select bank1
  1615  00A6  084A               	movf	(_uw_Isense)^080h,w
  1616  00A7  1283               	bcf	status, 5	;RP0=0, select bank0
  1617  00A8  1303               	bcf	status, 6	;RP1=0, select bank0
  1618  00A9  01D7               	clrf	(?_SetDisplay_Current)
  1619  00AA  07D7               	addwf	(?_SetDisplay_Current)
  1620                           
  1621  00AB  120A  118A  24CF   	fcall	_SetDisplay_Current
              120A  118A         
  1622                           	line	69
  1623                           	
  1624  00B0                     l11185:	
  1625                           ;tasks.c: 69: adc_convert_one_channel(3);
  1626  00B0  3003               	movlw	(03h)
  1627  00B1  120A  118A  2631   	fcall	_adc_convert_one_channel
              120A  118A         
  1628                           	line	70
  1629                           	
  1630  00B6                     l11187:	
  1631                           ;tasks.c: 70: uw_adcCH3=(adc_buffer[3]);
  1632  00B6  1683               	bsf	status, 5	;RP0=1, select bank1
  1633  00B7  1303               	bcf	status, 6	;RP1=0, select bank1
  1634  00B8  0837               	movf	1+(_adc_buffer)^080h+06h,w
  1635  00B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1636  00BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1637  00BB  01C2               	clrf	(_uw_adcCH3+1)
  1638  00BC  07C2               	addwf	(_uw_adcCH3+1)
  1639  00BD  1683               	bsf	status, 5	;RP0=1, select bank1
  1640  00BE  1303               	bcf	status, 6	;RP1=0, select bank1
  1641  00BF  0836               	movf	0+(_adc_buffer)^080h+06h,w
  1642  00C0  1283               	bcf	status, 5	;RP0=0, select bank0
  1643  00C1  1303               	bcf	status, 6	;RP1=0, select bank0
  1644  00C2  01C1               	clrf	(_uw_adcCH3)
  1645  00C3  07C1               	addwf	(_uw_adcCH3)
  1646                           
  1647                           	line	72
  1648                           	
  1649  00C4                     l11189:	
  1650                           ;tasks.c: 72: uw_ADCV3 = Convert_to_Voltage(uw_adcCH3);
  1651  00C4  0842               	movf	(_uw_adcCH3+1),w
  1652  00C5  01DF               	clrf	(?_Convert_to_Voltage+1)
  1653  00C6  07DF               	addwf	(?_Convert_to_Voltage+1)
  1654  00C7  0841               	movf	(_uw_adcCH3),w
  1655  00C8  01DE               	clrf	(?_Convert_to_Voltage)
  1656  00C9  07DE               	addwf	(?_Convert_to_Voltage)
  1657                           
  1658  00CA  120A  158A  2655   	fcall	_Convert_to_Voltage
              120A  118A         
  1659  00CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1660  00D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1661  00D1  085F               	movf	(1+(?_Convert_to_Voltage)),w
  1662  00D2  01B6               	clrf	(_uw_ADCV3+1)
  1663  00D3  07B6               	addwf	(_uw_ADCV3+1)
  1664  00D4  085E               	movf	(0+(?_Convert_to_Voltage)),w
  1665  00D5  01B5               	clrf	(_uw_ADCV3)
  1666  00D6  07B5               	addwf	(_uw_ADCV3)
  1667                           
  1668                           	line	74
  1669                           	
  1670  00D7                     l11191:	
  1671                           ;tasks.c: 74: uw_IPot = Divizor_U_Pot(uw_ADCV3);
  1672  00D7  0836               	movf	(_uw_ADCV3+1),w
  1673  00D8  01DF               	clrf	(?_Divizor_U_Pot+1)
  1674  00D9  07DF               	addwf	(?_Divizor_U_Pot+1)
  1675  00DA  0835               	movf	(_uw_ADCV3),w
  1676  00DB  01DE               	clrf	(?_Divizor_U_Pot)
  1677  00DC  07DE               	addwf	(?_Divizor_U_Pot)
  1678                           
  1679  00DD  120A  158A  26F5   	fcall	_Divizor_U_Pot
              120A  118A         
  1680  00E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1681  00E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1682  00E4  085F               	movf	(1+(?_Divizor_U_Pot)),w
  1683  00E5  01BA               	clrf	(_uw_IPot+1)
  1684  00E6  07BA               	addwf	(_uw_IPot+1)
  1685  00E7  085E               	movf	(0+(?_Divizor_U_Pot)),w
  1686  00E8  01B9               	clrf	(_uw_IPot)
  1687  00E9  07B9               	addwf	(_uw_IPot)
  1688                           
  1689                           	line	76
  1690                           	
  1691  00EA                     l11193:	
  1692                           ;tasks.c: 76: SetDisplay_Current_target(uw_IPot);
  1693  00EA  083A               	movf	(_uw_IPot+1),w
  1694  00EB  01D8               	clrf	(?_SetDisplay_Current_target+1)
  1695  00EC  07D8               	addwf	(?_SetDisplay_Current_target+1)
  1696  00ED  0839               	movf	(_uw_IPot),w
  1697  00EE  01D7               	clrf	(?_SetDisplay_Current_target)
  1698  00EF  07D7               	addwf	(?_SetDisplay_Current_target)
  1699                           
  1700  00F0  120A  118A  26A4   	fcall	_SetDisplay_Current_target
              120A  118A         
  1701                           	line	79
  1702                           	
  1703  00F5                     l11195:	
  1704                           ;tasks.c: 79: duty_pwm1 = UpotToPWM(uw_IPot*2);
  1705  00F5  1283               	bcf	status, 5	;RP0=0, select bank0
  1706  00F6  1303               	bcf	status, 6	;RP1=0, select bank0
  1707  00F7  083A               	movf	(_uw_IPot+1),w
  1708  00F8  00EB               	movwf	(??_task_slow+0)+0+1
  1709  00F9  0839               	movf	(_uw_IPot),w
  1710  00FA  00EA               	movwf	(??_task_slow+0)+0
  1711  00FB  3001               	movlw	01h
  1712  00FC  00FF               	movwf	btemp+1
  1713  00FD                     u4425:
  1714  00FD  1003               	clrc
  1715  00FE  0DEA               	rlf	(??_task_slow+0)+0,f
  1716  00FF  0DEB               	rlf	(??_task_slow+0)+1,f
  1717  0100  0BFF               	decfsz	btemp+1,f
  1718  0101  28FD               	goto	u4425
  1719  0102  086A               	movf	0+(??_task_slow+0)+0,w
  1720  0103  00DE               	movwf	(?_UpotToPWM)
  1721  0104  086B               	movf	1+(??_task_slow+0)+0,w
  1722  0105  00DF               	movwf	(?_UpotToPWM+1)
  1723  0106  120A  158A  25BF   	fcall	_UpotToPWM
              120A  118A         
  1724  010B  1283               	bcf	status, 5	;RP0=0, select bank0
  1725  010C  1303               	bcf	status, 6	;RP1=0, select bank0
  1726  010D  00EC               	movwf	(??_task_slow+2)+0
  1727  010E  01ED               	clrf	(??_task_slow+2)+0+1
  1728  010F  086C               	movf	0+(??_task_slow+2)+0,w
  1729  0110  00A7               	movwf	(_duty_pwm1)
  1730  0111  086D               	movf	1+(??_task_slow+2)+0,w
  1731  0112  00A8               	movwf	(_duty_pwm1+1)
  1732                           	line	80
  1733                           	
  1734  0113                     l11197:	
  1735                           ;tasks.c: 80: pwm_setDuty(0x80,duty_pwm1);
  1736  0113  0828               	movf	(_duty_pwm1+1),w
  1737  0114  01D2               	clrf	(?_pwm_setDuty+1)
  1738  0115  07D2               	addwf	(?_pwm_setDuty+1)
  1739  0116  0827               	movf	(_duty_pwm1),w
  1740  0117  01D1               	clrf	(?_pwm_setDuty)
  1741  0118  07D1               	addwf	(?_pwm_setDuty)
  1742                           
  1743  0119  3080               	movlw	(080h)
  1744  011A  120A  158A  249E   	fcall	_pwm_setDuty
              120A  118A         
  1745                           	line	81
  1746                           	
  1747  011F                     l11199:	
  1748                           ;tasks.c: 81: pwm_update(0x80);
  1749  011F  3080               	movlw	(080h)
  1750  0120  120A  118A  22E3   	fcall	_pwm_update
              120A  118A         
  1751                           	line	84
  1752                           	
  1753  0125                     l11201:	
  1754                           ;tasks.c: 84: adc_convert_one_channel(2);
  1755  0125  3002               	movlw	(02h)
  1756  0126  120A  118A  2631   	fcall	_adc_convert_one_channel
              120A  118A         
  1757                           	line	85
  1758                           	
  1759  012B                     l11203:	
  1760                           ;tasks.c: 85: uw_adcCH2=(adc_buffer[2]);
  1761  012B  1683               	bsf	status, 5	;RP0=1, select bank1
  1762  012C  1303               	bcf	status, 6	;RP1=0, select bank1
  1763  012D  0835               	movf	1+(_adc_buffer)^080h+04h,w
  1764  012E  1283               	bcf	status, 5	;RP0=0, select bank0
  1765  012F  1303               	bcf	status, 6	;RP1=0, select bank0
  1766  0130  01C0               	clrf	(_uw_adcCH2+1)
  1767  0131  07C0               	addwf	(_uw_adcCH2+1)
  1768  0132  1683               	bsf	status, 5	;RP0=1, select bank1
  1769  0133  1303               	bcf	status, 6	;RP1=0, select bank1
  1770  0134  0834               	movf	0+(_adc_buffer)^080h+04h,w
  1771  0135  1283               	bcf	status, 5	;RP0=0, select bank0
  1772  0136  1303               	bcf	status, 6	;RP1=0, select bank0
  1773  0137  01BF               	clrf	(_uw_adcCH2)
  1774  0138  07BF               	addwf	(_uw_adcCH2)
  1775                           
  1776                           	line	87
  1777                           	
  1778  0139                     l11205:	
  1779                           ;tasks.c: 87: uw_ADCV2 = Convert_to_Voltage(uw_adcCH2);
  1780  0139  0840               	movf	(_uw_adcCH2+1),w
  1781  013A  01DF               	clrf	(?_Convert_to_Voltage+1)
  1782  013B  07DF               	addwf	(?_Convert_to_Voltage+1)
  1783  013C  083F               	movf	(_uw_adcCH2),w
  1784  013D  01DE               	clrf	(?_Convert_to_Voltage)
  1785  013E  07DE               	addwf	(?_Convert_to_Voltage)
  1786                           
  1787  013F  120A  158A  2655   	fcall	_Convert_to_Voltage
              120A  118A         
  1788  0144  1283               	bcf	status, 5	;RP0=0, select bank0
  1789  0145  1303               	bcf	status, 6	;RP1=0, select bank0
  1790  0146  085F               	movf	(1+(?_Convert_to_Voltage)),w
  1791  0147  01B4               	clrf	(_uw_ADCV2+1)
  1792  0148  07B4               	addwf	(_uw_ADCV2+1)
  1793  0149  085E               	movf	(0+(?_Convert_to_Voltage)),w
  1794  014A  01B3               	clrf	(_uw_ADCV2)
  1795  014B  07B3               	addwf	(_uw_ADCV2)
  1796                           
  1797                           	line	89
  1798                           	
  1799  014C                     l11207:	
  1800                           ;tasks.c: 89: uw_UPot = Divizor_U_Pot(uw_ADCV2);
  1801  014C  0834               	movf	(_uw_ADCV2+1),w
  1802  014D  01DF               	clrf	(?_Divizor_U_Pot+1)
  1803  014E  07DF               	addwf	(?_Divizor_U_Pot+1)
  1804  014F  0833               	movf	(_uw_ADCV2),w
  1805  0150  01DE               	clrf	(?_Divizor_U_Pot)
  1806  0151  07DE               	addwf	(?_Divizor_U_Pot)
  1807                           
  1808  0152  120A  158A  26F5   	fcall	_Divizor_U_Pot
              120A  118A         
  1809  0157  1283               	bcf	status, 5	;RP0=0, select bank0
  1810  0158  1303               	bcf	status, 6	;RP1=0, select bank0
  1811  0159  085F               	movf	(1+(?_Divizor_U_Pot)),w
  1812  015A  1683               	bsf	status, 5	;RP0=1, select bank1
  1813  015B  1303               	bcf	status, 6	;RP1=0, select bank1
  1814  015C  01CD               	clrf	(_uw_UPot+1)^080h
  1815  015D  07CD               	addwf	(_uw_UPot+1)^080h
  1816  015E  1283               	bcf	status, 5	;RP0=0, select bank0
  1817  015F  1303               	bcf	status, 6	;RP1=0, select bank0
  1818  0160  085E               	movf	(0+(?_Divizor_U_Pot)),w
  1819  0161  1683               	bsf	status, 5	;RP0=1, select bank1
  1820  0162  1303               	bcf	status, 6	;RP1=0, select bank1
  1821  0163  01CC               	clrf	(_uw_UPot)^080h
  1822  0164  07CC               	addwf	(_uw_UPot)^080h
  1823                           
  1824                           	line	95
  1825                           	
  1826  0165                     l11209:	
  1827                           ;tasks.c: 95: if (ub_buton_s2==0)
  1828  0165  1283               	bcf	status, 5	;RP0=0, select bank0
  1829  0166  1303               	bcf	status, 6	;RP1=0, select bank0
  1830  0167  08CC               	movf	(_ub_buton_s2),f
  1831  0168  1D03               	skipz
  1832  0169  296B               	goto	u4431
  1833  016A  296C               	goto	u4430
  1834  016B                     u4431:
  1835  016B  2981               	goto	l11215
  1836  016C                     u4430:
  1837                           	line	97
  1838                           	
  1839  016C                     l11211:	
  1840                           ;tasks.c: 96: {
  1841                           ;tasks.c: 97: duty_pwm2++;
  1842  016C  3001               	movlw	low(01h)
  1843  016D  07A9               	addwf	(_duty_pwm2),f
  1844  016E  1803               	skipnc
  1845  016F  0AAA               	incf	(_duty_pwm2+1),f
  1846  0170  3000               	movlw	high(01h)
  1847  0171  07AA               	addwf	(_duty_pwm2+1),f
  1848                           	line	98
  1849                           ;tasks.c: 98: if(duty_pwm2>1023)
  1850  0172  3004               	movlw	high(0400h)
  1851  0173  022A               	subwf	(_duty_pwm2+1),w
  1852  0174  3000               	movlw	low(0400h)
  1853  0175  1903               	skipnz
  1854  0176  0229               	subwf	(_duty_pwm2),w
  1855  0177  1C03               	skipc
  1856  0178  297A               	goto	u4441
  1857  0179  297B               	goto	u4440
  1858  017A                     u4441:
  1859  017A  2981               	goto	l11215
  1860  017B                     u4440:
  1861                           	line	100
  1862                           	
  1863  017B                     l11213:	
  1864                           ;tasks.c: 99: {
  1865                           ;tasks.c: 100: duty_pwm2=1023;
  1866  017B  30FF               	movlw	low(03FFh)
  1867  017C  00A9               	movwf	(_duty_pwm2)
  1868  017D  3003               	movlw	high(03FFh)
  1869  017E  00AA               	movwf	((_duty_pwm2))+1
  1870  017F  2981               	goto	l11215
  1871                           	line	101
  1872                           	
  1873  0180                     l5128:	
  1874  0180  2981               	goto	l11215
  1875                           	line	102
  1876                           	
  1877  0181                     l5127:	
  1878                           	line	103
  1879                           	
  1880  0181                     l11215:	
  1881                           ;tasks.c: 101: }
  1882                           ;tasks.c: 102: }
  1883                           ;tasks.c: 103: if (ub_buton_s3==0)
  1884  0181  08CD               	movf	(_ub_buton_s3),f
  1885  0182  1D03               	skipz
  1886  0183  2985               	goto	u4451
  1887  0184  2986               	goto	u4450
  1888  0185                     u4451:
  1889  0185  2997               	goto	l11221
  1890  0186                     u4450:
  1891                           	line	105
  1892                           	
  1893  0186                     l11217:	
  1894                           ;tasks.c: 104: {
  1895                           ;tasks.c: 105: if(duty_pwm2>1)
  1896  0186  3000               	movlw	high(02h)
  1897  0187  022A               	subwf	(_duty_pwm2+1),w
  1898  0188  3002               	movlw	low(02h)
  1899  0189  1903               	skipnz
  1900  018A  0229               	subwf	(_duty_pwm2),w
  1901  018B  1C03               	skipc
  1902  018C  298E               	goto	u4461
  1903  018D  298F               	goto	u4460
  1904  018E                     u4461:
  1905  018E  2997               	goto	l11221
  1906  018F                     u4460:
  1907                           	line	107
  1908                           	
  1909  018F                     l11219:	
  1910                           ;tasks.c: 106: {
  1911                           ;tasks.c: 107: duty_pwm2--;
  1912  018F  3001               	movlw	low(01h)
  1913  0190  02A9               	subwf	(_duty_pwm2),f
  1914  0191  3000               	movlw	high(01h)
  1915  0192  1C03               	skipc
  1916  0193  03AA               	decf	(_duty_pwm2+1),f
  1917  0194  02AA               	subwf	(_duty_pwm2+1),f
  1918  0195  2997               	goto	l11221
  1919                           	line	108
  1920                           	
  1921  0196                     l5130:	
  1922  0196  2997               	goto	l11221
  1923                           	line	109
  1924                           	
  1925  0197                     l5129:	
  1926                           	line	123
  1927                           	
  1928  0197                     l11221:	
  1929                           ;tasks.c: 108: }
  1930                           ;tasks.c: 109: }
  1931                           ;tasks.c: 123: pwm_setDuty(0x00,duty_pwm2);
  1932  0197  082A               	movf	(_duty_pwm2+1),w
  1933  0198  01D2               	clrf	(?_pwm_setDuty+1)
  1934  0199  07D2               	addwf	(?_pwm_setDuty+1)
  1935  019A  0829               	movf	(_duty_pwm2),w
  1936  019B  01D1               	clrf	(?_pwm_setDuty)
  1937  019C  07D1               	addwf	(?_pwm_setDuty)
  1938                           
  1939  019D  3000               	movlw	(0)
  1940  019E  120A  158A  249E   	fcall	_pwm_setDuty
              120A  118A         
  1941                           	line	124
  1942                           	
  1943  01A3                     l11223:	
  1944                           ;tasks.c: 124: pwm_update(0x00);
  1945  01A3  3000               	movlw	(0)
  1946  01A4  120A  118A  22E3   	fcall	_pwm_update
              120A  118A         
  1947                           	line	125
  1948                           	
  1949  01A9                     l5131:	
  1950  01A9  0008               	return
  1951                           	opt stack 0
  1952                           GLOBAL	__end_of_task_slow
  1953  01AA                     	__end_of_task_slow:
  1954 ;; =============== function _task_slow ends ============
  1955                           
  1956                           	signat	_task_slow,88
  1957                           	global	_Dispaly2raw_task
  1958                           psect	text821,local,class=CODE,delta=2
  1959                           global __ptext821
  1960  01AA                     __ptext821:
  1961                           
  1962 ;; *************** function _Dispaly2raw_task *****************
  1963 ;; Defined at:
  1964 ;;		line 131 in file "E:\my_projects\2013\power\software\Display_2raw.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;		None               void
  1971 ;; Registers used:
  1972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0
  1980 ;;      Temps:          0       1       0       0       0
  1981 ;;      Totals:         0       1       0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    4
  1985 ;; This function calls:
  1986 ;;		_SetCommand
  1987 ;;		_IsBusy
  1988 ;;		_WriteData
  1989 ;; This function is called by:
  1990 ;;		_task_fast
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           psect	text821
  1994                           	file	"E:\my_projects\2013\power\software\Display_2raw.c"
  1995                           	line	131
  1996                           	global	__size_of_Dispaly2raw_task
  1997  0139                     	__size_of_Dispaly2raw_task	equ	__end_of_Dispaly2raw_task-_Dispaly2raw_task
  1998                           	
  1999  01AA                     _Dispaly2raw_task:	
  2000                           	opt	stack 2
  2001                           ; Regs used in _Dispaly2raw_task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2002                           	line	132
  2003                           	
  2004  01AA                     l11075:	
  2005                           ;Display_2raw.c: 132: switch (ub_state_Display2r)
  2006  01AA  2AC3               	goto	l11169
  2007                           	line	134
  2008                           ;Display_2raw.c: 133: {
  2009                           ;Display_2raw.c: 134: case Display_no_init:
  2010                           	
  2011  01AB                     l7040:	
  2012                           	line	136
  2013                           	
  2014  01AB                     l11077:	
  2015                           ;Display_2raw.c: 136: if (ub_counter_1 > 20)
  2016  01AB  3015               	movlw	(015h)
  2017  01AC  1283               	bcf	status, 5	;RP0=0, select bank0
  2018  01AD  1303               	bcf	status, 6	;RP1=0, select bank0
  2019  01AE  024E               	subwf	(_ub_counter_1),w
  2020  01AF  1C03               	skipc
  2021  01B0  29B2               	goto	u4311
  2022  01B1  29B3               	goto	u4310
  2023  01B2                     u4311:
  2024  01B2  29C0               	goto	l11085
  2025  01B3                     u4310:
  2026                           	line	139
  2027                           	
  2028  01B3                     l11079:	
  2029                           ;Display_2raw.c: 137: {
  2030                           ;Display_2raw.c: 139: SetCommand(0x20 | 0x10 | 0x00 | 0x00 |0x03 );
  2031  01B3  3033               	movlw	(033h)
  2032  01B4  120A  158A  2464   	fcall	_SetCommand
              120A  118A         
  2033                           	line	140
  2034                           	
  2035  01B9                     l11081:	
  2036                           ;Display_2raw.c: 140: ub_state_Display2r = Display_init_step;
  2037  01B9  1283               	bcf	status, 5	;RP0=0, select bank0
  2038  01BA  1303               	bcf	status, 6	;RP1=0, select bank0
  2039  01BB  01CF               	clrf	(_ub_state_Display2r)
  2040  01BC  1403               	bsf	status,0
  2041  01BD  0DCF               	rlf	(_ub_state_Display2r),f
  2042                           	line	141
  2043                           	
  2044  01BE                     l11083:	
  2045                           ;Display_2raw.c: 141: ub_counter_1 = 0;
  2046  01BE  01CE               	clrf	(_ub_counter_1)
  2047                           	line	143
  2048                           ;Display_2raw.c: 143: }
  2049  01BF  2AE2               	goto	l7067
  2050                           	line	144
  2051                           	
  2052  01C0                     l7041:	
  2053                           	line	146
  2054                           	
  2055  01C0                     l11085:	
  2056                           ;Display_2raw.c: 144: else
  2057                           ;Display_2raw.c: 145: {
  2058                           ;Display_2raw.c: 146: ub_counter_1++;
  2059  01C0  3001               	movlw	(01h)
  2060  01C1  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2061  01C2  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2062  01C3  07CE               	addwf	(_ub_counter_1),f
  2063  01C4  2AE2               	goto	l7067
  2064                           	line	147
  2065                           	
  2066  01C5                     l7042:	
  2067                           	line	148
  2068                           ;Display_2raw.c: 147: }
  2069                           ;Display_2raw.c: 148: break;
  2070  01C5  2AE2               	goto	l7067
  2071                           	line	149
  2072                           ;Display_2raw.c: 149: case Display_init_step:
  2073                           	
  2074  01C6                     l7044:	
  2075                           	line	152
  2076                           	
  2077  01C6                     l11087:	
  2078                           ;Display_2raw.c: 152: SetCommand(0x20 | 0x10 | 0x00 | 0x00 |0x03 );
  2079  01C6  3033               	movlw	(033h)
  2080  01C7  120A  158A  2464   	fcall	_SetCommand
              120A  118A         
  2081                           	line	153
  2082                           	
  2083  01CC                     l11089:	
  2084                           ;Display_2raw.c: 153: ub_state_Display2r = Display_init_DisplayOff;
  2085  01CC  3002               	movlw	(02h)
  2086  01CD  1283               	bcf	status, 5	;RP0=0, select bank0
  2087  01CE  1303               	bcf	status, 6	;RP1=0, select bank0
  2088  01CF  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2089  01D0  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2090  01D1  00CF               	movwf	(_ub_state_Display2r)
  2091  01D2  29D3               	goto	l11091
  2092                           	line	155
  2093                           ;Display_2raw.c: 155: case Display_init_DisplayOff:
  2094                           	
  2095  01D3                     l7045:	
  2096                           	line	158
  2097                           	
  2098  01D3                     l11091:	
  2099                           ;Display_2raw.c: 158: ub_busy = IsBusy();
  2100  01D3  120A  158A  2547   	fcall	_IsBusy
              120A  118A         
  2101  01D8  1283               	bcf	status, 5	;RP0=0, select bank0
  2102  01D9  1303               	bcf	status, 6	;RP1=0, select bank0
  2103  01DA  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2104  01DB  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2105  01DC  00CB               	movwf	(_ub_busy)
  2106                           	line	159
  2107                           	
  2108  01DD                     l11093:	
  2109                           ;Display_2raw.c: 159: if (ub_busy ==0)
  2110  01DD  08CB               	movf	(_ub_busy),f
  2111  01DE  1D03               	skipz
  2112  01DF  29E1               	goto	u4321
  2113  01E0  29E2               	goto	u4320
  2114  01E1                     u4321:
  2115  01E1  2AE2               	goto	l7067
  2116  01E2                     u4320:
  2117                           	line	161
  2118                           	
  2119  01E2                     l11095:	
  2120                           ;Display_2raw.c: 160: {
  2121                           ;Display_2raw.c: 161: SetCommand(0x08 | 0x04 | 0x02 | 0x01);
  2122  01E2  300F               	movlw	(0Fh)
  2123  01E3  120A  158A  2464   	fcall	_SetCommand
              120A  118A         
  2124                           	line	162
  2125                           	
  2126  01E8                     l11097:	
  2127                           ;Display_2raw.c: 162: ub_state_Display2r = Display_init_ClearDisplay;
  2128  01E8  3003               	movlw	(03h)
  2129  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
  2130  01EA  1303               	bcf	status, 6	;RP1=0, select bank0
  2131  01EB  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2132  01EC  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2133  01ED  00CF               	movwf	(_ub_state_Display2r)
  2134                           	line	163
  2135                           ;Display_2raw.c: 163: }
  2136  01EE  2AE2               	goto	l7067
  2137                           	line	164
  2138                           	
  2139  01EF                     l7046:	
  2140  01EF  2AE2               	goto	l7067
  2141                           	line	167
  2142                           ;Display_2raw.c: 164: else
  2143                           ;Display_2raw.c: 165: {
  2144                           	
  2145  01F0                     l7047:	
  2146                           	line	169
  2147                           ;Display_2raw.c: 167: }
  2148                           ;Display_2raw.c: 169: break;
  2149  01F0  2AE2               	goto	l7067
  2150                           	line	170
  2151                           ;Display_2raw.c: 170: case Display_init_ClearDisplay:
  2152                           	
  2153  01F1                     l7048:	
  2154                           	line	173
  2155                           	
  2156  01F1                     l11099:	
  2157                           ;Display_2raw.c: 173: ub_busy = IsBusy();
  2158  01F1  120A  158A  2547   	fcall	_IsBusy
              120A  118A         
  2159  01F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2160  01F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2161  01F8  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2162  01F9  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2163  01FA  00CB               	movwf	(_ub_busy)
  2164                           	line	174
  2165                           	
  2166  01FB                     l11101:	
  2167                           ;Display_2raw.c: 174: if (ub_busy ==0)
  2168  01FB  08CB               	movf	(_ub_busy),f
  2169  01FC  1D03               	skipz
  2170  01FD  29FF               	goto	u4331
  2171  01FE  2A00               	goto	u4330
  2172  01FF                     u4331:
  2173  01FF  2AE2               	goto	l7067
  2174  0200                     u4330:
  2175                           	line	177
  2176                           	
  2177  0200                     l11103:	
  2178                           ;Display_2raw.c: 175: {
  2179                           ;Display_2raw.c: 177: SetCommand(0x01);
  2180  0200  3001               	movlw	(01h)
  2181  0201  120A  158A  2464   	fcall	_SetCommand
              120A  118A         
  2182                           	line	178
  2183                           	
  2184  0206                     l11105:	
  2185                           ;Display_2raw.c: 178: ub_state_Display2r = Display_init_EntryMode;
  2186  0206  3004               	movlw	(04h)
  2187  0207  1283               	bcf	status, 5	;RP0=0, select bank0
  2188  0208  1303               	bcf	status, 6	;RP1=0, select bank0
  2189  0209  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2190  020A  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2191  020B  00CF               	movwf	(_ub_state_Display2r)
  2192                           	line	180
  2193                           	
  2194  020C                     l11107:	
  2195                           ;Display_2raw.c: 180: ub_counter_1 = 0;
  2196  020C  01CE               	clrf	(_ub_counter_1)
  2197                           	line	181
  2198                           ;Display_2raw.c: 181: }
  2199  020D  2AE2               	goto	l7067
  2200                           	line	182
  2201                           	
  2202  020E                     l7049:	
  2203  020E  2AE2               	goto	l7067
  2204                           	line	185
  2205                           ;Display_2raw.c: 182: else
  2206                           ;Display_2raw.c: 183: {
  2207                           	
  2208  020F                     l7050:	
  2209                           	line	187
  2210                           ;Display_2raw.c: 185: }
  2211                           ;Display_2raw.c: 187: break;
  2212  020F  2AE2               	goto	l7067
  2213                           	line	188
  2214                           ;Display_2raw.c: 188: case Display_init_EntryMode:
  2215                           	
  2216  0210                     l7051:	
  2217                           	line	190
  2218                           	
  2219  0210                     l11109:	
  2220                           ;Display_2raw.c: 190: if (ub_counter_1 > 1)
  2221  0210  3002               	movlw	(02h)
  2222  0211  024E               	subwf	(_ub_counter_1),w
  2223  0212  1C03               	skipc
  2224  0213  2A15               	goto	u4341
  2225  0214  2A16               	goto	u4340
  2226  0215                     u4341:
  2227  0215  2A34               	goto	l11121
  2228  0216                     u4340:
  2229                           	line	192
  2230                           	
  2231  0216                     l11111:	
  2232                           ;Display_2raw.c: 191: {
  2233                           ;Display_2raw.c: 192: ub_busy = IsBusy();
  2234  0216  120A  158A  2547   	fcall	_IsBusy
              120A  118A         
  2235  021B  1283               	bcf	status, 5	;RP0=0, select bank0
  2236  021C  1303               	bcf	status, 6	;RP1=0, select bank0
  2237  021D  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2238  021E  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2239  021F  00CB               	movwf	(_ub_busy)
  2240                           	line	193
  2241                           	
  2242  0220                     l11113:	
  2243                           ;Display_2raw.c: 193: if (ub_busy ==0)
  2244  0220  08CB               	movf	(_ub_busy),f
  2245  0221  1D03               	skipz
  2246  0222  2A24               	goto	u4351
  2247  0223  2A25               	goto	u4350
  2248  0224                     u4351:
  2249  0224  2AE2               	goto	l7067
  2250  0225                     u4350:
  2251                           	line	196
  2252                           	
  2253  0225                     l11115:	
  2254                           ;Display_2raw.c: 194: {
  2255                           ;Display_2raw.c: 196: SetCommand(0x04 | 0x02);
  2256  0225  3006               	movlw	(06h)
  2257  0226  120A  158A  2464   	fcall	_SetCommand
              120A  118A         
  2258                           	line	197
  2259                           	
  2260  022B                     l11117:	
  2261                           ;Display_2raw.c: 197: ub_state_Display2r = Display_init_DisplayOn;
  2262  022B  3005               	movlw	(05h)
  2263  022C  1283               	bcf	status, 5	;RP0=0, select bank0
  2264  022D  1303               	bcf	status, 6	;RP1=0, select bank0
  2265  022E  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2266  022F  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2267  0230  00CF               	movwf	(_ub_state_Display2r)
  2268                           	line	198
  2269                           	
  2270  0231                     l11119:	
  2271                           ;Display_2raw.c: 198: ub_counter_1 = 0;
  2272  0231  01CE               	clrf	(_ub_counter_1)
  2273  0232  2AE2               	goto	l7067
  2274                           	line	200
  2275                           	
  2276  0233                     l7053:	
  2277                           	line	201
  2278                           ;Display_2raw.c: 200: }
  2279                           ;Display_2raw.c: 201: }
  2280  0233  2AE2               	goto	l7067
  2281                           	line	202
  2282                           	
  2283  0234                     l7052:	
  2284                           	line	204
  2285                           	
  2286  0234                     l11121:	
  2287                           ;Display_2raw.c: 202: else
  2288                           ;Display_2raw.c: 203: {
  2289                           ;Display_2raw.c: 204: ub_counter_1++;
  2290  0234  3001               	movlw	(01h)
  2291  0235  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2292  0236  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2293  0237  07CE               	addwf	(_ub_counter_1),f
  2294  0238  2AE2               	goto	l7067
  2295                           	line	205
  2296                           	
  2297  0239                     l7054:	
  2298                           	line	206
  2299                           ;Display_2raw.c: 205: }
  2300                           ;Display_2raw.c: 206: break;
  2301  0239  2AE2               	goto	l7067
  2302                           	line	207
  2303                           ;Display_2raw.c: 207: case Display_init_DisplayOn:
  2304                           	
  2305  023A                     l7055:	
  2306                           	line	210
  2307                           	
  2308  023A                     l11123:	
  2309                           ;Display_2raw.c: 210: ub_busy = IsBusy();
  2310  023A  120A  158A  2547   	fcall	_IsBusy
              120A  118A         
  2311  023F  1283               	bcf	status, 5	;RP0=0, select bank0
  2312  0240  1303               	bcf	status, 6	;RP1=0, select bank0
  2313  0241  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2314  0242  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2315  0243  00CB               	movwf	(_ub_busy)
  2316                           	line	211
  2317                           	
  2318  0244                     l11125:	
  2319                           ;Display_2raw.c: 211: if (ub_busy ==0)
  2320  0244  08CB               	movf	(_ub_busy),f
  2321  0245  1D03               	skipz
  2322  0246  2A48               	goto	u4361
  2323  0247  2A49               	goto	u4360
  2324  0248                     u4361:
  2325  0248  2AE2               	goto	l7067
  2326  0249                     u4360:
  2327                           	line	213
  2328                           	
  2329  0249                     l11127:	
  2330                           ;Display_2raw.c: 212: {
  2331                           ;Display_2raw.c: 213: ub_state_Display2r = Display_idle;
  2332  0249  3006               	movlw	(06h)
  2333  024A  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2334  024B  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2335  024C  00CF               	movwf	(_ub_state_Display2r)
  2336  024D  2AE2               	goto	l7067
  2337                           	line	214
  2338                           	
  2339  024E                     l7056:	
  2340                           	line	217
  2341                           ;Display_2raw.c: 214: }
  2342                           ;Display_2raw.c: 217: break;
  2343  024E  2AE2               	goto	l7067
  2344                           	line	218
  2345                           ;Display_2raw.c: 218: case Display_idle:
  2346                           	
  2347  024F                     l7057:	
  2348                           	line	219
  2349                           	
  2350  024F                     l11129:	
  2351                           ;Display_2raw.c: 219: ub_busy = IsBusy();
  2352  024F  120A  158A  2547   	fcall	_IsBusy
              120A  118A         
  2353  0254  1283               	bcf	status, 5	;RP0=0, select bank0
  2354  0255  1303               	bcf	status, 6	;RP1=0, select bank0
  2355  0256  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2356  0257  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2357  0258  00CB               	movwf	(_ub_busy)
  2358                           	line	220
  2359                           	
  2360  0259                     l11131:	
  2361                           ;Display_2raw.c: 220: if (ub_busy ==0)
  2362  0259  08CB               	movf	(_ub_busy),f
  2363  025A  1D03               	skipz
  2364  025B  2A5D               	goto	u4371
  2365  025C  2A5E               	goto	u4370
  2366  025D                     u4371:
  2367  025D  2AE2               	goto	l7067
  2368  025E                     u4370:
  2369                           	line	222
  2370                           	
  2371  025E                     l11133:	
  2372                           ;Display_2raw.c: 221: {
  2373                           ;Display_2raw.c: 222: if (ub_counter_1 > 100)
  2374  025E  3065               	movlw	(065h)
  2375  025F  024E               	subwf	(_ub_counter_1),w
  2376  0260  1C03               	skipc
  2377  0261  2A63               	goto	u4381
  2378  0262  2A64               	goto	u4380
  2379  0263                     u4381:
  2380  0263  2A6B               	goto	l11141
  2381  0264                     u4380:
  2382                           	line	224
  2383                           	
  2384  0264                     l11135:	
  2385                           ;Display_2raw.c: 223: {
  2386                           ;Display_2raw.c: 224: ub_state_Display2r = Display_clear_screen;
  2387  0264  3007               	movlw	(07h)
  2388  0265  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2389  0266  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2390  0267  00CF               	movwf	(_ub_state_Display2r)
  2391                           	line	225
  2392                           	
  2393  0268                     l11137:	
  2394                           ;Display_2raw.c: 225: ubDispIndex = 0;
  2395  0268  01C5               	clrf	(_ubDispIndex)
  2396                           	line	226
  2397                           	
  2398  0269                     l11139:	
  2399                           ;Display_2raw.c: 226: ub_counter_1 = 0;
  2400  0269  01CE               	clrf	(_ub_counter_1)
  2401                           	line	227
  2402                           ;Display_2raw.c: 227: }
  2403  026A  2AE2               	goto	l7067
  2404                           	line	228
  2405                           	
  2406  026B                     l7059:	
  2407                           	line	230
  2408                           	
  2409  026B                     l11141:	
  2410                           ;Display_2raw.c: 228: else
  2411                           ;Display_2raw.c: 229: {
  2412                           ;Display_2raw.c: 230: ub_counter_1++;
  2413  026B  3001               	movlw	(01h)
  2414  026C  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2415  026D  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2416  026E  07CE               	addwf	(_ub_counter_1),f
  2417  026F  2AE2               	goto	l7067
  2418                           	line	231
  2419                           	
  2420  0270                     l7060:	
  2421  0270  2AE2               	goto	l7067
  2422                           	line	232
  2423                           	
  2424  0271                     l7058:	
  2425                           	line	233
  2426                           ;Display_2raw.c: 231: }
  2427                           ;Display_2raw.c: 232: }
  2428                           ;Display_2raw.c: 233: break;
  2429  0271  2AE2               	goto	l7067
  2430                           	line	234
  2431                           ;Display_2raw.c: 234: case Display_clear_screen:
  2432                           	
  2433  0272                     l7061:	
  2434                           	line	235
  2435                           	
  2436  0272                     l11143:	
  2437                           ;Display_2raw.c: 235: ub_busy = IsBusy();
  2438  0272  120A  158A  2547   	fcall	_IsBusy
              120A  118A         
  2439  0277  1283               	bcf	status, 5	;RP0=0, select bank0
  2440  0278  1303               	bcf	status, 6	;RP1=0, select bank0
  2441  0279  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2442  027A  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2443  027B  00CB               	movwf	(_ub_busy)
  2444                           	line	236
  2445                           	
  2446  027C                     l11145:	
  2447                           ;Display_2raw.c: 236: if (ub_busy ==0)
  2448  027C  08CB               	movf	(_ub_busy),f
  2449  027D  1D03               	skipz
  2450  027E  2A80               	goto	u4391
  2451  027F  2A81               	goto	u4390
  2452  0280                     u4391:
  2453  0280  2AE2               	goto	l7067
  2454  0281                     u4390:
  2455                           	line	238
  2456                           	
  2457  0281                     l11147:	
  2458                           ;Display_2raw.c: 237: {
  2459                           ;Display_2raw.c: 238: SetCommand(0x02);
  2460  0281  3002               	movlw	(02h)
  2461  0282  120A  158A  2464   	fcall	_SetCommand
              120A  118A         
  2462                           	line	239
  2463                           	
  2464  0287                     l11149:	
  2465                           ;Display_2raw.c: 239: ub_state_Display2r = Display_write_string;
  2466  0287  3008               	movlw	(08h)
  2467  0288  1283               	bcf	status, 5	;RP0=0, select bank0
  2468  0289  1303               	bcf	status, 6	;RP1=0, select bank0
  2469  028A  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2470  028B  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2471  028C  00CF               	movwf	(_ub_state_Display2r)
  2472  028D  2AE2               	goto	l7067
  2473                           	line	240
  2474                           	
  2475  028E                     l7062:	
  2476                           	line	241
  2477                           ;Display_2raw.c: 240: }
  2478                           ;Display_2raw.c: 241: break;
  2479  028E  2AE2               	goto	l7067
  2480                           	line	242
  2481                           ;Display_2raw.c: 242: case Display_write_string:
  2482                           	
  2483  028F                     l7063:	
  2484                           	line	243
  2485                           	
  2486  028F                     l11151:	
  2487                           ;Display_2raw.c: 243: ub_busy = IsBusy();
  2488  028F  120A  158A  2547   	fcall	_IsBusy
              120A  118A         
  2489  0294  1283               	bcf	status, 5	;RP0=0, select bank0
  2490  0295  1303               	bcf	status, 6	;RP1=0, select bank0
  2491  0296  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2492  0297  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2493  0298  00CB               	movwf	(_ub_busy)
  2494                           	line	244
  2495                           	
  2496  0299                     l11153:	
  2497                           ;Display_2raw.c: 244: if (ub_busy ==0)
  2498  0299  08CB               	movf	(_ub_busy),f
  2499  029A  1D03               	skipz
  2500  029B  2A9D               	goto	u4401
  2501  029C  2A9E               	goto	u4400
  2502  029D                     u4401:
  2503  029D  2AE2               	goto	l7067
  2504  029E                     u4400:
  2505                           	line	246
  2506                           	
  2507  029E                     l11155:	
  2508                           ;Display_2raw.c: 245: {
  2509                           ;Display_2raw.c: 246: ub_Datawrite = ubDisplay_buf[ubDispIndex];
  2510  029E  0845               	movf	(_ubDispIndex),w
  2511  029F  3EA0               	addlw	_ubDisplay_buf&0ffh
  2512  02A0  0084               	movwf	fsr0
  2513  02A1  1383               	bcf	status, 7	;select IRP bank1
  2514  02A2  0800               	movf	indf,w
  2515  02A3  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2516  02A4  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2517  02A5  00CA               	movwf	(_ub_Datawrite)
  2518                           	line	247
  2519                           	
  2520  02A6                     l11157:	
  2521                           ;Display_2raw.c: 247: WriteData(ub_Datawrite);
  2522  02A6  084A               	movf	(_ub_Datawrite),w
  2523  02A7  120A  158A  2481   	fcall	_WriteData
              120A  118A         
  2524                           	line	248
  2525                           	
  2526  02AC                     l11159:	
  2527                           ;Display_2raw.c: 248: ubDispIndex++;
  2528  02AC  3001               	movlw	(01h)
  2529  02AD  1283               	bcf	status, 5	;RP0=0, select bank0
  2530  02AE  1303               	bcf	status, 6	;RP1=0, select bank0
  2531  02AF  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2532  02B0  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2533  02B1  07C5               	addwf	(_ubDispIndex),f
  2534                           	line	249
  2535                           	
  2536  02B2                     l11161:	
  2537                           ;Display_2raw.c: 249: if(ubDispIndex > 16)
  2538  02B2  3011               	movlw	(011h)
  2539  02B3  0245               	subwf	(_ubDispIndex),w
  2540  02B4  1C03               	skipc
  2541  02B5  2AB7               	goto	u4411
  2542  02B6  2AB8               	goto	u4410
  2543  02B7                     u4411:
  2544  02B7  2AE2               	goto	l7067
  2545  02B8                     u4410:
  2546                           	line	251
  2547                           	
  2548  02B8                     l11163:	
  2549                           ;Display_2raw.c: 250: {
  2550                           ;Display_2raw.c: 251: ub_state_Display2r = Display_idle;
  2551  02B8  3006               	movlw	(06h)
  2552  02B9  00D7               	movwf	(??_Dispaly2raw_task+0)+0
  2553  02BA  0857               	movf	(??_Dispaly2raw_task+0)+0,w
  2554  02BB  00CF               	movwf	(_ub_state_Display2r)
  2555                           	line	252
  2556                           	
  2557  02BC                     l11165:	
  2558                           ;Display_2raw.c: 252: ubDispIndex = 0;
  2559  02BC  01C5               	clrf	(_ubDispIndex)
  2560  02BD  2AE2               	goto	l7067
  2561                           	line	253
  2562                           	
  2563  02BE                     l7065:	
  2564  02BE  2AE2               	goto	l7067
  2565                           	line	254
  2566                           	
  2567  02BF                     l7064:	
  2568                           	line	255
  2569                           ;Display_2raw.c: 253: }
  2570                           ;Display_2raw.c: 254: }
  2571                           ;Display_2raw.c: 255: break;
  2572  02BF  2AE2               	goto	l7067
  2573                           	line	256
  2574                           ;Display_2raw.c: 256: default :
  2575                           	
  2576  02C0                     l7066:	
  2577                           	line	257
  2578                           ;Display_2raw.c: 257: ub_state_Display2r = Display_no_init;
  2579  02C0  01CF               	clrf	(_ub_state_Display2r)
  2580                           	line	258
  2581                           ;Display_2raw.c: 258: break;
  2582  02C1  2AE2               	goto	l7067
  2583                           	line	259
  2584                           	
  2585  02C2                     l11167:	
  2586                           ;Display_2raw.c: 259: }
  2587  02C2  2AE2               	goto	l7067
  2588                           	line	132
  2589                           	
  2590  02C3                     l7039:	
  2591                           	
  2592  02C3                     l11169:	
  2593  02C3  1283               	bcf	status, 5	;RP0=0, select bank0
  2594  02C4  1303               	bcf	status, 6	;RP1=0, select bank0
  2595  02C5  084F               	movf	(_ub_state_Display2r),w
  2596                           	; Switch size 1, requested type "space"
  2597                           ; Number of cases is 9, Range of values is 0 to 8
  2598                           ; switch strategies available:
  2599                           ; Name         Instructions Cycles
  2600                           ; simple_byte           28    15 (average)
  2601                           ; direct_byte           35     8 (fixed)
  2602                           ; jumptable            260     6 (fixed)
  2603                           ; rangetable            13     6 (fixed)
  2604                           ; spacedrange           24     9 (fixed)
  2605                           ; locatedrange           9     3 (fixed)
  2606                           ;	Chosen strategy is simple_byte
  2607                           
  2608                           	opt asmopt_off
  2609  02C6  3A00               	xorlw	0^0	; case 0
  2610  02C7  1903               	skipnz
  2611  02C8  29AB               	goto	l11077
  2612  02C9  3A01               	xorlw	1^0	; case 1
  2613  02CA  1903               	skipnz
  2614  02CB  29C6               	goto	l11087
  2615  02CC  3A03               	xorlw	2^1	; case 2
  2616  02CD  1903               	skipnz
  2617  02CE  29D3               	goto	l11091
  2618  02CF  3A01               	xorlw	3^2	; case 3
  2619  02D0  1903               	skipnz
  2620  02D1  29F1               	goto	l11099
  2621  02D2  3A07               	xorlw	4^3	; case 4
  2622  02D3  1903               	skipnz
  2623  02D4  2A10               	goto	l11109
  2624  02D5  3A01               	xorlw	5^4	; case 5
  2625  02D6  1903               	skipnz
  2626  02D7  2A3A               	goto	l11123
  2627  02D8  3A03               	xorlw	6^5	; case 6
  2628  02D9  1903               	skipnz
  2629  02DA  2A4F               	goto	l11129
  2630  02DB  3A01               	xorlw	7^6	; case 7
  2631  02DC  1903               	skipnz
  2632  02DD  2A72               	goto	l11143
  2633  02DE  3A0F               	xorlw	8^7	; case 8
  2634  02DF  1903               	skipnz
  2635  02E0  2A8F               	goto	l11151
  2636  02E1  2AC0               	goto	l7066
  2637                           	opt asmopt_on
  2638                           
  2639                           	line	259
  2640                           	
  2641  02E2                     l7043:	
  2642                           	line	260
  2643                           	
  2644  02E2                     l7067:	
  2645  02E2  0008               	return
  2646                           	opt stack 0
  2647                           GLOBAL	__end_of_Dispaly2raw_task
  2648  02E3                     	__end_of_Dispaly2raw_task:
  2649 ;; =============== function _Dispaly2raw_task ends ============
  2650                           
  2651                           	signat	_Dispaly2raw_task,88
  2652                           	global	_init
  2653                           psect	text822,local,class=CODE,delta=2
  2654                           global __ptext822
  2655  0715                     __ptext822:
  2656                           
  2657 ;; *************** function _init *****************
  2658 ;; Defined at:
  2659 ;;		line 20 in file "E:\my_projects\2013\power\software\init.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;		None               void
  2666 ;; Registers used:
  2667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2673 ;;      Params:         0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0
  2676 ;;      Totals:         0       0       0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    4
  2680 ;; This function calls:
  2681 ;;		_io_init
  2682 ;;		_pwm_setPeriod
  2683 ;;		_pwm_setDuty
  2684 ;;		_pwm_update
  2685 ;;		_pwm_init
  2686 ;;		_adc_init
  2687 ;;		_init_signal_procesing
  2688 ;;		_InitDisplay2raw
  2689 ;;		_init_botifilter
  2690 ;; This function is called by:
  2691 ;;		_main
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           psect	text822
  2695                           	file	"E:\my_projects\2013\power\software\init.c"
  2696                           	line	20
  2697                           	global	__size_of_init
  2698  0070                     	__size_of_init	equ	__end_of_init-_init
  2699                           	
  2700  0715                     _init:	
  2701                           	opt	stack 3
  2702                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2703                           	line	21
  2704                           	
  2705  0715                     l11051:	
  2706                           ;init.c: 21: io_init();
  2707  0715  120A  158A  23CC   	fcall	_io_init
              120A  118A         
  2708                           	line	24
  2709                           	
  2710  071A                     l11053:	
  2711                           ;init.c: 24: duty_pwm1=0;
  2712  071A  1283               	bcf	status, 5	;RP0=0, select bank0
  2713  071B  1303               	bcf	status, 6	;RP1=0, select bank0
  2714  071C  01A7               	clrf	(_duty_pwm1)
  2715  071D  01A8               	clrf	(_duty_pwm1+1)
  2716                           	line	25
  2717                           	
  2718  071E                     l11055:	
  2719                           ;init.c: 25: duty_pwm2=0;
  2720  071E  01A9               	clrf	(_duty_pwm2)
  2721  071F  01AA               	clrf	(_duty_pwm2+1)
  2722                           	line	26
  2723                           ;init.c: 26: pwm_setPeriod(4000);
  2724  0720  30A0               	movlw	low(0FA0h)
  2725  0721  00D1               	movwf	(?_pwm_setPeriod)
  2726  0722  300F               	movlw	high(0FA0h)
  2727  0723  00D2               	movwf	((?_pwm_setPeriod))+1
  2728  0724  120A  158A  2448   	fcall	_pwm_setPeriod
              120A  118A         
  2729                           	line	27
  2730                           ;init.c: 27: pwm_setDuty(0x80,duty_pwm1);
  2731  0729  1283               	bcf	status, 5	;RP0=0, select bank0
  2732  072A  1303               	bcf	status, 6	;RP1=0, select bank0
  2733  072B  0828               	movf	(_duty_pwm1+1),w
  2734  072C  01D2               	clrf	(?_pwm_setDuty+1)
  2735  072D  07D2               	addwf	(?_pwm_setDuty+1)
  2736  072E  0827               	movf	(_duty_pwm1),w
  2737  072F  01D1               	clrf	(?_pwm_setDuty)
  2738  0730  07D1               	addwf	(?_pwm_setDuty)
  2739                           
  2740  0731  3080               	movlw	(080h)
  2741  0732  120A  158A  249E   	fcall	_pwm_setDuty
              120A  118A         
  2742                           	line	28
  2743                           	
  2744  0737                     l11057:	
  2745                           ;init.c: 28: pwm_update(0x80);
  2746  0737  3080               	movlw	(080h)
  2747  0738  120A  118A  22E3   	fcall	_pwm_update
              120A  118A         
  2748                           	line	29
  2749                           	
  2750  073D                     l11059:	
  2751                           ;init.c: 29: pwm_init(0x80);
  2752  073D  3080               	movlw	(080h)
  2753  073E  120A  158A  2417   	fcall	_pwm_init
              120A  118A         
  2754                           	line	32
  2755                           	
  2756  0743                     l11061:	
  2757                           ;init.c: 32: pwm_setDuty(0x00,duty_pwm2);
  2758  0743  1283               	bcf	status, 5	;RP0=0, select bank0
  2759  0744  1303               	bcf	status, 6	;RP1=0, select bank0
  2760  0745  082A               	movf	(_duty_pwm2+1),w
  2761  0746  01D2               	clrf	(?_pwm_setDuty+1)
  2762  0747  07D2               	addwf	(?_pwm_setDuty+1)
  2763  0748  0829               	movf	(_duty_pwm2),w
  2764  0749  01D1               	clrf	(?_pwm_setDuty)
  2765  074A  07D1               	addwf	(?_pwm_setDuty)
  2766                           
  2767  074B  3000               	movlw	(0)
  2768  074C  120A  158A  249E   	fcall	_pwm_setDuty
              120A  118A         
  2769                           	line	33
  2770                           	
  2771  0751                     l11063:	
  2772                           ;init.c: 33: pwm_update(0x00);
  2773  0751  3000               	movlw	(0)
  2774  0752  120A  118A  22E3   	fcall	_pwm_update
              120A  118A         
  2775                           	line	34
  2776                           ;init.c: 34: pwm_init(0x00);
  2777  0757  3000               	movlw	(0)
  2778  0758  120A  158A  2417   	fcall	_pwm_init
              120A  118A         
  2779                           	line	44
  2780                           	
  2781  075D                     l11065:	
  2782                           ;init.c: 44: adc_init();
  2783  075D  120A  158A  23EA   	fcall	_adc_init
              120A  118A         
  2784                           	line	46
  2785                           	
  2786  0762                     l11067:	
  2787                           ;init.c: 46: init_signal_procesing();
  2788  0762  120A  118A  2003   	fcall	_init_signal_procesing
              120A  118A         
  2789                           	line	48
  2790                           	
  2791  0767                     l11069:	
  2792                           ;init.c: 48: InitDisplay2raw();
  2793  0767  120A  158A  2515   	fcall	_InitDisplay2raw
              120A  118A         
  2794                           	line	49
  2795                           	
  2796  076C                     l11071:	
  2797                           ;init.c: 49: init_botifilter(auwUPOT,0);
  2798  076C  3000               	movlw	low(0)
  2799  076D  1283               	bcf	status, 5	;RP0=0, select bank0
  2800  076E  1303               	bcf	status, 6	;RP1=0, select bank0
  2801  076F  00D1               	movwf	(?_init_botifilter)
  2802  0770  3000               	movlw	high(0)
  2803  0771  00D2               	movwf	((?_init_botifilter))+1
  2804  0772  30DE               	movlw	(_auwUPOT)&0ffh
  2805  0773  120A  158A  24C3   	fcall	_init_botifilter
              120A  118A         
  2806                           	line	50
  2807                           	
  2808  0778                     l11073:	
  2809                           ;init.c: 50: init_botifilter(auwPWMOut,0);
  2810  0778  3000               	movlw	low(0)
  2811  0779  1283               	bcf	status, 5	;RP0=0, select bank0
  2812  077A  1303               	bcf	status, 6	;RP1=0, select bank0
  2813  077B  00D1               	movwf	(?_init_botifilter)
  2814  077C  3000               	movlw	high(0)
  2815  077D  00D2               	movwf	((?_init_botifilter))+1
  2816  077E  30CE               	movlw	(_auwPWMOut)&0ffh
  2817  077F  120A  158A  24C3   	fcall	_init_botifilter
              120A  118A         
  2818                           	line	51
  2819                           	
  2820  0784                     l1914:	
  2821  0784  0008               	return
  2822                           	opt stack 0
  2823                           GLOBAL	__end_of_init
  2824  0785                     	__end_of_init:
  2825 ;; =============== function _init ends ============
  2826                           
  2827                           	signat	_init,88
  2828                           	global	_Read_Buton_state
  2829                           psect	text823,local,class=CODE,delta=2
  2830                           global __ptext823
  2831  0D7E                     __ptext823:
  2832                           
  2833 ;; *************** function _Read_Buton_state *****************
  2834 ;; Defined at:
  2835 ;;		line 12 in file "E:\my_projects\2013\power\software\buton.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;		None               void
  2842 ;; Registers used:
  2843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2849 ;;      Params:         0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0
  2852 ;;      Totals:         0       0       0       0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    4
  2856 ;; This function calls:
  2857 ;;		_adc_convert_one_channel
  2858 ;;		_Convert_to_Voltage
  2859 ;; This function is called by:
  2860 ;;		_task_slow
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           psect	text823
  2864                           	file	"E:\my_projects\2013\power\software\buton.c"
  2865                           	line	12
  2866                           	global	__size_of_Read_Buton_state
  2867  0041                     	__size_of_Read_Buton_state	equ	__end_of_Read_Buton_state-_Read_Buton_state
  2868                           	
  2869  0D7E                     _Read_Buton_state:	
  2870                           	opt	stack 2
  2871                           ; Regs used in _Read_Buton_state: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2872                           	line	15
  2873                           	
  2874  0D7E                     l11035:	
  2875                           ;buton.c: 15: adc_convert_one_channel(4);
  2876  0D7E  3004               	movlw	(04h)
  2877  0D7F  120A  118A  2631   	fcall	_adc_convert_one_channel
              120A  158A         
  2878                           	line	16
  2879                           	
  2880  0D84                     l11037:	
  2881                           ;buton.c: 16: uw_adcCH4=(adc_buffer[4]);
  2882  0D84  1683               	bsf	status, 5	;RP0=1, select bank1
  2883  0D85  1303               	bcf	status, 6	;RP1=0, select bank1
  2884  0D86  0839               	movf	1+(_adc_buffer)^080h+08h,w
  2885  0D87  1283               	bcf	status, 5	;RP0=0, select bank0
  2886  0D88  1303               	bcf	status, 6	;RP1=0, select bank0
  2887  0D89  01C4               	clrf	(_uw_adcCH4+1)
  2888  0D8A  07C4               	addwf	(_uw_adcCH4+1)
  2889  0D8B  1683               	bsf	status, 5	;RP0=1, select bank1
  2890  0D8C  1303               	bcf	status, 6	;RP1=0, select bank1
  2891  0D8D  0838               	movf	0+(_adc_buffer)^080h+08h,w
  2892  0D8E  1283               	bcf	status, 5	;RP0=0, select bank0
  2893  0D8F  1303               	bcf	status, 6	;RP1=0, select bank0
  2894  0D90  01C3               	clrf	(_uw_adcCH4)
  2895  0D91  07C3               	addwf	(_uw_adcCH4)
  2896                           
  2897                           	line	19
  2898                           	
  2899  0D92                     l11039:	
  2900                           ;buton.c: 19: uw_ADCVS4 = Convert_to_Voltage(uw_adcCH4);
  2901  0D92  0844               	movf	(_uw_adcCH4+1),w
  2902  0D93  01DF               	clrf	(?_Convert_to_Voltage+1)
  2903  0D94  07DF               	addwf	(?_Convert_to_Voltage+1)
  2904  0D95  0843               	movf	(_uw_adcCH4),w
  2905  0D96  01DE               	clrf	(?_Convert_to_Voltage)
  2906  0D97  07DE               	addwf	(?_Convert_to_Voltage)
  2907                           
  2908  0D98  120A  158A  2655   	fcall	_Convert_to_Voltage
              120A  158A         
  2909  0D9D  1283               	bcf	status, 5	;RP0=0, select bank0
  2910  0D9E  1303               	bcf	status, 6	;RP1=0, select bank0
  2911  0D9F  085F               	movf	(1+(?_Convert_to_Voltage)),w
  2912  0DA0  01B8               	clrf	(_uw_ADCVS4+1)
  2913  0DA1  07B8               	addwf	(_uw_ADCVS4+1)
  2914  0DA2  085E               	movf	(0+(?_Convert_to_Voltage)),w
  2915  0DA3  01B7               	clrf	(_uw_ADCVS4)
  2916  0DA4  07B7               	addwf	(_uw_ADCVS4)
  2917                           
  2918                           	line	20
  2919                           	
  2920  0DA5                     l11041:	
  2921                           ;buton.c: 20: if (uw_ADCVS4 <3000)
  2922  0DA5  300B               	movlw	high(0BB8h)
  2923  0DA6  0238               	subwf	(_uw_ADCVS4+1),w
  2924  0DA7  30B8               	movlw	low(0BB8h)
  2925  0DA8  1903               	skipnz
  2926  0DA9  0237               	subwf	(_uw_ADCVS4),w
  2927  0DAA  1803               	skipnc
  2928  0DAB  2DAD               	goto	u4291
  2929  0DAC  2DAE               	goto	u4290
  2930  0DAD                     u4291:
  2931  0DAD  2DB0               	goto	l11045
  2932  0DAE                     u4290:
  2933                           	line	23
  2934                           	
  2935  0DAE                     l11043:	
  2936                           ;buton.c: 22: {
  2937                           ;buton.c: 23: ub_buton_s3 = 0;
  2938  0DAE  01CD               	clrf	(_ub_buton_s3)
  2939                           	line	24
  2940                           ;buton.c: 24: }
  2941  0DAF  2DB4               	goto	l11047
  2942                           	line	25
  2943                           	
  2944  0DB0                     l1268:	
  2945                           	line	27
  2946                           	
  2947  0DB0                     l11045:	
  2948                           ;buton.c: 25: else
  2949                           ;buton.c: 26: {
  2950                           ;buton.c: 27: ub_buton_s3 = 1;
  2951  0DB0  01CD               	clrf	(_ub_buton_s3)
  2952  0DB1  1403               	bsf	status,0
  2953  0DB2  0DCD               	rlf	(_ub_buton_s3),f
  2954  0DB3  2DB4               	goto	l11047
  2955                           	line	28
  2956                           	
  2957  0DB4                     l1269:	
  2958                           	line	30
  2959                           	
  2960  0DB4                     l11047:	
  2961                           ;buton.c: 28: }
  2962                           ;buton.c: 30: if ((PORTA & 0x10) ==0x10)
  2963  0DB4  1E05               	btfss	(5),(4)&7
  2964  0DB5  2DB7               	goto	u4301
  2965  0DB6  2DB8               	goto	u4300
  2966  0DB7                     u4301:
  2967  0DB7  2DBC               	goto	l1270
  2968  0DB8                     u4300:
  2969                           	line	32
  2970                           	
  2971  0DB8                     l11049:	
  2972                           ;buton.c: 31: {
  2973                           ;buton.c: 32: ub_buton_s2 = 1;
  2974  0DB8  01CC               	clrf	(_ub_buton_s2)
  2975  0DB9  1403               	bsf	status,0
  2976  0DBA  0DCC               	rlf	(_ub_buton_s2),f
  2977                           	line	33
  2978                           ;buton.c: 33: }
  2979  0DBB  2DBE               	goto	l1272
  2980                           	line	34
  2981                           	
  2982  0DBC                     l1270:	
  2983                           	line	36
  2984                           ;buton.c: 34: else
  2985                           ;buton.c: 35: {
  2986                           ;buton.c: 36: ub_buton_s2 = 0;
  2987  0DBC  01CC               	clrf	(_ub_buton_s2)
  2988  0DBD  2DBE               	goto	l1272
  2989                           	line	37
  2990                           	
  2991  0DBE                     l1271:	
  2992                           	line	39
  2993                           	
  2994  0DBE                     l1272:	
  2995  0DBE  0008               	return
  2996                           	opt stack 0
  2997                           GLOBAL	__end_of_Read_Buton_state
  2998  0DBF                     	__end_of_Read_Buton_state:
  2999 ;; =============== function _Read_Buton_state ends ============
  3000                           
  3001                           	signat	_Read_Buton_state,88
  3002                           	global	_WriteData
  3003                           psect	text824,local,class=CODE,delta=2
  3004                           global __ptext824
  3005  0C81                     __ptext824:
  3006                           
  3007 ;; *************** function _WriteData *****************
  3008 ;; Defined at:
  3009 ;;		line 275 in file "E:\my_projects\2013\power\software\Display_2raw.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  ub_Data         1    wreg     unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  ub_Data         1    3[BANK0 ] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;		None               void
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       0       0       0       0
  3024 ;;      Locals:         0       1       0       0       0
  3025 ;;      Temps:          0       0       0       0       0
  3026 ;;      Totals:         0       1       0       0       0
  3027 ;;Total ram usage:        1 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    3
  3030 ;; This function calls:
  3031 ;;		_LCD_delay_us
  3032 ;; This function is called by:
  3033 ;;		_Dispaly2raw_task
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           psect	text824
  3037                           	file	"E:\my_projects\2013\power\software\Display_2raw.c"
  3038                           	line	275
  3039                           	global	__size_of_WriteData
  3040  001D                     	__size_of_WriteData	equ	__end_of_WriteData-_WriteData
  3041                           	
  3042  0C81                     _WriteData:	
  3043                           	opt	stack 2
  3044                           ; Regs used in _WriteData: [wreg+status,2+status,0+pclath+cstack]
  3045                           ;WriteData@ub_Data stored from wreg
  3046  0C81  1283               	bcf	status, 5	;RP0=0, select bank0
  3047  0C82  1303               	bcf	status, 6	;RP1=0, select bank0
  3048  0C83  00D4               	movwf	(WriteData@ub_Data)
  3049                           	line	276
  3050                           	
  3051  0C84                     l11019:	
  3052                           ;Display_2raw.c: 276: TRISB = 0x00;
  3053  0C84  1683               	bsf	status, 5	;RP0=1, select bank1
  3054  0C85  1303               	bcf	status, 6	;RP1=0, select bank1
  3055  0C86  0186               	clrf	(134)^080h	;volatile
  3056                           	line	277
  3057                           	
  3058  0C87                     l11021:	
  3059                           ;Display_2raw.c: 277: LCD_delay_us(10);
  3060  0C87  300A               	movlw	(0Ah)
  3061  0C88  120A  158A  23D7   	fcall	_LCD_delay_us
              120A  158A         
  3062                           	line	278
  3063                           	
  3064  0C8D                     l11023:	
  3065                           ;Display_2raw.c: 278: RC3 = 1;
  3066  0C8D  1283               	bcf	status, 5	;RP0=0, select bank0
  3067  0C8E  1303               	bcf	status, 6	;RP1=0, select bank0
  3068  0C8F  1587               	bsf	(59/8),(59)&7
  3069                           	line	279
  3070                           	
  3071  0C90                     l11025:	
  3072                           ;Display_2raw.c: 279: RC4 = 0;
  3073  0C90  1207               	bcf	(60/8),(60)&7
  3074                           	line	280
  3075                           	
  3076  0C91                     l11027:	
  3077                           ;Display_2raw.c: 280: RC5 = 1;
  3078  0C91  1687               	bsf	(61/8),(61)&7
  3079                           	line	281
  3080                           	
  3081  0C92                     l11029:	
  3082                           ;Display_2raw.c: 281: PORTB = ub_Data;
  3083  0C92  0854               	movf	(WriteData@ub_Data),w
  3084  0C93  0086               	movwf	(6)	;volatile
  3085                           	line	282
  3086                           	
  3087  0C94                     l11031:	
  3088                           ;Display_2raw.c: 282: LCD_delay_us(10);
  3089  0C94  300A               	movlw	(0Ah)
  3090  0C95  120A  158A  23D7   	fcall	_LCD_delay_us
              120A  158A         
  3091                           	line	283
  3092                           	
  3093  0C9A                     l11033:	
  3094                           ;Display_2raw.c: 283: RC5 = 0;
  3095  0C9A  1283               	bcf	status, 5	;RP0=0, select bank0
  3096  0C9B  1303               	bcf	status, 6	;RP1=0, select bank0
  3097  0C9C  1287               	bcf	(61/8),(61)&7
  3098                           	line	284
  3099                           	
  3100  0C9D                     l7073:	
  3101  0C9D  0008               	return
  3102                           	opt stack 0
  3103                           GLOBAL	__end_of_WriteData
  3104  0C9E                     	__end_of_WriteData:
  3105 ;; =============== function _WriteData ends ============
  3106                           
  3107                           	signat	_WriteData,4216
  3108                           	global	_IsBusy
  3109                           psect	text825,local,class=CODE,delta=2
  3110                           global __ptext825
  3111  0D47                     __ptext825:
  3112                           
  3113 ;; *************** function _IsBusy *****************
  3114 ;; Defined at:
  3115 ;;		line 301 in file "E:\my_projects\2013\power\software\Display_2raw.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  ub_Bussy        1    5[BANK0 ] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      unsigned char 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         0       1       0       0       0
  3131 ;;      Temps:          0       2       0       0       0
  3132 ;;      Totals:         0       3       0       0       0
  3133 ;;Total ram usage:        3 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    3
  3136 ;; This function calls:
  3137 ;;		_LCD_delay_us
  3138 ;; This function is called by:
  3139 ;;		_Dispaly2raw_task
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           psect	text825
  3143                           	file	"E:\my_projects\2013\power\software\Display_2raw.c"
  3144                           	line	301
  3145                           	global	__size_of_IsBusy
  3146  0037                     	__size_of_IsBusy	equ	__end_of_IsBusy-_IsBusy
  3147                           	
  3148  0D47                     _IsBusy:	
  3149                           	opt	stack 2
  3150                           ; Regs used in _IsBusy: [wreg+status,2+status,0+pclath+cstack]
  3151                           	line	302
  3152                           	
  3153  0D47                     l10997:	
  3154                           ;Display_2raw.c: 302: T_UBYTE ub_Bussy = 0;
  3155  0D47  1283               	bcf	status, 5	;RP0=0, select bank0
  3156  0D48  1303               	bcf	status, 6	;RP1=0, select bank0
  3157  0D49  01D6               	clrf	(IsBusy@ub_Bussy)
  3158                           	line	303
  3159                           	
  3160  0D4A                     l10999:	
  3161                           ;Display_2raw.c: 303: TRISB = 0xFF;
  3162  0D4A  30FF               	movlw	(0FFh)
  3163  0D4B  1683               	bsf	status, 5	;RP0=1, select bank1
  3164  0D4C  1303               	bcf	status, 6	;RP1=0, select bank1
  3165  0D4D  0086               	movwf	(134)^080h	;volatile
  3166                           	line	304
  3167                           	
  3168  0D4E                     l11001:	
  3169                           ;Display_2raw.c: 304: LCD_delay_us(10);
  3170  0D4E  300A               	movlw	(0Ah)
  3171  0D4F  120A  158A  23D7   	fcall	_LCD_delay_us
              120A  158A         
  3172                           	line	305
  3173                           	
  3174  0D54                     l11003:	
  3175                           ;Display_2raw.c: 305: RC3 = 0;
  3176  0D54  1283               	bcf	status, 5	;RP0=0, select bank0
  3177  0D55  1303               	bcf	status, 6	;RP1=0, select bank0
  3178  0D56  1187               	bcf	(59/8),(59)&7
  3179                           	line	306
  3180                           	
  3181  0D57                     l11005:	
  3182                           ;Display_2raw.c: 306: RC4 = 1;
  3183  0D57  1607               	bsf	(60/8),(60)&7
  3184                           	line	307
  3185                           	
  3186  0D58                     l11007:	
  3187                           ;Display_2raw.c: 307: RC5 = 1;
  3188  0D58  1687               	bsf	(61/8),(61)&7
  3189                           	line	308
  3190                           	
  3191  0D59                     l11009:	
  3192                           ;Display_2raw.c: 308: ub_Bussy = PORTB;
  3193  0D59  0806               	movf	(6),w	;volatile
  3194  0D5A  00D4               	movwf	(??_IsBusy+0)+0
  3195  0D5B  0854               	movf	(??_IsBusy+0)+0,w
  3196  0D5C  00D6               	movwf	(IsBusy@ub_Bussy)
  3197                           	line	309
  3198                           ;Display_2raw.c: 309: LCD_delay_us(10);
  3199  0D5D  300A               	movlw	(0Ah)
  3200  0D5E  120A  158A  23D7   	fcall	_LCD_delay_us
              120A  158A         
  3201                           	line	310
  3202                           	
  3203  0D63                     l11011:	
  3204                           ;Display_2raw.c: 310: RC5 = 0;
  3205  0D63  1283               	bcf	status, 5	;RP0=0, select bank0
  3206  0D64  1303               	bcf	status, 6	;RP1=0, select bank0
  3207  0D65  1287               	bcf	(61/8),(61)&7
  3208                           	line	311
  3209                           ;Display_2raw.c: 311: LCD_delay_us(10);
  3210  0D66  300A               	movlw	(0Ah)
  3211  0D67  120A  158A  23D7   	fcall	_LCD_delay_us
              120A  158A         
  3212                           	line	312
  3213                           	
  3214  0D6C                     l11013:	
  3215                           ;Display_2raw.c: 312: ub_Bussy = ((ub_Bussy) & 0x80 )>> 0x7;
  3216  0D6C  1283               	bcf	status, 5	;RP0=0, select bank0
  3217  0D6D  1303               	bcf	status, 6	;RP1=0, select bank0
  3218  0D6E  0856               	movf	(IsBusy@ub_Bussy),w
  3219  0D6F  00D4               	movwf	(??_IsBusy+0)+0
  3220  0D70  3007               	movlw	07h
  3221  0D71                     u4285:
  3222  0D71  1003               	clrc
  3223  0D72  0CD4               	rrf	(??_IsBusy+0)+0,f
  3224  0D73  3EFF               	addlw	-1
  3225  0D74  1D03               	skipz
  3226  0D75  2D71               	goto	u4285
  3227  0D76  0854               	movf	0+(??_IsBusy+0)+0,w
  3228  0D77  3901               	andlw	01h
  3229  0D78  00D5               	movwf	(??_IsBusy+1)+0
  3230  0D79  0855               	movf	(??_IsBusy+1)+0,w
  3231  0D7A  00D6               	movwf	(IsBusy@ub_Bussy)
  3232                           	line	313
  3233                           	
  3234  0D7B                     l11015:	
  3235                           ;Display_2raw.c: 313: return ub_Bussy;
  3236  0D7B  0856               	movf	(IsBusy@ub_Bussy),w
  3237  0D7C  2D7D               	goto	l7079
  3238                           	
  3239  0D7D                     l11017:	
  3240                           	line	314
  3241                           	
  3242  0D7D                     l7079:	
  3243  0D7D  0008               	return
  3244                           	opt stack 0
  3245                           GLOBAL	__end_of_IsBusy
  3246  0D7E                     	__end_of_IsBusy:
  3247 ;; =============== function _IsBusy ends ============
  3248                           
  3249                           	signat	_IsBusy,89
  3250                           	global	_SetCommand
  3251                           psect	text826,local,class=CODE,delta=2
  3252                           global __ptext826
  3253  0C64                     __ptext826:
  3254                           
  3255 ;; *************** function _SetCommand *****************
  3256 ;; Defined at:
  3257 ;;		line 263 in file "E:\my_projects\2013\power\software\Display_2raw.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  ub_Command      1    wreg     unsigned char 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  ub_Command      1    3[BANK0 ] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;		None               void
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0, pclath, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3271 ;;      Params:         0       0       0       0       0
  3272 ;;      Locals:         0       1       0       0       0
  3273 ;;      Temps:          0       0       0       0       0
  3274 ;;      Totals:         0       1       0       0       0
  3275 ;;Total ram usage:        1 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    3
  3278 ;; This function calls:
  3279 ;;		_LCD_delay_us
  3280 ;; This function is called by:
  3281 ;;		_Dispaly2raw_task
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           psect	text826
  3285                           	file	"E:\my_projects\2013\power\software\Display_2raw.c"
  3286                           	line	263
  3287                           	global	__size_of_SetCommand
  3288  001D                     	__size_of_SetCommand	equ	__end_of_SetCommand-_SetCommand
  3289                           	
  3290  0C64                     _SetCommand:	
  3291                           	opt	stack 2
  3292                           ; Regs used in _SetCommand: [wreg+status,2+status,0+pclath+cstack]
  3293                           ;SetCommand@ub_Command stored from wreg
  3294  0C64  1283               	bcf	status, 5	;RP0=0, select bank0
  3295  0C65  1303               	bcf	status, 6	;RP1=0, select bank0
  3296  0C66  00D4               	movwf	(SetCommand@ub_Command)
  3297                           	line	264
  3298                           	
  3299  0C67                     l10981:	
  3300                           ;Display_2raw.c: 264: TRISB = 0x00;
  3301  0C67  1683               	bsf	status, 5	;RP0=1, select bank1
  3302  0C68  1303               	bcf	status, 6	;RP1=0, select bank1
  3303  0C69  0186               	clrf	(134)^080h	;volatile
  3304                           	line	265
  3305                           	
  3306  0C6A                     l10983:	
  3307                           ;Display_2raw.c: 265: LCD_delay_us(10);
  3308  0C6A  300A               	movlw	(0Ah)
  3309  0C6B  120A  158A  23D7   	fcall	_LCD_delay_us
              120A  158A         
  3310                           	line	266
  3311                           	
  3312  0C70                     l10985:	
  3313                           ;Display_2raw.c: 266: RC3 = 0;
  3314  0C70  1283               	bcf	status, 5	;RP0=0, select bank0
  3315  0C71  1303               	bcf	status, 6	;RP1=0, select bank0
  3316  0C72  1187               	bcf	(59/8),(59)&7
  3317                           	line	267
  3318                           	
  3319  0C73                     l10987:	
  3320                           ;Display_2raw.c: 267: RC4 = 0;
  3321  0C73  1207               	bcf	(60/8),(60)&7
  3322                           	line	268
  3323                           	
  3324  0C74                     l10989:	
  3325                           ;Display_2raw.c: 268: RC5 = 1;
  3326  0C74  1687               	bsf	(61/8),(61)&7
  3327                           	line	269
  3328                           	
  3329  0C75                     l10991:	
  3330                           ;Display_2raw.c: 269: PORTB = ub_Command;
  3331  0C75  0854               	movf	(SetCommand@ub_Command),w
  3332  0C76  0086               	movwf	(6)	;volatile
  3333                           	line	270
  3334                           	
  3335  0C77                     l10993:	
  3336                           ;Display_2raw.c: 270: LCD_delay_us(10);
  3337  0C77  300A               	movlw	(0Ah)
  3338  0C78  120A  158A  23D7   	fcall	_LCD_delay_us
              120A  158A         
  3339                           	line	271
  3340                           	
  3341  0C7D                     l10995:	
  3342                           ;Display_2raw.c: 271: RC5 = 0;
  3343  0C7D  1283               	bcf	status, 5	;RP0=0, select bank0
  3344  0C7E  1303               	bcf	status, 6	;RP1=0, select bank0
  3345  0C7F  1287               	bcf	(61/8),(61)&7
  3346                           	line	272
  3347                           	
  3348  0C80                     l7070:	
  3349  0C80  0008               	return
  3350                           	opt stack 0
  3351                           GLOBAL	__end_of_SetCommand
  3352  0C81                     	__end_of_SetCommand:
  3353 ;; =============== function _SetCommand ends ============
  3354                           
  3355                           	signat	_SetCommand,4216
  3356                           	global	_UpotToPWM
  3357                           psect	text827,local,class=CODE,delta=2
  3358                           global __ptext827
  3359  0DBF                     __ptext827:
  3360                           
  3361 ;; *************** function _UpotToPWM *****************
  3362 ;; Defined at:
  3363 ;;		line 41 in file "E:\my_projects\2013\power\software\power.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  luw_UPot        2   13[BANK0 ] unsigned short 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  lul_temp        4   19[BANK0 ] unsigned long 
  3368 ;;  lub_duty_pwm    1   23[BANK0 ] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      unsigned char 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2, status,0, pclath, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3378 ;;      Params:         0       2       0       0       0
  3379 ;;      Locals:         0       5       0       0       0
  3380 ;;      Temps:          0       4       0       0       0
  3381 ;;      Totals:         0      11       0       0       0
  3382 ;;Total ram usage:       11 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    3
  3385 ;; This function calls:
  3386 ;;		___lmul
  3387 ;; This function is called by:
  3388 ;;		_task_slow
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           psect	text827
  3392                           	file	"E:\my_projects\2013\power\software\power.c"
  3393                           	line	41
  3394                           	global	__size_of_UpotToPWM
  3395  004A                     	__size_of_UpotToPWM	equ	__end_of_UpotToPWM-_UpotToPWM
  3396                           	
  3397  0DBF                     _UpotToPWM:	
  3398                           	opt	stack 3
  3399                           ; Regs used in _UpotToPWM: [wreg+status,2+status,0+pclath+cstack]
  3400                           	line	42
  3401                           	
  3402  0DBF                     l10967:	
  3403                           ;power.c: 42: T_UBYTE lub_duty_pwm1 = 0;
  3404  0DBF  1283               	bcf	status, 5	;RP0=0, select bank0
  3405  0DC0  1303               	bcf	status, 6	;RP1=0, select bank0
  3406  0DC1  01E8               	clrf	(UpotToPWM@lub_duty_pwm1)
  3407                           	line	43
  3408                           	
  3409  0DC2                     l10969:	
  3410                           ;power.c: 43: T_ULONG lul_temp = 0;
  3411  0DC2  3000               	movlw	0
  3412  0DC3  00E7               	movwf	(UpotToPWM@lul_temp+3)
  3413  0DC4  3000               	movlw	0
  3414  0DC5  00E6               	movwf	(UpotToPWM@lul_temp+2)
  3415  0DC6  3000               	movlw	0
  3416  0DC7  00E5               	movwf	(UpotToPWM@lul_temp+1)
  3417  0DC8  3000               	movlw	0
  3418  0DC9  00E4               	movwf	(UpotToPWM@lul_temp)
  3419                           
  3420                           	line	44
  3421                           	
  3422  0DCA                     l10971:	
  3423                           ;power.c: 44: lul_temp = (((T_ULONG)luw_UPot) *55) >>11;
  3424  0DCA  085E               	movf	(UpotToPWM@luw_UPot),w
  3425  0DCB  00D1               	movwf	(?___lmul)
  3426  0DCC  085F               	movf	(UpotToPWM@luw_UPot+1),w
  3427  0DCD  00D2               	movwf	((?___lmul))+1
  3428  0DCE  01D3               	clrf	2+((?___lmul))
  3429  0DCF  01D4               	clrf	3+((?___lmul))
  3430  0DD0  3000               	movlw	0
  3431  0DD1  00D8               	movwf	3+(?___lmul)+04h
  3432  0DD2  3000               	movlw	0
  3433  0DD3  00D7               	movwf	2+(?___lmul)+04h
  3434  0DD4  3000               	movlw	0
  3435  0DD5  00D6               	movwf	1+(?___lmul)+04h
  3436  0DD6  3037               	movlw	037h
  3437  0DD7  00D5               	movwf	0+(?___lmul)+04h
  3438                           
  3439  0DD8  120A  158A  2609   	fcall	___lmul
              120A  158A         
  3440  0DDD  1283               	bcf	status, 5	;RP0=0, select bank0
  3441  0DDE  1303               	bcf	status, 6	;RP1=0, select bank0
  3442  0DDF  0851               	movf	(0+?___lmul),w
  3443  0DE0  00E0               	movwf	(??_UpotToPWM+0)+0
  3444  0DE1  0852               	movf	(1+?___lmul),w
  3445  0DE2  00E1               	movwf	((??_UpotToPWM+0)+0+1)
  3446  0DE3  0853               	movf	(2+?___lmul),w
  3447  0DE4  00E2               	movwf	((??_UpotToPWM+0)+0+2)
  3448  0DE5  0854               	movf	(3+?___lmul),w
  3449  0DE6  00E3               	movwf	((??_UpotToPWM+0)+0+3)
  3450  0DE7  300B               	movlw	0Bh
  3451  0DE8                     u4265:
  3452  0DE8  1003               	clrc
  3453  0DE9  0CE3               	rrf	(??_UpotToPWM+0)+3,f
  3454  0DEA  0CE2               	rrf	(??_UpotToPWM+0)+2,f
  3455  0DEB  0CE1               	rrf	(??_UpotToPWM+0)+1,f
  3456  0DEC  0CE0               	rrf	(??_UpotToPWM+0)+0,f
  3457  0DED                     u4260:
  3458  0DED  3EFF               	addlw	-1
  3459  0DEE  1D03               	skipz
  3460  0DEF  2DE8               	goto	u4265
  3461  0DF0  0863               	movf	3+(??_UpotToPWM+0)+0,w
  3462  0DF1  00E7               	movwf	(UpotToPWM@lul_temp+3)
  3463  0DF2  0862               	movf	2+(??_UpotToPWM+0)+0,w
  3464  0DF3  00E6               	movwf	(UpotToPWM@lul_temp+2)
  3465  0DF4  0861               	movf	1+(??_UpotToPWM+0)+0,w
  3466  0DF5  00E5               	movwf	(UpotToPWM@lul_temp+1)
  3467  0DF6  0860               	movf	0+(??_UpotToPWM+0)+0,w
  3468  0DF7  00E4               	movwf	(UpotToPWM@lul_temp)
  3469                           
  3470                           	line	45
  3471                           	
  3472  0DF8                     l10973:	
  3473                           ;power.c: 45: lub_duty_pwm1 = (T_UWORD)lul_temp;
  3474  0DF8  0864               	movf	(UpotToPWM@lul_temp),w
  3475  0DF9  00E0               	movwf	(??_UpotToPWM+0)+0
  3476  0DFA  0860               	movf	(??_UpotToPWM+0)+0,w
  3477  0DFB  00E8               	movwf	(UpotToPWM@lub_duty_pwm1)
  3478                           	line	46
  3479                           	
  3480  0DFC                     l10975:	
  3481                           ;power.c: 46: if(lub_duty_pwm1>100)
  3482  0DFC  3065               	movlw	(065h)
  3483  0DFD  0268               	subwf	(UpotToPWM@lub_duty_pwm1),w
  3484  0DFE  1C03               	skipc
  3485  0DFF  2E01               	goto	u4271
  3486  0E00  2E02               	goto	u4270
  3487  0E01                     u4271:
  3488  0E01  2E06               	goto	l6367
  3489  0E02                     u4270:
  3490                           	line	48
  3491                           	
  3492  0E02                     l10977:	
  3493                           ;power.c: 47: {
  3494                           ;power.c: 48: lub_duty_pwm1 = 100;
  3495  0E02  3064               	movlw	(064h)
  3496  0E03  00E0               	movwf	(??_UpotToPWM+0)+0
  3497  0E04  0860               	movf	(??_UpotToPWM+0)+0,w
  3498  0E05  00E8               	movwf	(UpotToPWM@lub_duty_pwm1)
  3499                           	line	49
  3500                           	
  3501  0E06                     l6367:	
  3502                           	line	50
  3503                           ;power.c: 49: }
  3504                           ;power.c: 50: return lub_duty_pwm1;
  3505  0E06  0868               	movf	(UpotToPWM@lub_duty_pwm1),w
  3506  0E07  2E08               	goto	l6368
  3507                           	
  3508  0E08                     l10979:	
  3509                           	line	51
  3510                           	
  3511  0E08                     l6368:	
  3512  0E08  0008               	return
  3513                           	opt stack 0
  3514                           GLOBAL	__end_of_UpotToPWM
  3515  0E09                     	__end_of_UpotToPWM:
  3516 ;; =============== function _UpotToPWM ends ============
  3517                           
  3518                           	signat	_UpotToPWM,4217
  3519                           	global	_SetDisplay_Current_target
  3520                           psect	text828,local,class=CODE,delta=2
  3521                           global __ptext828
  3522  06A4                     __ptext828:
  3523                           
  3524 ;; *************** function _SetDisplay_Current_target *****************
  3525 ;; Defined at:
  3526 ;;		line 109 in file "E:\my_projects\2013\power\software\Display_2raw.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  uwCurent        2    6[BANK0 ] unsigned short 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  luwTemp         2   11[BANK0 ] unsigned short 
  3531 ;;  lubNumber       1   10[BANK0 ] unsigned char 
  3532 ;;  lubFirstByte    1    0        unsigned char 
  3533 ;;  lubSecondByt    1    0        unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;		None               void
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0, pclath, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         0       2       0       0       0
  3544 ;;      Locals:         0       3       0       0       0
  3545 ;;      Temps:          0       2       0       0       0
  3546 ;;      Totals:         0       7       0       0       0
  3547 ;;Total ram usage:        7 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    3
  3550 ;; This function calls:
  3551 ;;		___wmul
  3552 ;; This function is called by:
  3553 ;;		_task_slow
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           psect	text828
  3557                           	file	"E:\my_projects\2013\power\software\Display_2raw.c"
  3558                           	line	109
  3559                           	global	__size_of_SetDisplay_Current_target
  3560  0071                     	__size_of_SetDisplay_Current_target	equ	__end_of_SetDisplay_Current_target-_SetDisplay_
                                 Current_target
  3561                           	
  3562  06A4                     _SetDisplay_Current_target:	
  3563                           	opt	stack 3
  3564                           ; Regs used in _SetDisplay_Current_target: [wreg+status,2+status,0+pclath+cstack]
  3565                           	line	110
  3566                           	
  3567  06A4                     l10943:	
  3568                           ;Display_2raw.c: 110: T_UBYTE lubNumber=0;
  3569  06A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3570  06A5  1303               	bcf	status, 6	;RP1=0, select bank0
  3571  06A6  01DB               	clrf	(SetDisplay_Current_target@lubNumber)
  3572                           	line	114
  3573                           	
  3574  06A7                     l10945:	
  3575                           ;Display_2raw.c: 111: T_UBYTE lubSecondByte,lubFirstByte;
  3576                           ;Display_2raw.c: 112: T_UWORD luwTemp;
  3577                           ;Display_2raw.c: 114: luwTemp = (T_UWORD)uwCurent >> 12;
  3578  06A7  0858               	movf	(SetDisplay_Current_target@uwCurent+1),w
  3579  06A8  00DA               	movwf	(??_SetDisplay_Current_target+0)+0+1
  3580  06A9  0857               	movf	(SetDisplay_Current_target@uwCurent),w
  3581  06AA  00D9               	movwf	(??_SetDisplay_Current_target+0)+0
  3582  06AB  300C               	movlw	0Ch
  3583  06AC                     u4245:
  3584  06AC  1003               	clrc
  3585  06AD  0CDA               	rrf	(??_SetDisplay_Current_target+0)+1,f
  3586  06AE  0CD9               	rrf	(??_SetDisplay_Current_target+0)+0,f
  3587  06AF  3EFF               	addlw	-1
  3588  06B0  1D03               	skipz
  3589  06B1  2EAC               	goto	u4245
  3590  06B2  0859               	movf	0+(??_SetDisplay_Current_target+0)+0,w
  3591  06B3  00DC               	movwf	(SetDisplay_Current_target@luwTemp)
  3592  06B4  085A               	movf	1+(??_SetDisplay_Current_target+0)+0,w
  3593  06B5  00DD               	movwf	(SetDisplay_Current_target@luwTemp+1)
  3594                           	line	115
  3595                           ;Display_2raw.c: 115: ubNumberINT = luwTemp;
  3596  06B6  085D               	movf	(SetDisplay_Current_target@luwTemp+1),w
  3597  06B7  01AC               	clrf	(_ubNumberINT+1)
  3598  06B8  07AC               	addwf	(_ubNumberINT+1)
  3599  06B9  085C               	movf	(SetDisplay_Current_target@luwTemp),w
  3600  06BA  01AB               	clrf	(_ubNumberINT)
  3601  06BB  07AB               	addwf	(_ubNumberINT)
  3602                           
  3603                           	line	116
  3604                           	
  3605  06BC                     l10947:	
  3606                           ;Display_2raw.c: 116: lubNumber = ubNumberINT;
  3607  06BC  082B               	movf	(_ubNumberINT),w
  3608  06BD  00D9               	movwf	(??_SetDisplay_Current_target+0)+0
  3609  06BE  0859               	movf	(??_SetDisplay_Current_target+0)+0,w
  3610  06BF  00DB               	movwf	(SetDisplay_Current_target@lubNumber)
  3611                           	line	118
  3612                           	
  3613  06C0                     l10949:	
  3614                           ;Display_2raw.c: 118: uwNumberFRC = uwCurent & (0x0FFF);
  3615  06C0  30FF               	movlw	low(0FFFh)
  3616  06C1  0557               	andwf	(SetDisplay_Current_target@uwCurent),w
  3617  06C2  00AD               	movwf	(_uwNumberFRC)
  3618  06C3  300F               	movlw	high(0FFFh)
  3619  06C4  0558               	andwf	(SetDisplay_Current_target@uwCurent+1),w
  3620  06C5  00AE               	movwf	1+(_uwNumberFRC)
  3621                           	line	119
  3622                           	
  3623  06C6                     l10951:	
  3624                           ;Display_2raw.c: 119: uwNumberFRC = uwNumberFRC * 10;
  3625  06C6  082E               	movf	(_uwNumberFRC+1),w
  3626  06C7  01D2               	clrf	(?___wmul+1)
  3627  06C8  07D2               	addwf	(?___wmul+1)
  3628  06C9  082D               	movf	(_uwNumberFRC),w
  3629  06CA  01D1               	clrf	(?___wmul)
  3630  06CB  07D1               	addwf	(?___wmul)
  3631                           
  3632  06CC  300A               	movlw	low(0Ah)
  3633  06CD  00D3               	movwf	0+(?___wmul)+02h
  3634  06CE  3000               	movlw	high(0Ah)
  3635  06CF  00D4               	movwf	(0+(?___wmul)+02h)+1
  3636  06D0  120A  158A  24E9   	fcall	___wmul
              120A  118A         
  3637  06D5  1283               	bcf	status, 5	;RP0=0, select bank0
  3638  06D6  1303               	bcf	status, 6	;RP1=0, select bank0
  3639  06D7  0852               	movf	(1+(?___wmul)),w
  3640  06D8  01AE               	clrf	(_uwNumberFRC+1)
  3641  06D9  07AE               	addwf	(_uwNumberFRC+1)
  3642  06DA  0851               	movf	(0+(?___wmul)),w
  3643  06DB  01AD               	clrf	(_uwNumberFRC)
  3644  06DC  07AD               	addwf	(_uwNumberFRC)
  3645                           
  3646                           	line	121
  3647                           	
  3648  06DD                     l10953:	
  3649                           ;Display_2raw.c: 121: uwNumberFRC = uwNumberFRC >> 12;
  3650  06DD  082E               	movf	(_uwNumberFRC+1),w
  3651  06DE  00DA               	movwf	(??_SetDisplay_Current_target+0)+0+1
  3652  06DF  082D               	movf	(_uwNumberFRC),w
  3653  06E0  00D9               	movwf	(??_SetDisplay_Current_target+0)+0
  3654  06E1  300C               	movlw	0Ch
  3655  06E2                     u4255:
  3656  06E2  1003               	clrc
  3657  06E3  0CDA               	rrf	(??_SetDisplay_Current_target+0)+1,f
  3658  06E4  0CD9               	rrf	(??_SetDisplay_Current_target+0)+0,f
  3659  06E5  3EFF               	addlw	-1
  3660  06E6  1D03               	skipz
  3661  06E7  2EE2               	goto	u4255
  3662  06E8  0859               	movf	0+(??_SetDisplay_Current_target+0)+0,w
  3663  06E9  00AD               	movwf	(_uwNumberFRC)
  3664  06EA  085A               	movf	1+(??_SetDisplay_Current_target+0)+0,w
  3665  06EB  00AE               	movwf	(_uwNumberFRC+1)
  3666                           	line	123
  3667                           	
  3668  06EC                     l10955:	
  3669                           ;Display_2raw.c: 123: ubFourthByte = uwNumberFRC;
  3670  06EC  082D               	movf	(_uwNumberFRC),w
  3671  06ED  00D9               	movwf	(??_SetDisplay_Current_target+0)+0
  3672  06EE  0859               	movf	(??_SetDisplay_Current_target+0)+0,w
  3673  06EF  00C7               	movwf	(_ubFourthByte)
  3674                           	line	124
  3675                           	
  3676  06F0                     l10957:	
  3677                           ;Display_2raw.c: 124: ubThrdByte = ubNumberINT;
  3678  06F0  082B               	movf	(_ubNumberINT),w
  3679  06F1  00D9               	movwf	(??_SetDisplay_Current_target+0)+0
  3680  06F2  0859               	movf	(??_SetDisplay_Current_target+0)+0,w
  3681  06F3  00C9               	movwf	(_ubThrdByte)
  3682                           	line	125
  3683                           	
  3684  06F4                     l10959:	
  3685                           ;Display_2raw.c: 125: ubDisplay_buf[12] = ubThrdByte + 0x30;
  3686  06F4  0849               	movf	(_ubThrdByte),w
  3687  06F5  3E30               	addlw	030h
  3688  06F6  00D9               	movwf	(??_SetDisplay_Current_target+0)+0
  3689  06F7  0859               	movf	(??_SetDisplay_Current_target+0)+0,w
  3690  06F8  1683               	bsf	status, 5	;RP0=1, select bank1
  3691  06F9  1303               	bcf	status, 6	;RP1=0, select bank1
  3692  06FA  00AC               	movwf	0+(_ubDisplay_buf)^080h+0Ch
  3693                           	line	126
  3694                           	
  3695  06FB                     l10961:	
  3696                           ;Display_2raw.c: 126: ubDisplay_buf[13] =0x2e;
  3697  06FB  302E               	movlw	(02Eh)
  3698  06FC  1283               	bcf	status, 5	;RP0=0, select bank0
  3699  06FD  1303               	bcf	status, 6	;RP1=0, select bank0
  3700  06FE  00D9               	movwf	(??_SetDisplay_Current_target+0)+0
  3701  06FF  0859               	movf	(??_SetDisplay_Current_target+0)+0,w
  3702  0700  1683               	bsf	status, 5	;RP0=1, select bank1
  3703  0701  1303               	bcf	status, 6	;RP1=0, select bank1
  3704  0702  00AD               	movwf	0+(_ubDisplay_buf)^080h+0Dh
  3705                           	line	127
  3706                           	
  3707  0703                     l10963:	
  3708                           ;Display_2raw.c: 127: ubDisplay_buf[14] = ubFourthByte + 0x30;
  3709  0703  1283               	bcf	status, 5	;RP0=0, select bank0
  3710  0704  1303               	bcf	status, 6	;RP1=0, select bank0
  3711  0705  0847               	movf	(_ubFourthByte),w
  3712  0706  3E30               	addlw	030h
  3713  0707  00D9               	movwf	(??_SetDisplay_Current_target+0)+0
  3714  0708  0859               	movf	(??_SetDisplay_Current_target+0)+0,w
  3715  0709  1683               	bsf	status, 5	;RP0=1, select bank1
  3716  070A  1303               	bcf	status, 6	;RP1=0, select bank1
  3717  070B  00AE               	movwf	0+(_ubDisplay_buf)^080h+0Eh
  3718                           	line	128
  3719                           	
  3720  070C                     l10965:	
  3721                           ;Display_2raw.c: 128: ubDisplay_buf[15] =0x41;
  3722  070C  3041               	movlw	(041h)
  3723  070D  1283               	bcf	status, 5	;RP0=0, select bank0
  3724  070E  1303               	bcf	status, 6	;RP1=0, select bank0
  3725  070F  00D9               	movwf	(??_SetDisplay_Current_target+0)+0
  3726  0710  0859               	movf	(??_SetDisplay_Current_target+0)+0,w
  3727  0711  1683               	bsf	status, 5	;RP0=1, select bank1
  3728  0712  1303               	bcf	status, 6	;RP1=0, select bank1
  3729  0713  00AF               	movwf	0+(_ubDisplay_buf)^080h+0Fh
  3730                           	line	129
  3731                           	
  3732  0714                     l7036:	
  3733  0714  0008               	return
  3734                           	opt stack 0
  3735                           GLOBAL	__end_of_SetDisplay_Current_target
  3736  0715                     	__end_of_SetDisplay_Current_target:
  3737 ;; =============== function _SetDisplay_Current_target ends ============
  3738                           
  3739                           	signat	_SetDisplay_Current_target,4216
  3740                           	global	_Divizor_U_Pot
  3741                           psect	text829,local,class=CODE,delta=2
  3742                           global __ptext829
  3743  0EF5                     __ptext829:
  3744                           
  3745 ;; *************** function _Divizor_U_Pot *****************
  3746 ;; Defined at:
  3747 ;;		line 29 in file "E:\my_projects\2013\power\software\power.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  luw_ADCV2       2   13[BANK0 ] unsigned short 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  lul_aux         4   21[BANK0 ] unsigned long 
  3752 ;;  luw_UoutSens    2   19[BANK0 ] unsigned short 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2   13[BANK0 ] unsigned short 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0, pclath, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3762 ;;      Params:         0       2       0       0       0
  3763 ;;      Locals:         0       6       0       0       0
  3764 ;;      Temps:          0       4       0       0       0
  3765 ;;      Totals:         0      12       0       0       0
  3766 ;;Total ram usage:       12 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    3
  3769 ;; This function calls:
  3770 ;;		___lmul
  3771 ;; This function is called by:
  3772 ;;		_task_slow
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           psect	text829
  3776                           	file	"E:\my_projects\2013\power\software\power.c"
  3777                           	line	29
  3778                           	global	__size_of_Divizor_U_Pot
  3779  0050                     	__size_of_Divizor_U_Pot	equ	__end_of_Divizor_U_Pot-_Divizor_U_Pot
  3780                           	
  3781  0EF5                     _Divizor_U_Pot:	
  3782                           	opt	stack 3
  3783                           ; Regs used in _Divizor_U_Pot: [wreg+status,2+status,0+pclath+cstack]
  3784                           	line	30
  3785                           	
  3786  0EF5                     l10929:	
  3787                           ;power.c: 30: T_UWORD luw_UoutSense = 0;
  3788  0EF5  1283               	bcf	status, 5	;RP0=0, select bank0
  3789  0EF6  1303               	bcf	status, 6	;RP1=0, select bank0
  3790  0EF7  01E4               	clrf	(Divizor_U_Pot@luw_UoutSense)
  3791  0EF8  01E5               	clrf	(Divizor_U_Pot@luw_UoutSense+1)
  3792                           	line	31
  3793                           	
  3794  0EF9                     l10931:	
  3795                           ;power.c: 31: T_ULONG lul_aux = 0;
  3796  0EF9  3000               	movlw	0
  3797  0EFA  00E9               	movwf	(Divizor_U_Pot@lul_aux+3)
  3798  0EFB  3000               	movlw	0
  3799  0EFC  00E8               	movwf	(Divizor_U_Pot@lul_aux+2)
  3800  0EFD  3000               	movlw	0
  3801  0EFE  00E7               	movwf	(Divizor_U_Pot@lul_aux+1)
  3802  0EFF  3000               	movlw	0
  3803  0F00  00E6               	movwf	(Divizor_U_Pot@lul_aux)
  3804                           
  3805                           	line	33
  3806                           	
  3807  0F01                     l10933:	
  3808                           ;power.c: 33: lul_aux = (((T_ULONG)luw_ADCV2) * 93);
  3809  0F01  085E               	movf	(Divizor_U_Pot@luw_ADCV2),w
  3810  0F02  00D1               	movwf	(?___lmul)
  3811  0F03  085F               	movf	(Divizor_U_Pot@luw_ADCV2+1),w
  3812  0F04  00D2               	movwf	((?___lmul))+1
  3813  0F05  01D3               	clrf	2+((?___lmul))
  3814  0F06  01D4               	clrf	3+((?___lmul))
  3815  0F07  3000               	movlw	0
  3816  0F08  00D8               	movwf	3+(?___lmul)+04h
  3817  0F09  3000               	movlw	0
  3818  0F0A  00D7               	movwf	2+(?___lmul)+04h
  3819  0F0B  3000               	movlw	0
  3820  0F0C  00D6               	movwf	1+(?___lmul)+04h
  3821  0F0D  305D               	movlw	05Dh
  3822  0F0E  00D5               	movwf	0+(?___lmul)+04h
  3823                           
  3824  0F0F  120A  158A  2609   	fcall	___lmul
              120A  158A         
  3825  0F14  1283               	bcf	status, 5	;RP0=0, select bank0
  3826  0F15  1303               	bcf	status, 6	;RP1=0, select bank0
  3827  0F16  0854               	movf	(3+(?___lmul)),w
  3828  0F17  00E9               	movwf	(Divizor_U_Pot@lul_aux+3)
  3829  0F18  0853               	movf	(2+(?___lmul)),w
  3830  0F19  00E8               	movwf	(Divizor_U_Pot@lul_aux+2)
  3831  0F1A  0852               	movf	(1+(?___lmul)),w
  3832  0F1B  00E7               	movwf	(Divizor_U_Pot@lul_aux+1)
  3833  0F1C  0851               	movf	(0+(?___lmul)),w
  3834  0F1D  00E6               	movwf	(Divizor_U_Pot@lul_aux)
  3835                           
  3836                           	line	34
  3837                           	
  3838  0F1E                     l10935:	
  3839                           ;power.c: 34: lul_aux = lul_aux>> 6 ;
  3840  0F1E  0866               	movf	(Divizor_U_Pot@lul_aux),w
  3841  0F1F  00E0               	movwf	(??_Divizor_U_Pot+0)+0
  3842  0F20  0867               	movf	(Divizor_U_Pot@lul_aux+1),w
  3843  0F21  00E1               	movwf	((??_Divizor_U_Pot+0)+0+1)
  3844  0F22  0868               	movf	(Divizor_U_Pot@lul_aux+2),w
  3845  0F23  00E2               	movwf	((??_Divizor_U_Pot+0)+0+2)
  3846  0F24  0869               	movf	(Divizor_U_Pot@lul_aux+3),w
  3847  0F25  00E3               	movwf	((??_Divizor_U_Pot+0)+0+3)
  3848  0F26  3006               	movlw	06h
  3849  0F27                     u4235:
  3850  0F27  1003               	clrc
  3851  0F28  0CE3               	rrf	(??_Divizor_U_Pot+0)+3,f
  3852  0F29  0CE2               	rrf	(??_Divizor_U_Pot+0)+2,f
  3853  0F2A  0CE1               	rrf	(??_Divizor_U_Pot+0)+1,f
  3854  0F2B  0CE0               	rrf	(??_Divizor_U_Pot+0)+0,f
  3855  0F2C                     u4230:
  3856  0F2C  3EFF               	addlw	-1
  3857  0F2D  1D03               	skipz
  3858  0F2E  2F27               	goto	u4235
  3859  0F2F  0863               	movf	3+(??_Divizor_U_Pot+0)+0,w
  3860  0F30  00E9               	movwf	(Divizor_U_Pot@lul_aux+3)
  3861  0F31  0862               	movf	2+(??_Divizor_U_Pot+0)+0,w
  3862  0F32  00E8               	movwf	(Divizor_U_Pot@lul_aux+2)
  3863  0F33  0861               	movf	1+(??_Divizor_U_Pot+0)+0,w
  3864  0F34  00E7               	movwf	(Divizor_U_Pot@lul_aux+1)
  3865  0F35  0860               	movf	0+(??_Divizor_U_Pot+0)+0,w
  3866  0F36  00E6               	movwf	(Divizor_U_Pot@lul_aux)
  3867                           
  3868                           	line	35
  3869                           	
  3870  0F37                     l10937:	
  3871                           ;power.c: 35: luw_UoutSense = (T_UWORD)lul_aux;
  3872  0F37  0867               	movf	(Divizor_U_Pot@lul_aux+1),w
  3873  0F38  01E5               	clrf	(Divizor_U_Pot@luw_UoutSense+1)
  3874  0F39  07E5               	addwf	(Divizor_U_Pot@luw_UoutSense+1)
  3875  0F3A  0866               	movf	(Divizor_U_Pot@lul_aux),w
  3876  0F3B  01E4               	clrf	(Divizor_U_Pot@luw_UoutSense)
  3877  0F3C  07E4               	addwf	(Divizor_U_Pot@luw_UoutSense)
  3878                           
  3879                           	line	37
  3880                           	
  3881  0F3D                     l10939:	
  3882                           ;power.c: 37: return luw_UoutSense;
  3883  0F3D  0865               	movf	(Divizor_U_Pot@luw_UoutSense+1),w
  3884  0F3E  01DF               	clrf	(?_Divizor_U_Pot+1)
  3885  0F3F  07DF               	addwf	(?_Divizor_U_Pot+1)
  3886  0F40  0864               	movf	(Divizor_U_Pot@luw_UoutSense),w
  3887  0F41  01DE               	clrf	(?_Divizor_U_Pot)
  3888  0F42  07DE               	addwf	(?_Divizor_U_Pot)
  3889                           
  3890  0F43  2F44               	goto	l6364
  3891                           	
  3892  0F44                     l10941:	
  3893                           	line	38
  3894                           	
  3895  0F44                     l6364:	
  3896  0F44  0008               	return
  3897                           	opt stack 0
  3898                           GLOBAL	__end_of_Divizor_U_Pot
  3899  0F45                     	__end_of_Divizor_U_Pot:
  3900 ;; =============== function _Divizor_U_Pot ends ============
  3901                           
  3902                           	signat	_Divizor_U_Pot,4218
  3903                           	global	_SetDisplay_Current
  3904                           psect	text830,local,class=CODE,delta=2
  3905                           global __ptext830
  3906  04CF                     __ptext830:
  3907                           
  3908 ;; *************** function _SetDisplay_Current *****************
  3909 ;; Defined at:
  3910 ;;		line 84 in file "E:\my_projects\2013\power\software\Display_2raw.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  uwCurent        2    6[BANK0 ] unsigned short 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  luwTemp         2   11[BANK0 ] unsigned short 
  3915 ;;  lubNumber       1   10[BANK0 ] unsigned char 
  3916 ;;  lubFirstByte    1    0        unsigned char 
  3917 ;;  lubSecondByt    1    0        unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0, pclath, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3927 ;;      Params:         0       2       0       0       0
  3928 ;;      Locals:         0       3       0       0       0
  3929 ;;      Temps:          0       2       0       0       0
  3930 ;;      Totals:         0       7       0       0       0
  3931 ;;Total ram usage:        7 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    3
  3934 ;; This function calls:
  3935 ;;		___wmul
  3936 ;; This function is called by:
  3937 ;;		_task_slow
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           psect	text830
  3941                           	file	"E:\my_projects\2013\power\software\Display_2raw.c"
  3942                           	line	84
  3943                           	global	__size_of_SetDisplay_Current
  3944  0079                     	__size_of_SetDisplay_Current	equ	__end_of_SetDisplay_Current-_SetDisplay_Current
  3945                           	
  3946  04CF                     _SetDisplay_Current:	
  3947                           	opt	stack 3
  3948                           ; Regs used in _SetDisplay_Current: [wreg+status,2+status,0+pclath+cstack]
  3949                           	line	85
  3950                           	
  3951  04CF                     l10903:	
  3952                           ;Display_2raw.c: 85: T_UBYTE lubNumber=0;
  3953  04CF  1283               	bcf	status, 5	;RP0=0, select bank0
  3954  04D0  1303               	bcf	status, 6	;RP1=0, select bank0
  3955  04D1  01DB               	clrf	(SetDisplay_Current@lubNumber)
  3956                           	line	89
  3957                           	
  3958  04D2                     l10905:	
  3959                           ;Display_2raw.c: 86: T_UBYTE lubSecondByte,lubFirstByte;
  3960                           ;Display_2raw.c: 87: T_UWORD luwTemp;
  3961                           ;Display_2raw.c: 89: luwTemp = (T_UWORD)uwCurent >> 12;
  3962  04D2  0858               	movf	(SetDisplay_Current@uwCurent+1),w
  3963  04D3  00DA               	movwf	(??_SetDisplay_Current+0)+0+1
  3964  04D4  0857               	movf	(SetDisplay_Current@uwCurent),w
  3965  04D5  00D9               	movwf	(??_SetDisplay_Current+0)+0
  3966  04D6  300C               	movlw	0Ch
  3967  04D7                     u4215:
  3968  04D7  1003               	clrc
  3969  04D8  0CDA               	rrf	(??_SetDisplay_Current+0)+1,f
  3970  04D9  0CD9               	rrf	(??_SetDisplay_Current+0)+0,f
  3971  04DA  3EFF               	addlw	-1
  3972  04DB  1D03               	skipz
  3973  04DC  2CD7               	goto	u4215
  3974  04DD  0859               	movf	0+(??_SetDisplay_Current+0)+0,w
  3975  04DE  00DC               	movwf	(SetDisplay_Current@luwTemp)
  3976  04DF  085A               	movf	1+(??_SetDisplay_Current+0)+0,w
  3977  04E0  00DD               	movwf	(SetDisplay_Current@luwTemp+1)
  3978                           	line	90
  3979                           ;Display_2raw.c: 90: ubNumberINT = luwTemp;
  3980  04E1  085D               	movf	(SetDisplay_Current@luwTemp+1),w
  3981  04E2  01AC               	clrf	(_ubNumberINT+1)
  3982  04E3  07AC               	addwf	(_ubNumberINT+1)
  3983  04E4  085C               	movf	(SetDisplay_Current@luwTemp),w
  3984  04E5  01AB               	clrf	(_ubNumberINT)
  3985  04E6  07AB               	addwf	(_ubNumberINT)
  3986                           
  3987                           	line	91
  3988                           	
  3989  04E7                     l10907:	
  3990                           ;Display_2raw.c: 91: lubNumber = ubNumberINT;
  3991  04E7  082B               	movf	(_ubNumberINT),w
  3992  04E8  00D9               	movwf	(??_SetDisplay_Current+0)+0
  3993  04E9  0859               	movf	(??_SetDisplay_Current+0)+0,w
  3994  04EA  00DB               	movwf	(SetDisplay_Current@lubNumber)
  3995                           	line	93
  3996                           	
  3997  04EB                     l10909:	
  3998                           ;Display_2raw.c: 93: uwNumberFRC = uwCurent & (0x0FFF);
  3999  04EB  30FF               	movlw	low(0FFFh)
  4000  04EC  0557               	andwf	(SetDisplay_Current@uwCurent),w
  4001  04ED  00AD               	movwf	(_uwNumberFRC)
  4002  04EE  300F               	movlw	high(0FFFh)
  4003  04EF  0558               	andwf	(SetDisplay_Current@uwCurent+1),w
  4004  04F0  00AE               	movwf	1+(_uwNumberFRC)
  4005                           	line	94
  4006                           	
  4007  04F1                     l10911:	
  4008                           ;Display_2raw.c: 94: uwNumberFRC = uwNumberFRC * 10;
  4009  04F1  082E               	movf	(_uwNumberFRC+1),w
  4010  04F2  01D2               	clrf	(?___wmul+1)
  4011  04F3  07D2               	addwf	(?___wmul+1)
  4012  04F4  082D               	movf	(_uwNumberFRC),w
  4013  04F5  01D1               	clrf	(?___wmul)
  4014  04F6  07D1               	addwf	(?___wmul)
  4015                           
  4016  04F7  300A               	movlw	low(0Ah)
  4017  04F8  00D3               	movwf	0+(?___wmul)+02h
  4018  04F9  3000               	movlw	high(0Ah)
  4019  04FA  00D4               	movwf	(0+(?___wmul)+02h)+1
  4020  04FB  120A  158A  24E9   	fcall	___wmul
              120A  118A         
  4021  0500  1283               	bcf	status, 5	;RP0=0, select bank0
  4022  0501  1303               	bcf	status, 6	;RP1=0, select bank0
  4023  0502  0852               	movf	(1+(?___wmul)),w
  4024  0503  01AE               	clrf	(_uwNumberFRC+1)
  4025  0504  07AE               	addwf	(_uwNumberFRC+1)
  4026  0505  0851               	movf	(0+(?___wmul)),w
  4027  0506  01AD               	clrf	(_uwNumberFRC)
  4028  0507  07AD               	addwf	(_uwNumberFRC)
  4029                           
  4030                           	line	96
  4031                           	
  4032  0508                     l10913:	
  4033                           ;Display_2raw.c: 96: uwNumberFRC = uwNumberFRC >> 12;
  4034  0508  082E               	movf	(_uwNumberFRC+1),w
  4035  0509  00DA               	movwf	(??_SetDisplay_Current+0)+0+1
  4036  050A  082D               	movf	(_uwNumberFRC),w
  4037  050B  00D9               	movwf	(??_SetDisplay_Current+0)+0
  4038  050C  300C               	movlw	0Ch
  4039  050D                     u4225:
  4040  050D  1003               	clrc
  4041  050E  0CDA               	rrf	(??_SetDisplay_Current+0)+1,f
  4042  050F  0CD9               	rrf	(??_SetDisplay_Current+0)+0,f
  4043  0510  3EFF               	addlw	-1
  4044  0511  1D03               	skipz
  4045  0512  2D0D               	goto	u4225
  4046  0513  0859               	movf	0+(??_SetDisplay_Current+0)+0,w
  4047  0514  00AD               	movwf	(_uwNumberFRC)
  4048  0515  085A               	movf	1+(??_SetDisplay_Current+0)+0,w
  4049  0516  00AE               	movwf	(_uwNumberFRC+1)
  4050                           	line	98
  4051                           	
  4052  0517                     l10915:	
  4053                           ;Display_2raw.c: 98: ubFourthByte = uwNumberFRC;
  4054  0517  082D               	movf	(_uwNumberFRC),w
  4055  0518  00D9               	movwf	(??_SetDisplay_Current+0)+0
  4056  0519  0859               	movf	(??_SetDisplay_Current+0)+0,w
  4057  051A  00C7               	movwf	(_ubFourthByte)
  4058                           	line	99
  4059                           	
  4060  051B                     l10917:	
  4061                           ;Display_2raw.c: 99: ubThrdByte = ubNumberINT;
  4062  051B  082B               	movf	(_ubNumberINT),w
  4063  051C  00D9               	movwf	(??_SetDisplay_Current+0)+0
  4064  051D  0859               	movf	(??_SetDisplay_Current+0)+0,w
  4065  051E  00C9               	movwf	(_ubThrdByte)
  4066                           	line	100
  4067                           	
  4068  051F                     l10919:	
  4069                           ;Display_2raw.c: 100: ubDisplay_buf[4] = 0x02F;
  4070  051F  302F               	movlw	(02Fh)
  4071  0520  00D9               	movwf	(??_SetDisplay_Current+0)+0
  4072  0521  0859               	movf	(??_SetDisplay_Current+0)+0,w
  4073  0522  1683               	bsf	status, 5	;RP0=1, select bank1
  4074  0523  1303               	bcf	status, 6	;RP1=0, select bank1
  4075  0524  00A4               	movwf	0+(_ubDisplay_buf)^080h+04h
  4076                           	line	101
  4077                           	
  4078  0525                     l10921:	
  4079                           ;Display_2raw.c: 101: ubDisplay_buf[5] = ubThrdByte + 0x30;
  4080  0525  1283               	bcf	status, 5	;RP0=0, select bank0
  4081  0526  1303               	bcf	status, 6	;RP1=0, select bank0
  4082  0527  0849               	movf	(_ubThrdByte),w
  4083  0528  3E30               	addlw	030h
  4084  0529  00D9               	movwf	(??_SetDisplay_Current+0)+0
  4085  052A  0859               	movf	(??_SetDisplay_Current+0)+0,w
  4086  052B  1683               	bsf	status, 5	;RP0=1, select bank1
  4087  052C  1303               	bcf	status, 6	;RP1=0, select bank1
  4088  052D  00A5               	movwf	0+(_ubDisplay_buf)^080h+05h
  4089                           	line	102
  4090                           	
  4091  052E                     l10923:	
  4092                           ;Display_2raw.c: 102: ubDisplay_buf[6] =0x2E;
  4093  052E  302E               	movlw	(02Eh)
  4094  052F  1283               	bcf	status, 5	;RP0=0, select bank0
  4095  0530  1303               	bcf	status, 6	;RP1=0, select bank0
  4096  0531  00D9               	movwf	(??_SetDisplay_Current+0)+0
  4097  0532  0859               	movf	(??_SetDisplay_Current+0)+0,w
  4098  0533  1683               	bsf	status, 5	;RP0=1, select bank1
  4099  0534  1303               	bcf	status, 6	;RP1=0, select bank1
  4100  0535  00A6               	movwf	0+(_ubDisplay_buf)^080h+06h
  4101                           	line	103
  4102                           	
  4103  0536                     l10925:	
  4104                           ;Display_2raw.c: 103: ubDisplay_buf[7] = ubFourthByte + 0x30;
  4105  0536  1283               	bcf	status, 5	;RP0=0, select bank0
  4106  0537  1303               	bcf	status, 6	;RP1=0, select bank0
  4107  0538  0847               	movf	(_ubFourthByte),w
  4108  0539  3E30               	addlw	030h
  4109  053A  00D9               	movwf	(??_SetDisplay_Current+0)+0
  4110  053B  0859               	movf	(??_SetDisplay_Current+0)+0,w
  4111  053C  1683               	bsf	status, 5	;RP0=1, select bank1
  4112  053D  1303               	bcf	status, 6	;RP1=0, select bank1
  4113  053E  00A7               	movwf	0+(_ubDisplay_buf)^080h+07h
  4114                           	line	104
  4115                           	
  4116  053F                     l10927:	
  4117                           ;Display_2raw.c: 104: ubDisplay_buf[8] = 0x41;
  4118  053F  3041               	movlw	(041h)
  4119  0540  1283               	bcf	status, 5	;RP0=0, select bank0
  4120  0541  1303               	bcf	status, 6	;RP1=0, select bank0
  4121  0542  00D9               	movwf	(??_SetDisplay_Current+0)+0
  4122  0543  0859               	movf	(??_SetDisplay_Current+0)+0,w
  4123  0544  1683               	bsf	status, 5	;RP0=1, select bank1
  4124  0545  1303               	bcf	status, 6	;RP1=0, select bank1
  4125  0546  00A8               	movwf	0+(_ubDisplay_buf)^080h+08h
  4126                           	line	106
  4127                           	
  4128  0547                     l7033:	
  4129  0547  0008               	return
  4130                           	opt stack 0
  4131                           GLOBAL	__end_of_SetDisplay_Current
  4132  0548                     	__end_of_SetDisplay_Current:
  4133 ;; =============== function _SetDisplay_Current ends ============
  4134                           
  4135                           	signat	_SetDisplay_Current,4216
  4136                           	global	_Rawvalue_to_Current
  4137                           psect	text831,local,class=CODE,delta=2
  4138                           global __ptext831
  4139  0F45                     __ptext831:
  4140                           
  4141 ;; *************** function _Rawvalue_to_Current *****************
  4142 ;; Defined at:
  4143 ;;		line 17 in file "E:\my_projects\2013\power\software\power.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  luw_ADCV1       2   14[BANK0 ] unsigned short 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  lul_aux         4   20[BANK0 ] unsigned long 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2   14[BANK0 ] unsigned short 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0, pclath, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       2       0       0       0
  4158 ;;      Locals:         0       4       0       0       0
  4159 ;;      Temps:          0       4       0       0       0
  4160 ;;      Totals:         0      10       0       0       0
  4161 ;;Total ram usage:       10 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    3
  4164 ;; This function calls:
  4165 ;;		___lldiv
  4166 ;; This function is called by:
  4167 ;;		_task_slow
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           psect	text831
  4171                           	file	"E:\my_projects\2013\power\software\power.c"
  4172                           	line	17
  4173                           	global	__size_of_Rawvalue_to_Current
  4174  0053                     	__size_of_Rawvalue_to_Current	equ	__end_of_Rawvalue_to_Current-_Rawvalue_to_Current
  4175                           	
  4176  0F45                     _Rawvalue_to_Current:	
  4177                           	opt	stack 3
  4178                           ; Regs used in _Rawvalue_to_Current: [wreg+status,2+status,0+pclath+cstack]
  4179                           	line	19
  4180                           	
  4181  0F45                     l10893:	
  4182                           ;power.c: 19: T_ULONG lul_aux = 0;
  4183  0F45  3000               	movlw	0
  4184  0F46  1283               	bcf	status, 5	;RP0=0, select bank0
  4185  0F47  1303               	bcf	status, 6	;RP1=0, select bank0
  4186  0F48  00E8               	movwf	(Rawvalue_to_Current@lul_aux+3)
  4187  0F49  3000               	movlw	0
  4188  0F4A  00E7               	movwf	(Rawvalue_to_Current@lul_aux+2)
  4189  0F4B  3000               	movlw	0
  4190  0F4C  00E6               	movwf	(Rawvalue_to_Current@lul_aux+1)
  4191  0F4D  3000               	movlw	0
  4192  0F4E  00E5               	movwf	(Rawvalue_to_Current@lul_aux)
  4193                           
  4194                           	line	22
  4195                           	
  4196  0F4F                     l10895:	
  4197                           ;power.c: 22: lul_aux = luw_ADCV1>>2 ;
  4198  0F4F  0860               	movf	(Rawvalue_to_Current@luw_ADCV1+1),w
  4199  0F50  00E2               	movwf	(??_Rawvalue_to_Current+0)+0+1
  4200  0F51  085F               	movf	(Rawvalue_to_Current@luw_ADCV1),w
  4201  0F52  00E1               	movwf	(??_Rawvalue_to_Current+0)+0
  4202  0F53  3002               	movlw	02h
  4203  0F54                     u4195:
  4204  0F54  1003               	clrc
  4205  0F55  0CE2               	rrf	(??_Rawvalue_to_Current+0)+1,f
  4206  0F56  0CE1               	rrf	(??_Rawvalue_to_Current+0)+0,f
  4207  0F57  3EFF               	addlw	-1
  4208  0F58  1D03               	skipz
  4209  0F59  2F54               	goto	u4195
  4210  0F5A  0861               	movf	0+(??_Rawvalue_to_Current+0)+0,w
  4211  0F5B  00E5               	movwf	(Rawvalue_to_Current@lul_aux)
  4212  0F5C  0862               	movf	1+(??_Rawvalue_to_Current+0)+0,w
  4213  0F5D  00E6               	movwf	((Rawvalue_to_Current@lul_aux))+1
  4214  0F5E  01E7               	clrf	2+((Rawvalue_to_Current@lul_aux))
  4215  0F5F  01E8               	clrf	3+((Rawvalue_to_Current@lul_aux))
  4216                           	line	24
  4217                           	
  4218  0F60                     l10897:	
  4219                           ;power.c: 24: lul_aux = lul_aux *32 /10;
  4220  0F60  3000               	movlw	0
  4221  0F61  00D4               	movwf	(?___lldiv+3)
  4222  0F62  3000               	movlw	0
  4223  0F63  00D3               	movwf	(?___lldiv+2)
  4224  0F64  3000               	movlw	0
  4225  0F65  00D2               	movwf	(?___lldiv+1)
  4226  0F66  300A               	movlw	0Ah
  4227  0F67  00D1               	movwf	(?___lldiv)
  4228                           
  4229  0F68  0865               	movf	(Rawvalue_to_Current@lul_aux),w
  4230  0F69  00E1               	movwf	(??_Rawvalue_to_Current+0)+0
  4231  0F6A  0866               	movf	(Rawvalue_to_Current@lul_aux+1),w
  4232  0F6B  00E2               	movwf	((??_Rawvalue_to_Current+0)+0+1)
  4233  0F6C  0867               	movf	(Rawvalue_to_Current@lul_aux+2),w
  4234  0F6D  00E3               	movwf	((??_Rawvalue_to_Current+0)+0+2)
  4235  0F6E  0868               	movf	(Rawvalue_to_Current@lul_aux+3),w
  4236  0F6F  00E4               	movwf	((??_Rawvalue_to_Current+0)+0+3)
  4237  0F70  3005               	movlw	05h
  4238  0F71                     u4205:
  4239  0F71  1003               	clrc
  4240  0F72  0DE1               	rlf	(??_Rawvalue_to_Current+0)+0,f
  4241  0F73  0DE2               	rlf	(??_Rawvalue_to_Current+0)+1,f
  4242  0F74  0DE3               	rlf	(??_Rawvalue_to_Current+0)+2,f
  4243  0F75  0DE4               	rlf	(??_Rawvalue_to_Current+0)+3,f
  4244  0F76                     u4200:
  4245  0F76  3EFF               	addlw	-1
  4246  0F77  1D03               	skipz
  4247  0F78  2F71               	goto	u4205
  4248  0F79  0864               	movf	3+(??_Rawvalue_to_Current+0)+0,w
  4249  0F7A  00D8               	movwf	3+(?___lldiv)+04h
  4250  0F7B  0863               	movf	2+(??_Rawvalue_to_Current+0)+0,w
  4251  0F7C  00D7               	movwf	2+(?___lldiv)+04h
  4252  0F7D  0862               	movf	1+(??_Rawvalue_to_Current+0)+0,w
  4253  0F7E  00D6               	movwf	1+(?___lldiv)+04h
  4254  0F7F  0861               	movf	0+(??_Rawvalue_to_Current+0)+0,w
  4255  0F80  00D5               	movwf	0+(?___lldiv)+04h
  4256                           
  4257  0F81  120A  118A  2785   	fcall	___lldiv
              120A  158A         
  4258  0F86  1283               	bcf	status, 5	;RP0=0, select bank0
  4259  0F87  1303               	bcf	status, 6	;RP1=0, select bank0
  4260  0F88  0854               	movf	(3+(?___lldiv)),w
  4261  0F89  00E8               	movwf	(Rawvalue_to_Current@lul_aux+3)
  4262  0F8A  0853               	movf	(2+(?___lldiv)),w
  4263  0F8B  00E7               	movwf	(Rawvalue_to_Current@lul_aux+2)
  4264  0F8C  0852               	movf	(1+(?___lldiv)),w
  4265  0F8D  00E6               	movwf	(Rawvalue_to_Current@lul_aux+1)
  4266  0F8E  0851               	movf	(0+(?___lldiv)),w
  4267  0F8F  00E5               	movwf	(Rawvalue_to_Current@lul_aux)
  4268                           
  4269                           	line	26
  4270                           	
  4271  0F90                     l10899:	
  4272                           ;power.c: 26: return (T_UWORD)lul_aux;
  4273  0F90  0866               	movf	(Rawvalue_to_Current@lul_aux+1),w
  4274  0F91  01E0               	clrf	(?_Rawvalue_to_Current+1)
  4275  0F92  07E0               	addwf	(?_Rawvalue_to_Current+1)
  4276  0F93  0865               	movf	(Rawvalue_to_Current@lul_aux),w
  4277  0F94  01DF               	clrf	(?_Rawvalue_to_Current)
  4278  0F95  07DF               	addwf	(?_Rawvalue_to_Current)
  4279                           
  4280  0F96  2F97               	goto	l6361
  4281                           	
  4282  0F97                     l10901:	
  4283                           	line	27
  4284                           	
  4285  0F97                     l6361:	
  4286  0F97  0008               	return
  4287                           	opt stack 0
  4288                           GLOBAL	__end_of_Rawvalue_to_Current
  4289  0F98                     	__end_of_Rawvalue_to_Current:
  4290 ;; =============== function _Rawvalue_to_Current ends ============
  4291                           
  4292                           	signat	_Rawvalue_to_Current,4218
  4293                           	global	_SetDisplay_Voltage
  4294                           psect	text832,local,class=CODE,delta=2
  4295                           global __ptext832
  4296  03A5                     __ptext832:
  4297                           
  4298 ;; *************** function _SetDisplay_Voltage *****************
  4299 ;; Defined at:
  4300 ;;		line 58 in file "E:\my_projects\2013\power\software\Display_2raw.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  uwVoltage       2    9[BANK0 ] unsigned short 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  luwNumberFra    2   16[BANK0 ] unsigned short 
  4305 ;;  lubNumber       1   18[BANK0 ] unsigned char 
  4306 ;;  lubFirstByte    1   15[BANK0 ] unsigned char 
  4307 ;;  lubSecondByt    1   14[BANK0 ] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;		None               void
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4317 ;;      Params:         0       2       0       0       0
  4318 ;;      Locals:         0       5       0       0       0
  4319 ;;      Temps:          0       3       0       0       0
  4320 ;;      Totals:         0      10       0       0       0
  4321 ;;Total ram usage:       10 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    3
  4324 ;; This function calls:
  4325 ;;		___awmod
  4326 ;;		___awdiv
  4327 ;;		___wmul
  4328 ;; This function is called by:
  4329 ;;		_task_slow
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           psect	text832
  4333                           	file	"E:\my_projects\2013\power\software\Display_2raw.c"
  4334                           	line	58
  4335                           	global	__size_of_SetDisplay_Voltage
  4336  00AE                     	__size_of_SetDisplay_Voltage	equ	__end_of_SetDisplay_Voltage-_SetDisplay_Voltage
  4337                           	
  4338  03A5                     _SetDisplay_Voltage:	
  4339                           	opt	stack 3
  4340                           ; Regs used in _SetDisplay_Voltage: [wreg+status,2+status,0+pclath+cstack]
  4341                           	line	59
  4342                           	
  4343  03A5                     l10869:	
  4344                           ;Display_2raw.c: 59: T_UBYTE lubNumber=0;
  4345  03A5  1283               	bcf	status, 5	;RP0=0, select bank0
  4346  03A6  1303               	bcf	status, 6	;RP1=0, select bank0
  4347  03A7  01E3               	clrf	(SetDisplay_Voltage@lubNumber)
  4348                           	line	64
  4349                           	
  4350  03A8                     l10871:	
  4351                           ;Display_2raw.c: 60: T_UBYTE lubSecondByte,lubFirstByte;
  4352                           ;Display_2raw.c: 61: T_UWORD luwNumberFrac;
  4353                           ;Display_2raw.c: 64: ubNumberINT = uwVoltage >> 11;
  4354  03A8  085B               	movf	(SetDisplay_Voltage@uwVoltage+1),w
  4355  03A9  00DD               	movwf	(??_SetDisplay_Voltage+0)+0+1
  4356  03AA  085A               	movf	(SetDisplay_Voltage@uwVoltage),w
  4357  03AB  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4358  03AC  300B               	movlw	0Bh
  4359  03AD                     u4175:
  4360  03AD  1003               	clrc
  4361  03AE  0CDD               	rrf	(??_SetDisplay_Voltage+0)+1,f
  4362  03AF  0CDC               	rrf	(??_SetDisplay_Voltage+0)+0,f
  4363  03B0  3EFF               	addlw	-1
  4364  03B1  1D03               	skipz
  4365  03B2  2BAD               	goto	u4175
  4366  03B3  085C               	movf	0+(??_SetDisplay_Voltage+0)+0,w
  4367  03B4  00AB               	movwf	(_ubNumberINT)
  4368  03B5  085D               	movf	1+(??_SetDisplay_Voltage+0)+0,w
  4369  03B6  00AC               	movwf	(_ubNumberINT+1)
  4370                           	line	65
  4371                           	
  4372  03B7                     l10873:	
  4373                           ;Display_2raw.c: 65: lubNumber = ubNumberINT;
  4374  03B7  082B               	movf	(_ubNumberINT),w
  4375  03B8  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4376  03B9  085C               	movf	(??_SetDisplay_Voltage+0)+0,w
  4377  03BA  00E3               	movwf	(SetDisplay_Voltage@lubNumber)
  4378                           	line	66
  4379                           	
  4380  03BB                     l10875:	
  4381                           ;Display_2raw.c: 66: lubFirstByte = lubNumber %10;
  4382  03BB  300A               	movlw	low(0Ah)
  4383  03BC  00D1               	movwf	(?___awmod)
  4384  03BD  3000               	movlw	high(0Ah)
  4385  03BE  00D2               	movwf	((?___awmod))+1
  4386  03BF  0863               	movf	(SetDisplay_Voltage@lubNumber),w
  4387  03C0  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4388  03C1  01DD               	clrf	(??_SetDisplay_Voltage+0)+0+1
  4389  03C2  085C               	movf	0+(??_SetDisplay_Voltage+0)+0,w
  4390  03C3  00D3               	movwf	0+(?___awmod)+02h
  4391  03C4  085D               	movf	1+(??_SetDisplay_Voltage+0)+0,w
  4392  03C5  00D4               	movwf	1+(?___awmod)+02h
  4393  03C6  120A  158A  2798   	fcall	___awmod
              120A  118A         
  4394  03CB  1283               	bcf	status, 5	;RP0=0, select bank0
  4395  03CC  1303               	bcf	status, 6	;RP1=0, select bank0
  4396  03CD  0851               	movf	(0+(?___awmod)),w
  4397  03CE  00DE               	movwf	(??_SetDisplay_Voltage+2)+0
  4398  03CF  085E               	movf	(??_SetDisplay_Voltage+2)+0,w
  4399  03D0  00E0               	movwf	(SetDisplay_Voltage@lubFirstByte)
  4400                           	line	67
  4401                           	
  4402  03D1                     l10877:	
  4403                           ;Display_2raw.c: 67: lubNumber = lubNumber /10;
  4404  03D1  300A               	movlw	low(0Ah)
  4405  03D2  00D1               	movwf	(?___awdiv)
  4406  03D3  3000               	movlw	high(0Ah)
  4407  03D4  00D2               	movwf	((?___awdiv))+1
  4408  03D5  0863               	movf	(SetDisplay_Voltage@lubNumber),w
  4409  03D6  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4410  03D7  01DD               	clrf	(??_SetDisplay_Voltage+0)+0+1
  4411  03D8  085C               	movf	0+(??_SetDisplay_Voltage+0)+0,w
  4412  03D9  00D3               	movwf	0+(?___awdiv)+02h
  4413  03DA  085D               	movf	1+(??_SetDisplay_Voltage+0)+0,w
  4414  03DB  00D4               	movwf	1+(?___awdiv)+02h
  4415  03DC  120A  118A  2548   	fcall	___awdiv
              120A  118A         
  4416  03E1  1283               	bcf	status, 5	;RP0=0, select bank0
  4417  03E2  1303               	bcf	status, 6	;RP1=0, select bank0
  4418  03E3  0851               	movf	(0+(?___awdiv)),w
  4419  03E4  00DE               	movwf	(??_SetDisplay_Voltage+2)+0
  4420  03E5  085E               	movf	(??_SetDisplay_Voltage+2)+0,w
  4421  03E6  00E3               	movwf	(SetDisplay_Voltage@lubNumber)
  4422                           	line	68
  4423                           	
  4424  03E7                     l10879:	
  4425                           ;Display_2raw.c: 68: lubSecondByte = lubNumber %10;
  4426  03E7  300A               	movlw	low(0Ah)
  4427  03E8  00D1               	movwf	(?___awmod)
  4428  03E9  3000               	movlw	high(0Ah)
  4429  03EA  00D2               	movwf	((?___awmod))+1
  4430  03EB  0863               	movf	(SetDisplay_Voltage@lubNumber),w
  4431  03EC  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4432  03ED  01DD               	clrf	(??_SetDisplay_Voltage+0)+0+1
  4433  03EE  085C               	movf	0+(??_SetDisplay_Voltage+0)+0,w
  4434  03EF  00D3               	movwf	0+(?___awmod)+02h
  4435  03F0  085D               	movf	1+(??_SetDisplay_Voltage+0)+0,w
  4436  03F1  00D4               	movwf	1+(?___awmod)+02h
  4437  03F2  120A  158A  2798   	fcall	___awmod
              120A  118A         
  4438  03F7  1283               	bcf	status, 5	;RP0=0, select bank0
  4439  03F8  1303               	bcf	status, 6	;RP1=0, select bank0
  4440  03F9  0851               	movf	(0+(?___awmod)),w
  4441  03FA  00DE               	movwf	(??_SetDisplay_Voltage+2)+0
  4442  03FB  085E               	movf	(??_SetDisplay_Voltage+2)+0,w
  4443  03FC  00DF               	movwf	(SetDisplay_Voltage@lubSecondByte)
  4444                           	line	70
  4445                           	
  4446  03FD                     l10881:	
  4447                           ;Display_2raw.c: 70: luwNumberFrac = uwVoltage & 0x07ff;
  4448  03FD  30FF               	movlw	low(07FFh)
  4449  03FE  055A               	andwf	(SetDisplay_Voltage@uwVoltage),w
  4450  03FF  00E1               	movwf	(SetDisplay_Voltage@luwNumberFrac)
  4451  0400  3007               	movlw	high(07FFh)
  4452  0401  055B               	andwf	(SetDisplay_Voltage@uwVoltage+1),w
  4453  0402  00E2               	movwf	1+(SetDisplay_Voltage@luwNumberFrac)
  4454                           	line	71
  4455                           	
  4456  0403                     l10883:	
  4457                           ;Display_2raw.c: 71: luwNumberFrac = luwNumberFrac * 10;
  4458  0403  0862               	movf	(SetDisplay_Voltage@luwNumberFrac+1),w
  4459  0404  01D2               	clrf	(?___wmul+1)
  4460  0405  07D2               	addwf	(?___wmul+1)
  4461  0406  0861               	movf	(SetDisplay_Voltage@luwNumberFrac),w
  4462  0407  01D1               	clrf	(?___wmul)
  4463  0408  07D1               	addwf	(?___wmul)
  4464                           
  4465  0409  300A               	movlw	low(0Ah)
  4466  040A  00D3               	movwf	0+(?___wmul)+02h
  4467  040B  3000               	movlw	high(0Ah)
  4468  040C  00D4               	movwf	(0+(?___wmul)+02h)+1
  4469  040D  120A  158A  24E9   	fcall	___wmul
              120A  118A         
  4470  0412  1283               	bcf	status, 5	;RP0=0, select bank0
  4471  0413  1303               	bcf	status, 6	;RP1=0, select bank0
  4472  0414  0852               	movf	(1+(?___wmul)),w
  4473  0415  01E2               	clrf	(SetDisplay_Voltage@luwNumberFrac+1)
  4474  0416  07E2               	addwf	(SetDisplay_Voltage@luwNumberFrac+1)
  4475  0417  0851               	movf	(0+(?___wmul)),w
  4476  0418  01E1               	clrf	(SetDisplay_Voltage@luwNumberFrac)
  4477  0419  07E1               	addwf	(SetDisplay_Voltage@luwNumberFrac)
  4478                           
  4479                           	line	72
  4480                           ;Display_2raw.c: 72: luwNumberFrac = luwNumberFrac >> 11;
  4481  041A  0862               	movf	(SetDisplay_Voltage@luwNumberFrac+1),w
  4482  041B  00DD               	movwf	(??_SetDisplay_Voltage+0)+0+1
  4483  041C  0861               	movf	(SetDisplay_Voltage@luwNumberFrac),w
  4484  041D  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4485  041E  300B               	movlw	0Bh
  4486  041F                     u4185:
  4487  041F  1003               	clrc
  4488  0420  0CDD               	rrf	(??_SetDisplay_Voltage+0)+1,f
  4489  0421  0CDC               	rrf	(??_SetDisplay_Voltage+0)+0,f
  4490  0422  3EFF               	addlw	-1
  4491  0423  1D03               	skipz
  4492  0424  2C1F               	goto	u4185
  4493  0425  085C               	movf	0+(??_SetDisplay_Voltage+0)+0,w
  4494  0426  00E1               	movwf	(SetDisplay_Voltage@luwNumberFrac)
  4495  0427  085D               	movf	1+(??_SetDisplay_Voltage+0)+0,w
  4496  0428  00E2               	movwf	(SetDisplay_Voltage@luwNumberFrac+1)
  4497                           	line	74
  4498                           	
  4499  0429                     l10885:	
  4500                           ;Display_2raw.c: 74: ubSecondByte = lubSecondByte;
  4501  0429  085F               	movf	(SetDisplay_Voltage@lubSecondByte),w
  4502  042A  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4503  042B  085C               	movf	(??_SetDisplay_Voltage+0)+0,w
  4504  042C  00C8               	movwf	(_ubSecondByte)
  4505                           	line	75
  4506                           	
  4507  042D                     l10887:	
  4508                           ;Display_2raw.c: 75: ubDisplay_buf[0] = ubSecondByte + 0x30;
  4509  042D  0848               	movf	(_ubSecondByte),w
  4510  042E  3E30               	addlw	030h
  4511  042F  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4512  0430  085C               	movf	(??_SetDisplay_Voltage+0)+0,w
  4513  0431  1683               	bsf	status, 5	;RP0=1, select bank1
  4514  0432  1303               	bcf	status, 6	;RP1=0, select bank1
  4515  0433  00A0               	movwf	(_ubDisplay_buf)^080h
  4516                           	line	76
  4517                           ;Display_2raw.c: 76: ubFirstByte = lubFirstByte;
  4518  0434  1283               	bcf	status, 5	;RP0=0, select bank0
  4519  0435  1303               	bcf	status, 6	;RP1=0, select bank0
  4520  0436  0860               	movf	(SetDisplay_Voltage@lubFirstByte),w
  4521  0437  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4522  0438  085C               	movf	(??_SetDisplay_Voltage+0)+0,w
  4523  0439  00C6               	movwf	(_ubFirstByte)
  4524                           	line	77
  4525                           	
  4526  043A                     l10889:	
  4527                           ;Display_2raw.c: 77: ubDisplay_buf[1] = ubFirstByte + 0x30;
  4528  043A  0846               	movf	(_ubFirstByte),w
  4529  043B  3E30               	addlw	030h
  4530  043C  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4531  043D  085C               	movf	(??_SetDisplay_Voltage+0)+0,w
  4532  043E  1683               	bsf	status, 5	;RP0=1, select bank1
  4533  043F  1303               	bcf	status, 6	;RP1=0, select bank1
  4534  0440  00A1               	movwf	0+(_ubDisplay_buf)^080h+01h
  4535                           	line	78
  4536                           	
  4537  0441                     l10891:	
  4538                           ;Display_2raw.c: 78: ubDisplay_buf[2] = 0x56;
  4539  0441  3056               	movlw	(056h)
  4540  0442  1283               	bcf	status, 5	;RP0=0, select bank0
  4541  0443  1303               	bcf	status, 6	;RP1=0, select bank0
  4542  0444  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4543  0445  085C               	movf	(??_SetDisplay_Voltage+0)+0,w
  4544  0446  1683               	bsf	status, 5	;RP0=1, select bank1
  4545  0447  1303               	bcf	status, 6	;RP1=0, select bank1
  4546  0448  00A2               	movwf	0+(_ubDisplay_buf)^080h+02h
  4547                           	line	79
  4548                           ;Display_2raw.c: 79: ubDisplay_buf[3] = ((T_UBYTE)luwNumberFrac) + 0x30;
  4549  0449  1283               	bcf	status, 5	;RP0=0, select bank0
  4550  044A  1303               	bcf	status, 6	;RP1=0, select bank0
  4551  044B  0861               	movf	(SetDisplay_Voltage@luwNumberFrac),w
  4552  044C  3E30               	addlw	030h
  4553  044D  00DC               	movwf	(??_SetDisplay_Voltage+0)+0
  4554  044E  085C               	movf	(??_SetDisplay_Voltage+0)+0,w
  4555  044F  1683               	bsf	status, 5	;RP0=1, select bank1
  4556  0450  1303               	bcf	status, 6	;RP1=0, select bank1
  4557  0451  00A3               	movwf	0+(_ubDisplay_buf)^080h+03h
  4558                           	line	81
  4559                           	
  4560  0452                     l7030:	
  4561  0452  0008               	return
  4562                           	opt stack 0
  4563                           GLOBAL	__end_of_SetDisplay_Voltage
  4564  0453                     	__end_of_SetDisplay_Voltage:
  4565 ;; =============== function _SetDisplay_Voltage ends ============
  4566                           
  4567                           	signat	_SetDisplay_Voltage,4216
  4568                           	global	_Divizor_U_Sense
  4569                           psect	text833,local,class=CODE,delta=2
  4570                           global __ptext833
  4571  0EA5                     __ptext833:
  4572                           
  4573 ;; *************** function _Divizor_U_Sense *****************
  4574 ;; Defined at:
  4575 ;;		line 6 in file "E:\my_projects\2013\power\software\power.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  luw_ADCV0       2   13[BANK0 ] unsigned short 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  lul_aux         4   21[BANK0 ] unsigned long 
  4580 ;;  luw_UoutSens    2   19[BANK0 ] unsigned short 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  2   13[BANK0 ] unsigned short 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0, pclath, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4590 ;;      Params:         0       2       0       0       0
  4591 ;;      Locals:         0       6       0       0       0
  4592 ;;      Temps:          0       4       0       0       0
  4593 ;;      Totals:         0      12       0       0       0
  4594 ;;Total ram usage:       12 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    3
  4597 ;; This function calls:
  4598 ;;		___lmul
  4599 ;; This function is called by:
  4600 ;;		_task_slow
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           psect	text833
  4604                           	file	"E:\my_projects\2013\power\software\power.c"
  4605                           	line	6
  4606                           	global	__size_of_Divizor_U_Sense
  4607  0050                     	__size_of_Divizor_U_Sense	equ	__end_of_Divizor_U_Sense-_Divizor_U_Sense
  4608                           	
  4609  0EA5                     _Divizor_U_Sense:	
  4610                           	opt	stack 3
  4611                           ; Regs used in _Divizor_U_Sense: [wreg+status,2+status,0+pclath+cstack]
  4612                           	line	7
  4613                           	
  4614  0EA5                     l10855:	
  4615                           ;power.c: 7: T_UWORD luw_UoutSense = 0;
  4616  0EA5  1283               	bcf	status, 5	;RP0=0, select bank0
  4617  0EA6  1303               	bcf	status, 6	;RP1=0, select bank0
  4618  0EA7  01E4               	clrf	(Divizor_U_Sense@luw_UoutSense)
  4619  0EA8  01E5               	clrf	(Divizor_U_Sense@luw_UoutSense+1)
  4620                           	line	8
  4621                           	
  4622  0EA9                     l10857:	
  4623                           ;power.c: 8: T_ULONG lul_aux = 0;
  4624  0EA9  3000               	movlw	0
  4625  0EAA  00E9               	movwf	(Divizor_U_Sense@lul_aux+3)
  4626  0EAB  3000               	movlw	0
  4627  0EAC  00E8               	movwf	(Divizor_U_Sense@lul_aux+2)
  4628  0EAD  3000               	movlw	0
  4629  0EAE  00E7               	movwf	(Divizor_U_Sense@lul_aux+1)
  4630  0EAF  3000               	movlw	0
  4631  0EB0  00E6               	movwf	(Divizor_U_Sense@lul_aux)
  4632                           
  4633                           	line	10
  4634                           	
  4635  0EB1                     l10859:	
  4636                           ;power.c: 10: lul_aux = (((T_ULONG)luw_ADCV0) * 91);
  4637  0EB1  085E               	movf	(Divizor_U_Sense@luw_ADCV0),w
  4638  0EB2  00D1               	movwf	(?___lmul)
  4639  0EB3  085F               	movf	(Divizor_U_Sense@luw_ADCV0+1),w
  4640  0EB4  00D2               	movwf	((?___lmul))+1
  4641  0EB5  01D3               	clrf	2+((?___lmul))
  4642  0EB6  01D4               	clrf	3+((?___lmul))
  4643  0EB7  3000               	movlw	0
  4644  0EB8  00D8               	movwf	3+(?___lmul)+04h
  4645  0EB9  3000               	movlw	0
  4646  0EBA  00D7               	movwf	2+(?___lmul)+04h
  4647  0EBB  3000               	movlw	0
  4648  0EBC  00D6               	movwf	1+(?___lmul)+04h
  4649  0EBD  305B               	movlw	05Bh
  4650  0EBE  00D5               	movwf	0+(?___lmul)+04h
  4651                           
  4652  0EBF  120A  158A  2609   	fcall	___lmul
              120A  158A         
  4653  0EC4  1283               	bcf	status, 5	;RP0=0, select bank0
  4654  0EC5  1303               	bcf	status, 6	;RP1=0, select bank0
  4655  0EC6  0854               	movf	(3+(?___lmul)),w
  4656  0EC7  00E9               	movwf	(Divizor_U_Sense@lul_aux+3)
  4657  0EC8  0853               	movf	(2+(?___lmul)),w
  4658  0EC9  00E8               	movwf	(Divizor_U_Sense@lul_aux+2)
  4659  0ECA  0852               	movf	(1+(?___lmul)),w
  4660  0ECB  00E7               	movwf	(Divizor_U_Sense@lul_aux+1)
  4661  0ECC  0851               	movf	(0+(?___lmul)),w
  4662  0ECD  00E6               	movwf	(Divizor_U_Sense@lul_aux)
  4663                           
  4664                           	line	11
  4665                           	
  4666  0ECE                     l10861:	
  4667                           ;power.c: 11: lul_aux = lul_aux>> 4 ;
  4668  0ECE  0866               	movf	(Divizor_U_Sense@lul_aux),w
  4669  0ECF  00E0               	movwf	(??_Divizor_U_Sense+0)+0
  4670  0ED0  0867               	movf	(Divizor_U_Sense@lul_aux+1),w
  4671  0ED1  00E1               	movwf	((??_Divizor_U_Sense+0)+0+1)
  4672  0ED2  0868               	movf	(Divizor_U_Sense@lul_aux+2),w
  4673  0ED3  00E2               	movwf	((??_Divizor_U_Sense+0)+0+2)
  4674  0ED4  0869               	movf	(Divizor_U_Sense@lul_aux+3),w
  4675  0ED5  00E3               	movwf	((??_Divizor_U_Sense+0)+0+3)
  4676  0ED6  3004               	movlw	04h
  4677  0ED7                     u4165:
  4678  0ED7  1003               	clrc
  4679  0ED8  0CE3               	rrf	(??_Divizor_U_Sense+0)+3,f
  4680  0ED9  0CE2               	rrf	(??_Divizor_U_Sense+0)+2,f
  4681  0EDA  0CE1               	rrf	(??_Divizor_U_Sense+0)+1,f
  4682  0EDB  0CE0               	rrf	(??_Divizor_U_Sense+0)+0,f
  4683  0EDC                     u4160:
  4684  0EDC  3EFF               	addlw	-1
  4685  0EDD  1D03               	skipz
  4686  0EDE  2ED7               	goto	u4165
  4687  0EDF  0863               	movf	3+(??_Divizor_U_Sense+0)+0,w
  4688  0EE0  00E9               	movwf	(Divizor_U_Sense@lul_aux+3)
  4689  0EE1  0862               	movf	2+(??_Divizor_U_Sense+0)+0,w
  4690  0EE2  00E8               	movwf	(Divizor_U_Sense@lul_aux+2)
  4691  0EE3  0861               	movf	1+(??_Divizor_U_Sense+0)+0,w
  4692  0EE4  00E7               	movwf	(Divizor_U_Sense@lul_aux+1)
  4693  0EE5  0860               	movf	0+(??_Divizor_U_Sense+0)+0,w
  4694  0EE6  00E6               	movwf	(Divizor_U_Sense@lul_aux)
  4695                           
  4696                           	line	12
  4697                           	
  4698  0EE7                     l10863:	
  4699                           ;power.c: 12: luw_UoutSense = (T_UWORD)lul_aux;
  4700  0EE7  0867               	movf	(Divizor_U_Sense@lul_aux+1),w
  4701  0EE8  01E5               	clrf	(Divizor_U_Sense@luw_UoutSense+1)
  4702  0EE9  07E5               	addwf	(Divizor_U_Sense@luw_UoutSense+1)
  4703  0EEA  0866               	movf	(Divizor_U_Sense@lul_aux),w
  4704  0EEB  01E4               	clrf	(Divizor_U_Sense@luw_UoutSense)
  4705  0EEC  07E4               	addwf	(Divizor_U_Sense@luw_UoutSense)
  4706                           
  4707                           	line	13
  4708                           	
  4709  0EED                     l10865:	
  4710                           ;power.c: 13: return luw_UoutSense;
  4711  0EED  0865               	movf	(Divizor_U_Sense@luw_UoutSense+1),w
  4712  0EEE  01DF               	clrf	(?_Divizor_U_Sense+1)
  4713  0EEF  07DF               	addwf	(?_Divizor_U_Sense+1)
  4714  0EF0  0864               	movf	(Divizor_U_Sense@luw_UoutSense),w
  4715  0EF1  01DE               	clrf	(?_Divizor_U_Sense)
  4716  0EF2  07DE               	addwf	(?_Divizor_U_Sense)
  4717                           
  4718  0EF3  2EF4               	goto	l6358
  4719                           	
  4720  0EF4                     l10867:	
  4721                           	line	14
  4722                           	
  4723  0EF4                     l6358:	
  4724  0EF4  0008               	return
  4725                           	opt stack 0
  4726                           GLOBAL	__end_of_Divizor_U_Sense
  4727  0EF5                     	__end_of_Divizor_U_Sense:
  4728 ;; =============== function _Divizor_U_Sense ends ============
  4729                           
  4730                           	signat	_Divizor_U_Sense,4218
  4731                           	global	_pwm_update
  4732                           psect	text834,local,class=CODE,delta=2
  4733                           global __ptext834
  4734  02E3                     __ptext834:
  4735                           
  4736 ;; *************** function _pwm_update *****************
  4737 ;; Defined at:
  4738 ;;		line 77 in file "E:\my_projects\2013\power\software\pwm.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  loc_channel     1    wreg     unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  loc_channel     1   17[BANK0 ] unsigned char 
  4743 ;;  luw_duty        2   18[BANK0 ] unsigned short 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;		None               void
  4746 ;; Registers used:
  4747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4753 ;;      Params:         0       0       0       0       0
  4754 ;;      Locals:         0       3       0       0       0
  4755 ;;      Temps:          0       4       0       0       0
  4756 ;;      Totals:         0       7       0       0       0
  4757 ;;Total ram usage:        7 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    3
  4760 ;; This function calls:
  4761 ;;		___lmul
  4762 ;; This function is called by:
  4763 ;;		_init
  4764 ;;		_task_slow
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           psect	text834
  4768                           	file	"E:\my_projects\2013\power\software\pwm.c"
  4769                           	line	77
  4770                           	global	__size_of_pwm_update
  4771  00C2                     	__size_of_pwm_update	equ	__end_of_pwm_update-_pwm_update
  4772                           	
  4773  02E3                     _pwm_update:	
  4774                           	opt	stack 3
  4775                           ; Regs used in _pwm_update: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4776                           ;pwm_update@loc_channel stored from wreg
  4777                           	line	80
  4778  02E3  1283               	bcf	status, 5	;RP0=0, select bank0
  4779  02E4  1303               	bcf	status, 6	;RP1=0, select bank0
  4780  02E5  00E2               	movwf	(pwm_update@loc_channel)
  4781                           	
  4782  02E6                     l10823:	
  4783                           ;pwm.c: 78: T_UWORD luw_duty;
  4784                           ;pwm.c: 80: if ((s_pwm.channel & 0x40)==0x40)
  4785  02E6  1F26               	btfss	0+(_s_pwm)+06h,(6)&7
  4786  02E7  2AE9               	goto	u4041
  4787  02E8  2AEA               	goto	u4040
  4788  02E9                     u4041:
  4789  02E9  2B00               	goto	l10827
  4790  02EA                     u4040:
  4791                           	line	82
  4792                           	
  4793  02EA                     l10825:	
  4794                           ;pwm.c: 82: PR2=(s_pwm.period>>4)-1;
  4795  02EA  3004               	movlw	(04h)
  4796  02EB  3E20               	addlw	_s_pwm&0ffh
  4797  02EC  0084               	movwf	fsr0
  4798  02ED  1383               	bcf	status, 7	;select IRP bank0
  4799  02EE  0800               	movf	indf,w
  4800  02EF  00DE               	movwf	(??_pwm_update+0)+0+0
  4801  02F0  0A84               	incf	fsr0,f
  4802  02F1  0800               	movf	indf,w
  4803  02F2  00DF               	movwf	(??_pwm_update+0)+0+1
  4804  02F3  3004               	movlw	04h
  4805  02F4                     u4055:
  4806  02F4  1003               	clrc
  4807  02F5  0CDF               	rrf	(??_pwm_update+0)+1,f
  4808  02F6  0CDE               	rrf	(??_pwm_update+0)+0,f
  4809  02F7  3EFF               	addlw	-1
  4810  02F8  1D03               	skipz
  4811  02F9  2AF4               	goto	u4055
  4812  02FA  085E               	movf	0+(??_pwm_update+0)+0,w
  4813  02FB  3EFF               	addlw	0FFh
  4814  02FC  1683               	bsf	status, 5	;RP0=1, select bank1
  4815  02FD  1303               	bcf	status, 6	;RP1=0, select bank1
  4816  02FE  0092               	movwf	(146)^080h	;volatile
  4817  02FF  2B00               	goto	l10827
  4818                           	
  4819  0300                     l3810:	
  4820                           	line	84
  4821                           	
  4822  0300                     l10827:	
  4823                           ;pwm.c: 84: if ((s_pwm.channel & 0x20)==0x20)
  4824  0300  1283               	bcf	status, 5	;RP0=0, select bank0
  4825  0301  1EA6               	btfss	0+(_s_pwm)+06h,(5)&7
  4826  0302  2B04               	goto	u4061
  4827  0303  2B05               	goto	u4060
  4828  0304                     u4061:
  4829  0304  2BA4               	goto	l3822
  4830  0305                     u4060:
  4831                           	line	87
  4832                           	
  4833  0305                     l10829:	
  4834                           ;pwm.c: 85: {
  4835                           ;pwm.c: 87: if ((loc_channel & 0x80)==0x80)
  4836  0305  1FE2               	btfss	(pwm_update@loc_channel),(7)&7
  4837  0306  2B08               	goto	u4071
  4838  0307  2B09               	goto	u4070
  4839  0308                     u4071:
  4840  0308  2B56               	goto	l10843
  4841  0309                     u4070:
  4842                           	line	89
  4843                           	
  4844  0309                     l10831:	
  4845                           ;pwm.c: 88: {
  4846                           ;pwm.c: 89: luw_duty=s_pwm.period;
  4847  0309  0825               	movf	1+(_s_pwm)+04h,w
  4848  030A  01E4               	clrf	(pwm_update@luw_duty+1)
  4849  030B  07E4               	addwf	(pwm_update@luw_duty+1)
  4850  030C  0824               	movf	0+(_s_pwm)+04h,w
  4851  030D  01E3               	clrf	(pwm_update@luw_duty)
  4852  030E  07E3               	addwf	(pwm_update@luw_duty)
  4853                           
  4854                           	line	90
  4855                           	
  4856  030F                     l10833:	
  4857                           ;pwm.c: 90: luw_duty=(((T_ULONG)luw_duty*s_pwm.duty_1))/1024;
  4858  030F  0863               	movf	(pwm_update@luw_duty),w
  4859  0310  00D1               	movwf	(?___lmul)
  4860  0311  0864               	movf	(pwm_update@luw_duty+1),w
  4861  0312  00D2               	movwf	((?___lmul))+1
  4862  0313  01D3               	clrf	2+((?___lmul))
  4863  0314  01D4               	clrf	3+((?___lmul))
  4864  0315  0820               	movf	(_s_pwm),w
  4865  0316  00D5               	movwf	0+(?___lmul)+04h
  4866  0317  0821               	movf	(_s_pwm+1),w
  4867  0318  00D6               	movwf	(0+(?___lmul)+04h)+1
  4868  0319  01D7               	clrf	2+(0+(?___lmul)+04h)
  4869  031A  01D8               	clrf	3+(0+(?___lmul)+04h)
  4870  031B  120A  158A  2609   	fcall	___lmul
              120A  118A         
  4871  0320  1283               	bcf	status, 5	;RP0=0, select bank0
  4872  0321  1303               	bcf	status, 6	;RP1=0, select bank0
  4873  0322  0851               	movf	(0+?___lmul),w
  4874  0323  00DE               	movwf	(??_pwm_update+0)+0
  4875  0324  0852               	movf	(1+?___lmul),w
  4876  0325  00DF               	movwf	((??_pwm_update+0)+0+1)
  4877  0326  0853               	movf	(2+?___lmul),w
  4878  0327  00E0               	movwf	((??_pwm_update+0)+0+2)
  4879  0328  0854               	movf	(3+?___lmul),w
  4880  0329  00E1               	movwf	((??_pwm_update+0)+0+3)
  4881  032A  300A               	movlw	0Ah
  4882  032B                     u4085:
  4883  032B  1003               	clrc
  4884  032C  0CE1               	rrf	(??_pwm_update+0)+3,f
  4885  032D  0CE0               	rrf	(??_pwm_update+0)+2,f
  4886  032E  0CDF               	rrf	(??_pwm_update+0)+1,f
  4887  032F  0CDE               	rrf	(??_pwm_update+0)+0,f
  4888  0330                     u4080:
  4889  0330  3EFF               	addlw	-1
  4890  0331  1D03               	skipz
  4891  0332  2B2B               	goto	u4085
  4892  0333  085F               	movf	1+(??_pwm_update+0)+0,w
  4893  0334  01E4               	clrf	(pwm_update@luw_duty+1)
  4894  0335  07E4               	addwf	(pwm_update@luw_duty+1)
  4895  0336  085E               	movf	0+(??_pwm_update+0)+0,w
  4896  0337  01E3               	clrf	(pwm_update@luw_duty)
  4897  0338  07E3               	addwf	(pwm_update@luw_duty)
  4898                           
  4899                           	line	91
  4900                           	
  4901  0339                     l10835:	
  4902                           ;pwm.c: 91: if(luw_duty&0x02 == 0x02) CCP1X =1;
  4903  0339  1C63               	btfss	(pwm_update@luw_duty),(0)&7
  4904  033A  2B3C               	goto	u4091
  4905  033B  2B3D               	goto	u4090
  4906  033C                     u4091:
  4907  033C  2B3F               	goto	l3813
  4908  033D                     u4090:
  4909                           	
  4910  033D                     l10837:	
  4911  033D  1697               	bsf	(189/8),(189)&7
  4912  033E  2B40               	goto	l3814
  4913                           	line	92
  4914                           	
  4915  033F                     l3813:	
  4916                           ;pwm.c: 92: else CCP1X =0;
  4917  033F  1297               	bcf	(189/8),(189)&7
  4918                           	
  4919  0340                     l3814:	
  4920                           	line	93
  4921                           ;pwm.c: 93: if(luw_duty&0x01 == 0x01) CCP1Y =1;
  4922  0340  1C63               	btfss	(pwm_update@luw_duty),(0)&7
  4923  0341  2B43               	goto	u4101
  4924  0342  2B44               	goto	u4100
  4925  0343                     u4101:
  4926  0343  2B46               	goto	l3815
  4927  0344                     u4100:
  4928                           	
  4929  0344                     l10839:	
  4930  0344  1617               	bsf	(188/8),(188)&7
  4931  0345  2B48               	goto	l10841
  4932                           	line	94
  4933                           	
  4934  0346                     l3815:	
  4935                           ;pwm.c: 94: else CCP1Y =0;
  4936  0346  1217               	bcf	(188/8),(188)&7
  4937  0347  2B48               	goto	l10841
  4938                           	
  4939  0348                     l3816:	
  4940                           	line	95
  4941                           	
  4942  0348                     l10841:	
  4943                           ;pwm.c: 95: CCPR1L=luw_duty>>2;
  4944  0348  0864               	movf	(pwm_update@luw_duty+1),w
  4945  0349  00DF               	movwf	(??_pwm_update+0)+0+1
  4946  034A  0863               	movf	(pwm_update@luw_duty),w
  4947  034B  00DE               	movwf	(??_pwm_update+0)+0
  4948  034C  3002               	movlw	02h
  4949  034D                     u4115:
  4950  034D  1003               	clrc
  4951  034E  0CDF               	rrf	(??_pwm_update+0)+1,f
  4952  034F  0CDE               	rrf	(??_pwm_update+0)+0,f
  4953  0350  3EFF               	addlw	-1
  4954  0351  1D03               	skipz
  4955  0352  2B4D               	goto	u4115
  4956  0353  085E               	movf	0+(??_pwm_update+0)+0,w
  4957  0354  0095               	movwf	(21)	;volatile
  4958                           	line	96
  4959                           ;pwm.c: 96: }
  4960  0355  2BA4               	goto	l3822
  4961                           	line	97
  4962                           	
  4963  0356                     l3812:	
  4964                           	line	99
  4965                           	
  4966  0356                     l10843:	
  4967                           ;pwm.c: 97: else
  4968                           ;pwm.c: 98: {
  4969                           ;pwm.c: 99: luw_duty=s_pwm.period;
  4970  0356  0825               	movf	1+(_s_pwm)+04h,w
  4971  0357  01E4               	clrf	(pwm_update@luw_duty+1)
  4972  0358  07E4               	addwf	(pwm_update@luw_duty+1)
  4973  0359  0824               	movf	0+(_s_pwm)+04h,w
  4974  035A  01E3               	clrf	(pwm_update@luw_duty)
  4975  035B  07E3               	addwf	(pwm_update@luw_duty)
  4976                           
  4977                           	line	100
  4978                           	
  4979  035C                     l10845:	
  4980                           ;pwm.c: 100: luw_duty=(((T_ULONG)luw_duty*s_pwm.duty_2))/1024;
  4981  035C  0863               	movf	(pwm_update@luw_duty),w
  4982  035D  00D1               	movwf	(?___lmul)
  4983  035E  0864               	movf	(pwm_update@luw_duty+1),w
  4984  035F  00D2               	movwf	((?___lmul))+1
  4985  0360  01D3               	clrf	2+((?___lmul))
  4986  0361  01D4               	clrf	3+((?___lmul))
  4987  0362  0822               	movf	0+(_s_pwm)+02h,w
  4988  0363  00D5               	movwf	0+(?___lmul)+04h
  4989  0364  0823               	movf	1+(_s_pwm)+02h,w
  4990  0365  00D6               	movwf	(0+(?___lmul)+04h)+1
  4991  0366  01D7               	clrf	2+(0+(?___lmul)+04h)
  4992  0367  01D8               	clrf	3+(0+(?___lmul)+04h)
  4993  0368  120A  158A  2609   	fcall	___lmul
              120A  118A         
  4994  036D  1283               	bcf	status, 5	;RP0=0, select bank0
  4995  036E  1303               	bcf	status, 6	;RP1=0, select bank0
  4996  036F  0851               	movf	(0+?___lmul),w
  4997  0370  00DE               	movwf	(??_pwm_update+0)+0
  4998  0371  0852               	movf	(1+?___lmul),w
  4999  0372  00DF               	movwf	((??_pwm_update+0)+0+1)
  5000  0373  0853               	movf	(2+?___lmul),w
  5001  0374  00E0               	movwf	((??_pwm_update+0)+0+2)
  5002  0375  0854               	movf	(3+?___lmul),w
  5003  0376  00E1               	movwf	((??_pwm_update+0)+0+3)
  5004  0377  300A               	movlw	0Ah
  5005  0378                     u4125:
  5006  0378  1003               	clrc
  5007  0379  0CE1               	rrf	(??_pwm_update+0)+3,f
  5008  037A  0CE0               	rrf	(??_pwm_update+0)+2,f
  5009  037B  0CDF               	rrf	(??_pwm_update+0)+1,f
  5010  037C  0CDE               	rrf	(??_pwm_update+0)+0,f
  5011  037D                     u4120:
  5012  037D  3EFF               	addlw	-1
  5013  037E  1D03               	skipz
  5014  037F  2B78               	goto	u4125
  5015  0380  085F               	movf	1+(??_pwm_update+0)+0,w
  5016  0381  01E4               	clrf	(pwm_update@luw_duty+1)
  5017  0382  07E4               	addwf	(pwm_update@luw_duty+1)
  5018  0383  085E               	movf	0+(??_pwm_update+0)+0,w
  5019  0384  01E3               	clrf	(pwm_update@luw_duty)
  5020  0385  07E3               	addwf	(pwm_update@luw_duty)
  5021                           
  5022                           	line	101
  5023                           	
  5024  0386                     l10847:	
  5025                           ;pwm.c: 101: if(luw_duty&0x02 == 0x02) CCP2X =1;
  5026  0386  1C63               	btfss	(pwm_update@luw_duty),(0)&7
  5027  0387  2B89               	goto	u4131
  5028  0388  2B8A               	goto	u4130
  5029  0389                     u4131:
  5030  0389  2B8C               	goto	l3818
  5031  038A                     u4130:
  5032                           	
  5033  038A                     l10849:	
  5034  038A  169D               	bsf	(237/8),(237)&7
  5035  038B  2B8D               	goto	l3819
  5036                           	line	102
  5037                           	
  5038  038C                     l3818:	
  5039                           ;pwm.c: 102: else CCP2X =0;
  5040  038C  129D               	bcf	(237/8),(237)&7
  5041                           	
  5042  038D                     l3819:	
  5043                           	line	103
  5044                           ;pwm.c: 103: if(luw_duty&0x01 == 0x01) CCP2Y =1;
  5045  038D  1C63               	btfss	(pwm_update@luw_duty),(0)&7
  5046  038E  2B90               	goto	u4141
  5047  038F  2B91               	goto	u4140
  5048  0390                     u4141:
  5049  0390  2B93               	goto	l3820
  5050  0391                     u4140:
  5051                           	
  5052  0391                     l10851:	
  5053  0391  161D               	bsf	(236/8),(236)&7
  5054  0392  2B95               	goto	l10853
  5055                           	line	104
  5056                           	
  5057  0393                     l3820:	
  5058                           ;pwm.c: 104: else CCP2Y =0;
  5059  0393  121D               	bcf	(236/8),(236)&7
  5060  0394  2B95               	goto	l10853
  5061                           	
  5062  0395                     l3821:	
  5063                           	line	105
  5064                           	
  5065  0395                     l10853:	
  5066                           ;pwm.c: 105: CCPR2L=luw_duty>>2;
  5067  0395  0864               	movf	(pwm_update@luw_duty+1),w
  5068  0396  00DF               	movwf	(??_pwm_update+0)+0+1
  5069  0397  0863               	movf	(pwm_update@luw_duty),w
  5070  0398  00DE               	movwf	(??_pwm_update+0)+0
  5071  0399  3002               	movlw	02h
  5072  039A                     u4155:
  5073  039A  1003               	clrc
  5074  039B  0CDF               	rrf	(??_pwm_update+0)+1,f
  5075  039C  0CDE               	rrf	(??_pwm_update+0)+0,f
  5076  039D  3EFF               	addlw	-1
  5077  039E  1D03               	skipz
  5078  039F  2B9A               	goto	u4155
  5079  03A0  085E               	movf	0+(??_pwm_update+0)+0,w
  5080  03A1  009B               	movwf	(27)	;volatile
  5081  03A2  2BA4               	goto	l3822
  5082                           	line	106
  5083                           	
  5084  03A3                     l3817:	
  5085  03A3  2BA4               	goto	l3822
  5086                           	line	107
  5087                           	
  5088  03A4                     l3811:	
  5089                           	line	108
  5090                           	
  5091  03A4                     l3822:	
  5092  03A4  0008               	return
  5093                           	opt stack 0
  5094                           GLOBAL	__end_of_pwm_update
  5095  03A5                     	__end_of_pwm_update:
  5096 ;; =============== function _pwm_update ends ============
  5097                           
  5098                           	signat	_pwm_update,4216
  5099                           	global	_Convert_to_Voltage
  5100                           psect	text835,local,class=CODE,delta=2
  5101                           global __ptext835
  5102  0E55                     __ptext835:
  5103                           
  5104 ;; *************** function _Convert_to_Voltage *****************
  5105 ;; Defined at:
  5106 ;;		line 14 in file "E:\my_projects\2013\power\software\signal_proc.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  uw_raw_value    2   13[BANK0 ] unsigned short 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  lul_result      4   21[BANK0 ] unsigned long 
  5111 ;;  luw_result      2   19[BANK0 ] unsigned short 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  2   13[BANK0 ] unsigned short 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0, pclath, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5121 ;;      Params:         0       2       0       0       0
  5122 ;;      Locals:         0       6       0       0       0
  5123 ;;      Temps:          0       4       0       0       0
  5124 ;;      Totals:         0      12       0       0       0
  5125 ;;Total ram usage:       12 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    3
  5128 ;; This function calls:
  5129 ;;		___lmul
  5130 ;; This function is called by:
  5131 ;;		_Read_Buton_state
  5132 ;;		_task_slow
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           psect	text835
  5136                           	file	"E:\my_projects\2013\power\software\signal_proc.c"
  5137                           	line	14
  5138                           	global	__size_of_Convert_to_Voltage
  5139  0050                     	__size_of_Convert_to_Voltage	equ	__end_of_Convert_to_Voltage-_Convert_to_Voltage
  5140                           	
  5141  0E55                     _Convert_to_Voltage:	
  5142                           	opt	stack 3
  5143                           ; Regs used in _Convert_to_Voltage: [wreg+status,2+status,0+pclath+cstack]
  5144                           	line	15
  5145                           	
  5146  0E55                     l10809:	
  5147                           ;signal_proc.c: 15: T_UWORD luw_result = 0;
  5148  0E55  1283               	bcf	status, 5	;RP0=0, select bank0
  5149  0E56  1303               	bcf	status, 6	;RP1=0, select bank0
  5150  0E57  01E4               	clrf	(Convert_to_Voltage@luw_result)
  5151  0E58  01E5               	clrf	(Convert_to_Voltage@luw_result+1)
  5152                           	line	16
  5153                           	
  5154  0E59                     l10811:	
  5155                           ;signal_proc.c: 16: T_ULONG lul_result = 0;
  5156  0E59  3000               	movlw	0
  5157  0E5A  00E9               	movwf	(Convert_to_Voltage@lul_result+3)
  5158  0E5B  3000               	movlw	0
  5159  0E5C  00E8               	movwf	(Convert_to_Voltage@lul_result+2)
  5160  0E5D  3000               	movlw	0
  5161  0E5E  00E7               	movwf	(Convert_to_Voltage@lul_result+1)
  5162  0E5F  3000               	movlw	0
  5163  0E60  00E6               	movwf	(Convert_to_Voltage@lul_result)
  5164                           
  5165                           	line	17
  5166                           	
  5167  0E61                     l10813:	
  5168                           ;signal_proc.c: 17: lul_result = uw_raw_value * (T_ULONG)((double)(5) / 0.00048828125);
  5169  0E61  085E               	movf	(Convert_to_Voltage@uw_raw_value),w
  5170  0E62  00D1               	movwf	(?___lmul)
  5171  0E63  085F               	movf	(Convert_to_Voltage@uw_raw_value+1),w
  5172  0E64  00D2               	movwf	((?___lmul))+1
  5173  0E65  01D3               	clrf	2+((?___lmul))
  5174  0E66  01D4               	clrf	3+((?___lmul))
  5175  0E67  3000               	movlw	0
  5176  0E68  00D8               	movwf	3+(?___lmul)+04h
  5177  0E69  3000               	movlw	0
  5178  0E6A  00D7               	movwf	2+(?___lmul)+04h
  5179  0E6B  3028               	movlw	028h
  5180  0E6C  00D6               	movwf	1+(?___lmul)+04h
  5181  0E6D  3000               	movlw	0
  5182  0E6E  00D5               	movwf	0+(?___lmul)+04h
  5183                           
  5184  0E6F  120A  158A  2609   	fcall	___lmul
              120A  158A         
  5185  0E74  1283               	bcf	status, 5	;RP0=0, select bank0
  5186  0E75  1303               	bcf	status, 6	;RP1=0, select bank0
  5187  0E76  0854               	movf	(3+(?___lmul)),w
  5188  0E77  00E9               	movwf	(Convert_to_Voltage@lul_result+3)
  5189  0E78  0853               	movf	(2+(?___lmul)),w
  5190  0E79  00E8               	movwf	(Convert_to_Voltage@lul_result+2)
  5191  0E7A  0852               	movf	(1+(?___lmul)),w
  5192  0E7B  00E7               	movwf	(Convert_to_Voltage@lul_result+1)
  5193  0E7C  0851               	movf	(0+(?___lmul)),w
  5194  0E7D  00E6               	movwf	(Convert_to_Voltage@lul_result)
  5195                           
  5196                           	line	18
  5197                           	
  5198  0E7E                     l10815:	
  5199                           ;signal_proc.c: 18: lul_result = lul_result >> ((10));
  5200  0E7E  0866               	movf	(Convert_to_Voltage@lul_result),w
  5201  0E7F  00E0               	movwf	(??_Convert_to_Voltage+0)+0
  5202  0E80  0867               	movf	(Convert_to_Voltage@lul_result+1),w
  5203  0E81  00E1               	movwf	((??_Convert_to_Voltage+0)+0+1)
  5204  0E82  0868               	movf	(Convert_to_Voltage@lul_result+2),w
  5205  0E83  00E2               	movwf	((??_Convert_to_Voltage+0)+0+2)
  5206  0E84  0869               	movf	(Convert_to_Voltage@lul_result+3),w
  5207  0E85  00E3               	movwf	((??_Convert_to_Voltage+0)+0+3)
  5208  0E86  300A               	movlw	0Ah
  5209  0E87                     u4035:
  5210  0E87  1003               	clrc
  5211  0E88  0CE3               	rrf	(??_Convert_to_Voltage+0)+3,f
  5212  0E89  0CE2               	rrf	(??_Convert_to_Voltage+0)+2,f
  5213  0E8A  0CE1               	rrf	(??_Convert_to_Voltage+0)+1,f
  5214  0E8B  0CE0               	rrf	(??_Convert_to_Voltage+0)+0,f
  5215  0E8C                     u4030:
  5216  0E8C  3EFF               	addlw	-1
  5217  0E8D  1D03               	skipz
  5218  0E8E  2E87               	goto	u4035
  5219  0E8F  0863               	movf	3+(??_Convert_to_Voltage+0)+0,w
  5220  0E90  00E9               	movwf	(Convert_to_Voltage@lul_result+3)
  5221  0E91  0862               	movf	2+(??_Convert_to_Voltage+0)+0,w
  5222  0E92  00E8               	movwf	(Convert_to_Voltage@lul_result+2)
  5223  0E93  0861               	movf	1+(??_Convert_to_Voltage+0)+0,w
  5224  0E94  00E7               	movwf	(Convert_to_Voltage@lul_result+1)
  5225  0E95  0860               	movf	0+(??_Convert_to_Voltage+0)+0,w
  5226  0E96  00E6               	movwf	(Convert_to_Voltage@lul_result)
  5227                           
  5228                           	line	19
  5229                           	
  5230  0E97                     l10817:	
  5231                           ;signal_proc.c: 19: luw_result = (T_UWORD)lul_result;
  5232  0E97  0867               	movf	(Convert_to_Voltage@lul_result+1),w
  5233  0E98  01E5               	clrf	(Convert_to_Voltage@luw_result+1)
  5234  0E99  07E5               	addwf	(Convert_to_Voltage@luw_result+1)
  5235  0E9A  0866               	movf	(Convert_to_Voltage@lul_result),w
  5236  0E9B  01E4               	clrf	(Convert_to_Voltage@luw_result)
  5237  0E9C  07E4               	addwf	(Convert_to_Voltage@luw_result)
  5238                           
  5239                           	line	20
  5240                           	
  5241  0E9D                     l10819:	
  5242                           ;signal_proc.c: 20: return luw_result;
  5243  0E9D  0865               	movf	(Convert_to_Voltage@luw_result+1),w
  5244  0E9E  01DF               	clrf	(?_Convert_to_Voltage+1)
  5245  0E9F  07DF               	addwf	(?_Convert_to_Voltage+1)
  5246  0EA0  0864               	movf	(Convert_to_Voltage@luw_result),w
  5247  0EA1  01DE               	clrf	(?_Convert_to_Voltage)
  5248  0EA2  07DE               	addwf	(?_Convert_to_Voltage)
  5249                           
  5250  0EA3  2EA4               	goto	l4440
  5251                           	
  5252  0EA4                     l10821:	
  5253                           	line	21
  5254                           	
  5255  0EA4                     l4440:	
  5256  0EA4  0008               	return
  5257                           	opt stack 0
  5258                           GLOBAL	__end_of_Convert_to_Voltage
  5259  0EA5                     	__end_of_Convert_to_Voltage:
  5260 ;; =============== function _Convert_to_Voltage ends ============
  5261                           
  5262                           	signat	_Convert_to_Voltage,4218
  5263                           	global	___awmod
  5264                           psect	text836,local,class=CODE,delta=2
  5265                           global __ptext836
  5266  0F98                     __ptext836:
  5267                           
  5268 ;; *************** function ___awmod *****************
  5269 ;; Defined at:
  5270 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  divisor         2    0[BANK0 ] int 
  5273 ;;  dividend        2    2[BANK0 ] int 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  sign            1    6[BANK0 ] unsigned char 
  5276 ;;  counter         1    5[BANK0 ] unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  2    0[BANK0 ] int 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5286 ;;      Params:         0       4       0       0       0
  5287 ;;      Locals:         0       2       0       0       0
  5288 ;;      Temps:          0       1       0       0       0
  5289 ;;      Totals:         0       7       0       0       0
  5290 ;;Total ram usage:        7 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    2
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_SetDisplay_Voltage
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           psect	text836
  5300                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  5301                           	line	5
  5302                           	global	__size_of___awmod
  5303  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  5304                           	
  5305  0F98                     ___awmod:	
  5306                           	opt	stack 3
  5307                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5308                           	line	8
  5309                           	
  5310  0F98                     l10775:	
  5311  0F98  1283               	bcf	status, 5	;RP0=0, select bank0
  5312  0F99  1303               	bcf	status, 6	;RP1=0, select bank0
  5313  0F9A  01D7               	clrf	(___awmod@sign)
  5314                           	line	9
  5315  0F9B  1FD4               	btfss	(___awmod@dividend+1),7
  5316  0F9C  2F9E               	goto	u3941
  5317  0F9D  2F9F               	goto	u3940
  5318  0F9E                     u3941:
  5319  0F9E  2FA8               	goto	l10779
  5320  0F9F                     u3940:
  5321                           	line	10
  5322                           	
  5323  0F9F                     l10777:	
  5324  0F9F  09D3               	comf	(___awmod@dividend),f
  5325  0FA0  09D4               	comf	(___awmod@dividend+1),f
  5326  0FA1  0AD3               	incf	(___awmod@dividend),f
  5327  0FA2  1903               	skipnz
  5328  0FA3  0AD4               	incf	(___awmod@dividend+1),f
  5329                           	line	11
  5330  0FA4  01D7               	clrf	(___awmod@sign)
  5331  0FA5  1403               	bsf	status,0
  5332  0FA6  0DD7               	rlf	(___awmod@sign),f
  5333  0FA7  2FA8               	goto	l10779
  5334                           	line	12
  5335                           	
  5336  0FA8                     l8543:	
  5337                           	line	13
  5338                           	
  5339  0FA8                     l10779:	
  5340  0FA8  1FD2               	btfss	(___awmod@divisor+1),7
  5341  0FA9  2FAB               	goto	u3951
  5342  0FAA  2FAC               	goto	u3950
  5343  0FAB                     u3951:
  5344  0FAB  2FB2               	goto	l10783
  5345  0FAC                     u3950:
  5346                           	line	14
  5347                           	
  5348  0FAC                     l10781:	
  5349  0FAC  09D1               	comf	(___awmod@divisor),f
  5350  0FAD  09D2               	comf	(___awmod@divisor+1),f
  5351  0FAE  0AD1               	incf	(___awmod@divisor),f
  5352  0FAF  1903               	skipnz
  5353  0FB0  0AD2               	incf	(___awmod@divisor+1),f
  5354  0FB1  2FB2               	goto	l10783
  5355                           	
  5356  0FB2                     l8544:	
  5357                           	line	15
  5358                           	
  5359  0FB2                     l10783:	
  5360  0FB2  0852               	movf	(___awmod@divisor+1),w
  5361  0FB3  0451               	iorwf	(___awmod@divisor),w
  5362  0FB4  1903               	skipnz
  5363  0FB5  2FB7               	goto	u3961
  5364  0FB6  2FB8               	goto	u3960
  5365  0FB7                     u3961:
  5366  0FB7  2FEE               	goto	l10801
  5367  0FB8                     u3960:
  5368                           	line	16
  5369                           	
  5370  0FB8                     l10785:	
  5371  0FB8  01D6               	clrf	(___awmod@counter)
  5372  0FB9  1403               	bsf	status,0
  5373  0FBA  0DD6               	rlf	(___awmod@counter),f
  5374                           	line	17
  5375  0FBB  2FC8               	goto	l10791
  5376                           	
  5377  0FBC                     l8547:	
  5378                           	line	18
  5379                           	
  5380  0FBC                     l10787:	
  5381  0FBC  3001               	movlw	01h
  5382                           	
  5383  0FBD                     u3975:
  5384  0FBD  1003               	clrc
  5385  0FBE  0DD1               	rlf	(___awmod@divisor),f
  5386  0FBF  0DD2               	rlf	(___awmod@divisor+1),f
  5387  0FC0  3EFF               	addlw	-1
  5388  0FC1  1D03               	skipz
  5389  0FC2  2FBD               	goto	u3975
  5390                           	line	19
  5391                           	
  5392  0FC3                     l10789:	
  5393  0FC3  3001               	movlw	(01h)
  5394  0FC4  00D5               	movwf	(??___awmod+0)+0
  5395  0FC5  0855               	movf	(??___awmod+0)+0,w
  5396  0FC6  07D6               	addwf	(___awmod@counter),f
  5397  0FC7  2FC8               	goto	l10791
  5398                           	line	20
  5399                           	
  5400  0FC8                     l8546:	
  5401                           	line	17
  5402                           	
  5403  0FC8                     l10791:	
  5404  0FC8  1FD2               	btfss	(___awmod@divisor+1),(15)&7
  5405  0FC9  2FCB               	goto	u3981
  5406  0FCA  2FCC               	goto	u3980
  5407  0FCB                     u3981:
  5408  0FCB  2FBC               	goto	l10787
  5409  0FCC                     u3980:
  5410  0FCC  2FCE               	goto	l10793
  5411                           	
  5412  0FCD                     l8548:	
  5413  0FCD  2FCE               	goto	l10793
  5414                           	line	21
  5415                           	
  5416  0FCE                     l8549:	
  5417                           	line	22
  5418                           	
  5419  0FCE                     l10793:	
  5420  0FCE  0852               	movf	(___awmod@divisor+1),w
  5421  0FCF  0254               	subwf	(___awmod@dividend+1),w
  5422  0FD0  1D03               	skipz
  5423  0FD1  2FD4               	goto	u3995
  5424  0FD2  0851               	movf	(___awmod@divisor),w
  5425  0FD3  0253               	subwf	(___awmod@dividend),w
  5426  0FD4                     u3995:
  5427  0FD4  1C03               	skipc
  5428  0FD5  2FD7               	goto	u3991
  5429  0FD6  2FD8               	goto	u3990
  5430  0FD7                     u3991:
  5431  0FD7  2FDF               	goto	l10797
  5432  0FD8                     u3990:
  5433                           	line	23
  5434                           	
  5435  0FD8                     l10795:	
  5436  0FD8  0851               	movf	(___awmod@divisor),w
  5437  0FD9  02D3               	subwf	(___awmod@dividend),f
  5438  0FDA  0852               	movf	(___awmod@divisor+1),w
  5439  0FDB  1C03               	skipc
  5440  0FDC  03D4               	decf	(___awmod@dividend+1),f
  5441  0FDD  02D4               	subwf	(___awmod@dividend+1),f
  5442  0FDE  2FDF               	goto	l10797
  5443                           	
  5444  0FDF                     l8550:	
  5445                           	line	24
  5446                           	
  5447  0FDF                     l10797:	
  5448  0FDF  3001               	movlw	01h
  5449                           	
  5450  0FE0                     u4005:
  5451  0FE0  1003               	clrc
  5452  0FE1  0CD2               	rrf	(___awmod@divisor+1),f
  5453  0FE2  0CD1               	rrf	(___awmod@divisor),f
  5454  0FE3  3EFF               	addlw	-1
  5455  0FE4  1D03               	skipz
  5456  0FE5  2FE0               	goto	u4005
  5457                           	line	25
  5458                           	
  5459  0FE6                     l10799:	
  5460  0FE6  3001               	movlw	low(01h)
  5461  0FE7  02D6               	subwf	(___awmod@counter),f
  5462  0FE8  1D03               	btfss	status,2
  5463  0FE9  2FEB               	goto	u4011
  5464  0FEA  2FEC               	goto	u4010
  5465  0FEB                     u4011:
  5466  0FEB  2FCE               	goto	l10793
  5467  0FEC                     u4010:
  5468  0FEC  2FEE               	goto	l10801
  5469                           	
  5470  0FED                     l8551:	
  5471  0FED  2FEE               	goto	l10801
  5472                           	line	26
  5473                           	
  5474  0FEE                     l8545:	
  5475                           	line	27
  5476                           	
  5477  0FEE                     l10801:	
  5478  0FEE  0857               	movf	(___awmod@sign),w
  5479  0FEF  1D03               	skipz
  5480  0FF0  2FF2               	goto	u4020
  5481  0FF1  2FF8               	goto	l10805
  5482  0FF2                     u4020:
  5483                           	line	28
  5484                           	
  5485  0FF2                     l10803:	
  5486  0FF2  09D3               	comf	(___awmod@dividend),f
  5487  0FF3  09D4               	comf	(___awmod@dividend+1),f
  5488  0FF4  0AD3               	incf	(___awmod@dividend),f
  5489  0FF5  1903               	skipnz
  5490  0FF6  0AD4               	incf	(___awmod@dividend+1),f
  5491  0FF7  2FF8               	goto	l10805
  5492                           	
  5493  0FF8                     l8552:	
  5494                           	line	29
  5495                           	
  5496  0FF8                     l10805:	
  5497  0FF8  0854               	movf	(___awmod@dividend+1),w
  5498  0FF9  01D2               	clrf	(?___awmod+1)
  5499  0FFA  07D2               	addwf	(?___awmod+1)
  5500  0FFB  0853               	movf	(___awmod@dividend),w
  5501  0FFC  01D1               	clrf	(?___awmod)
  5502  0FFD  07D1               	addwf	(?___awmod)
  5503                           
  5504  0FFE  2FFF               	goto	l8553
  5505                           	
  5506  0FFF                     l10807:	
  5507                           	line	30
  5508                           	
  5509  0FFF                     l8553:	
  5510  0FFF  0008               	return
  5511                           	opt stack 0
  5512                           GLOBAL	__end_of___awmod
  5513  1000                     	__end_of___awmod:
  5514 ;; =============== function ___awmod ends ============
  5515                           
  5516                           	signat	___awmod,8314
  5517                           	global	___lldiv
  5518                           psect	text837,local,class=CODE,delta=2
  5519                           global __ptext837
  5520  0785                     __ptext837:
  5521                           
  5522 ;; *************** function ___lldiv *****************
  5523 ;; Defined at:
  5524 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  divisor         4    0[BANK0 ] unsigned long 
  5527 ;;  dividend        4    4[BANK0 ] unsigned long 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  quotient        4    9[BANK0 ] unsigned long 
  5530 ;;  counter         1   13[BANK0 ] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  4    0[BANK0 ] unsigned long 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5540 ;;      Params:         0       8       0       0       0
  5541 ;;      Locals:         0       5       0       0       0
  5542 ;;      Temps:          0       1       0       0       0
  5543 ;;      Totals:         0      14       0       0       0
  5544 ;;Total ram usage:       14 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    2
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_Rawvalue_to_Current
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           psect	text837
  5554                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  5555                           	line	5
  5556                           	global	__size_of___lldiv
  5557  0070                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  5558                           	
  5559  0785                     ___lldiv:	
  5560                           	opt	stack 3
  5561                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5562                           	line	9
  5563                           	
  5564  0785                     l10751:	
  5565  0785  3000               	movlw	0
  5566  0786  1283               	bcf	status, 5	;RP0=0, select bank0
  5567  0787  1303               	bcf	status, 6	;RP1=0, select bank0
  5568  0788  00DD               	movwf	(___lldiv@quotient+3)
  5569  0789  3000               	movlw	0
  5570  078A  00DC               	movwf	(___lldiv@quotient+2)
  5571  078B  3000               	movlw	0
  5572  078C  00DB               	movwf	(___lldiv@quotient+1)
  5573  078D  3000               	movlw	0
  5574  078E  00DA               	movwf	(___lldiv@quotient)
  5575                           
  5576                           	line	10
  5577  078F  0854               	movf	(___lldiv@divisor+3),w
  5578  0790  0453               	iorwf	(___lldiv@divisor+2),w
  5579  0791  0452               	iorwf	(___lldiv@divisor+1),w
  5580  0792  0451               	iorwf	(___lldiv@divisor),w
  5581  0793  1903               	skipnz
  5582  0794  2F96               	goto	u3871
  5583  0795  2F97               	goto	u3870
  5584  0796                     u3871:
  5585  0796  2FEB               	goto	l10771
  5586  0797                     u3870:
  5587                           	line	11
  5588                           	
  5589  0797                     l10753:	
  5590  0797  01DE               	clrf	(___lldiv@counter)
  5591  0798  1403               	bsf	status,0
  5592  0799  0DDE               	rlf	(___lldiv@counter),f
  5593                           	line	12
  5594  079A  2FA9               	goto	l10757
  5595                           	
  5596  079B                     l8509:	
  5597                           	line	13
  5598                           	
  5599  079B                     l10755:	
  5600  079B  3001               	movlw	01h
  5601  079C  00D9               	movwf	(??___lldiv+0)+0
  5602  079D                     u3885:
  5603  079D  1003               	clrc
  5604  079E  0DD1               	rlf	(___lldiv@divisor),f
  5605  079F  0DD2               	rlf	(___lldiv@divisor+1),f
  5606  07A0  0DD3               	rlf	(___lldiv@divisor+2),f
  5607  07A1  0DD4               	rlf	(___lldiv@divisor+3),f
  5608  07A2  0BD9               	decfsz	(??___lldiv+0)+0
  5609  07A3  2F9D               	goto	u3885
  5610                           	line	14
  5611  07A4  3001               	movlw	(01h)
  5612  07A5  00D9               	movwf	(??___lldiv+0)+0
  5613  07A6  0859               	movf	(??___lldiv+0)+0,w
  5614  07A7  07DE               	addwf	(___lldiv@counter),f
  5615  07A8  2FA9               	goto	l10757
  5616                           	line	15
  5617                           	
  5618  07A9                     l8508:	
  5619                           	line	12
  5620                           	
  5621  07A9                     l10757:	
  5622  07A9  1FD4               	btfss	(___lldiv@divisor+3),(31)&7
  5623  07AA  2FAC               	goto	u3891
  5624  07AB  2FAD               	goto	u3890
  5625  07AC                     u3891:
  5626  07AC  2F9B               	goto	l10755
  5627  07AD                     u3890:
  5628  07AD  2FAF               	goto	l10759
  5629                           	
  5630  07AE                     l8510:	
  5631  07AE  2FAF               	goto	l10759
  5632                           	line	16
  5633                           	
  5634  07AF                     l8511:	
  5635                           	line	17
  5636                           	
  5637  07AF                     l10759:	
  5638  07AF  3001               	movlw	01h
  5639  07B0  00D9               	movwf	(??___lldiv+0)+0
  5640  07B1                     u3905:
  5641  07B1  1003               	clrc
  5642  07B2  0DDA               	rlf	(___lldiv@quotient),f
  5643  07B3  0DDB               	rlf	(___lldiv@quotient+1),f
  5644  07B4  0DDC               	rlf	(___lldiv@quotient+2),f
  5645  07B5  0DDD               	rlf	(___lldiv@quotient+3),f
  5646  07B6  0BD9               	decfsz	(??___lldiv+0)+0
  5647  07B7  2FB1               	goto	u3905
  5648                           	line	18
  5649                           	
  5650  07B8                     l10761:	
  5651  07B8  0854               	movf	(___lldiv@divisor+3),w
  5652  07B9  0258               	subwf	(___lldiv@dividend+3),w
  5653  07BA  1D03               	skipz
  5654  07BB  2FC6               	goto	u3915
  5655  07BC  0853               	movf	(___lldiv@divisor+2),w
  5656  07BD  0257               	subwf	(___lldiv@dividend+2),w
  5657  07BE  1D03               	skipz
  5658  07BF  2FC6               	goto	u3915
  5659  07C0  0852               	movf	(___lldiv@divisor+1),w
  5660  07C1  0256               	subwf	(___lldiv@dividend+1),w
  5661  07C2  1D03               	skipz
  5662  07C3  2FC6               	goto	u3915
  5663  07C4  0851               	movf	(___lldiv@divisor),w
  5664  07C5  0255               	subwf	(___lldiv@dividend),w
  5665  07C6                     u3915:
  5666  07C6  1C03               	skipc
  5667  07C7  2FC9               	goto	u3911
  5668  07C8  2FCA               	goto	u3910
  5669  07C9                     u3911:
  5670  07C9  2FDA               	goto	l10767
  5671  07CA                     u3910:
  5672                           	line	19
  5673                           	
  5674  07CA                     l10763:	
  5675  07CA  0851               	movf	(___lldiv@divisor),w
  5676  07CB  02D5               	subwf	(___lldiv@dividend),f
  5677  07CC  0852               	movf	(___lldiv@divisor+1),w
  5678  07CD  1C03               	skipc
  5679  07CE  0F52               	incfsz	(___lldiv@divisor+1),w
  5680  07CF  02D6               	subwf	(___lldiv@dividend+1),f
  5681  07D0  0853               	movf	(___lldiv@divisor+2),w
  5682  07D1  1C03               	skipc
  5683  07D2  0F53               	incfsz	(___lldiv@divisor+2),w
  5684  07D3  02D7               	subwf	(___lldiv@dividend+2),f
  5685  07D4  0854               	movf	(___lldiv@divisor+3),w
  5686  07D5  1C03               	skipc
  5687  07D6  0F54               	incfsz	(___lldiv@divisor+3),w
  5688  07D7  02D8               	subwf	(___lldiv@dividend+3),f
  5689                           	line	20
  5690                           	
  5691  07D8                     l10765:	
  5692  07D8  145A               	bsf	(___lldiv@quotient)+(0/8),(0)&7
  5693  07D9  2FDA               	goto	l10767
  5694                           	line	21
  5695                           	
  5696  07DA                     l8512:	
  5697                           	line	22
  5698                           	
  5699  07DA                     l10767:	
  5700  07DA  3001               	movlw	01h
  5701  07DB                     u3925:
  5702  07DB  1003               	clrc
  5703  07DC  0CD4               	rrf	(___lldiv@divisor+3),f
  5704  07DD  0CD3               	rrf	(___lldiv@divisor+2),f
  5705  07DE  0CD2               	rrf	(___lldiv@divisor+1),f
  5706  07DF  0CD1               	rrf	(___lldiv@divisor),f
  5707  07E0  3EFF               	addlw	-1
  5708  07E1  1D03               	skipz
  5709  07E2  2FDB               	goto	u3925
  5710                           
  5711                           	line	23
  5712                           	
  5713  07E3                     l10769:	
  5714  07E3  3001               	movlw	low(01h)
  5715  07E4  02DE               	subwf	(___lldiv@counter),f
  5716  07E5  1D03               	btfss	status,2
  5717  07E6  2FE8               	goto	u3931
  5718  07E7  2FE9               	goto	u3930
  5719  07E8                     u3931:
  5720  07E8  2FAF               	goto	l10759
  5721  07E9                     u3930:
  5722  07E9  2FEB               	goto	l10771
  5723                           	
  5724  07EA                     l8513:	
  5725  07EA  2FEB               	goto	l10771
  5726                           	line	24
  5727                           	
  5728  07EB                     l8507:	
  5729                           	line	25
  5730                           	
  5731  07EB                     l10771:	
  5732  07EB  085D               	movf	(___lldiv@quotient+3),w
  5733  07EC  00D4               	movwf	(?___lldiv+3)
  5734  07ED  085C               	movf	(___lldiv@quotient+2),w
  5735  07EE  00D3               	movwf	(?___lldiv+2)
  5736  07EF  085B               	movf	(___lldiv@quotient+1),w
  5737  07F0  00D2               	movwf	(?___lldiv+1)
  5738  07F1  085A               	movf	(___lldiv@quotient),w
  5739  07F2  00D1               	movwf	(?___lldiv)
  5740                           
  5741  07F3  2FF4               	goto	l8514
  5742                           	
  5743  07F4                     l10773:	
  5744                           	line	26
  5745                           	
  5746  07F4                     l8514:	
  5747  07F4  0008               	return
  5748                           	opt stack 0
  5749                           GLOBAL	__end_of___lldiv
  5750  07F5                     	__end_of___lldiv:
  5751 ;; =============== function ___lldiv ends ============
  5752                           
  5753                           	signat	___lldiv,8316
  5754                           	global	___awdiv
  5755                           psect	text838,local,class=CODE,delta=2
  5756                           global __ptext838
  5757  0548                     __ptext838:
  5758                           
  5759 ;; *************** function ___awdiv *****************
  5760 ;; Defined at:
  5761 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  divisor         2    0[BANK0 ] int 
  5764 ;;  dividend        2    2[BANK0 ] int 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  quotient        2    7[BANK0 ] int 
  5767 ;;  sign            1    6[BANK0 ] unsigned char 
  5768 ;;  counter         1    5[BANK0 ] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  2    0[BANK0 ] int 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5778 ;;      Params:         0       4       0       0       0
  5779 ;;      Locals:         0       4       0       0       0
  5780 ;;      Temps:          0       1       0       0       0
  5781 ;;      Totals:         0       9       0       0       0
  5782 ;;Total ram usage:        9 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    2
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_SetDisplay_Voltage
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           psect	text838
  5792                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  5793                           	line	5
  5794                           	global	__size_of___awdiv
  5795  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5796                           	
  5797  0548                     ___awdiv:	
  5798                           	opt	stack 3
  5799                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5800                           	line	9
  5801                           	
  5802  0548                     l10711:	
  5803  0548  1283               	bcf	status, 5	;RP0=0, select bank0
  5804  0549  1303               	bcf	status, 6	;RP1=0, select bank0
  5805  054A  01D7               	clrf	(___awdiv@sign)
  5806                           	line	10
  5807  054B  1FD2               	btfss	(___awdiv@divisor+1),7
  5808  054C  2D4E               	goto	u3771
  5809  054D  2D4F               	goto	u3770
  5810  054E                     u3771:
  5811  054E  2D58               	goto	l10715
  5812  054F                     u3770:
  5813                           	line	11
  5814                           	
  5815  054F                     l10713:	
  5816  054F  09D1               	comf	(___awdiv@divisor),f
  5817  0550  09D2               	comf	(___awdiv@divisor+1),f
  5818  0551  0AD1               	incf	(___awdiv@divisor),f
  5819  0552  1903               	skipnz
  5820  0553  0AD2               	incf	(___awdiv@divisor+1),f
  5821                           	line	12
  5822  0554  01D7               	clrf	(___awdiv@sign)
  5823  0555  1403               	bsf	status,0
  5824  0556  0DD7               	rlf	(___awdiv@sign),f
  5825  0557  2D58               	goto	l10715
  5826                           	line	13
  5827                           	
  5828  0558                     l8475:	
  5829                           	line	14
  5830                           	
  5831  0558                     l10715:	
  5832  0558  1FD4               	btfss	(___awdiv@dividend+1),7
  5833  0559  2D5B               	goto	u3781
  5834  055A  2D5C               	goto	u3780
  5835  055B                     u3781:
  5836  055B  2D66               	goto	l10721
  5837  055C                     u3780:
  5838                           	line	15
  5839                           	
  5840  055C                     l10717:	
  5841  055C  09D3               	comf	(___awdiv@dividend),f
  5842  055D  09D4               	comf	(___awdiv@dividend+1),f
  5843  055E  0AD3               	incf	(___awdiv@dividend),f
  5844  055F  1903               	skipnz
  5845  0560  0AD4               	incf	(___awdiv@dividend+1),f
  5846                           	line	16
  5847                           	
  5848  0561                     l10719:	
  5849  0561  3001               	movlw	(01h)
  5850  0562  00D5               	movwf	(??___awdiv+0)+0
  5851  0563  0855               	movf	(??___awdiv+0)+0,w
  5852  0564  06D7               	xorwf	(___awdiv@sign),f
  5853  0565  2D66               	goto	l10721
  5854                           	line	17
  5855                           	
  5856  0566                     l8476:	
  5857                           	line	18
  5858                           	
  5859  0566                     l10721:	
  5860  0566  01D8               	clrf	(___awdiv@quotient)
  5861  0567  01D9               	clrf	(___awdiv@quotient+1)
  5862                           	line	19
  5863                           	
  5864  0568                     l10723:	
  5865  0568  0852               	movf	(___awdiv@divisor+1),w
  5866  0569  0451               	iorwf	(___awdiv@divisor),w
  5867  056A  1903               	skipnz
  5868  056B  2D6D               	goto	u3791
  5869  056C  2D6E               	goto	u3790
  5870  056D                     u3791:
  5871  056D  2DAC               	goto	l10743
  5872  056E                     u3790:
  5873                           	line	20
  5874                           	
  5875  056E                     l10725:	
  5876  056E  01D6               	clrf	(___awdiv@counter)
  5877  056F  1403               	bsf	status,0
  5878  0570  0DD6               	rlf	(___awdiv@counter),f
  5879                           	line	21
  5880  0571  2D7E               	goto	l10731
  5881                           	
  5882  0572                     l8479:	
  5883                           	line	22
  5884                           	
  5885  0572                     l10727:	
  5886  0572  3001               	movlw	01h
  5887                           	
  5888  0573                     u3805:
  5889  0573  1003               	clrc
  5890  0574  0DD1               	rlf	(___awdiv@divisor),f
  5891  0575  0DD2               	rlf	(___awdiv@divisor+1),f
  5892  0576  3EFF               	addlw	-1
  5893  0577  1D03               	skipz
  5894  0578  2D73               	goto	u3805
  5895                           	line	23
  5896                           	
  5897  0579                     l10729:	
  5898  0579  3001               	movlw	(01h)
  5899  057A  00D5               	movwf	(??___awdiv+0)+0
  5900  057B  0855               	movf	(??___awdiv+0)+0,w
  5901  057C  07D6               	addwf	(___awdiv@counter),f
  5902  057D  2D7E               	goto	l10731
  5903                           	line	24
  5904                           	
  5905  057E                     l8478:	
  5906                           	line	21
  5907                           	
  5908  057E                     l10731:	
  5909  057E  1FD2               	btfss	(___awdiv@divisor+1),(15)&7
  5910  057F  2D81               	goto	u3811
  5911  0580  2D82               	goto	u3810
  5912  0581                     u3811:
  5913  0581  2D72               	goto	l10727
  5914  0582                     u3810:
  5915  0582  2D84               	goto	l10733
  5916                           	
  5917  0583                     l8480:	
  5918  0583  2D84               	goto	l10733
  5919                           	line	25
  5920                           	
  5921  0584                     l8481:	
  5922                           	line	26
  5923                           	
  5924  0584                     l10733:	
  5925  0584  3001               	movlw	01h
  5926                           	
  5927  0585                     u3825:
  5928  0585  1003               	clrc
  5929  0586  0DD8               	rlf	(___awdiv@quotient),f
  5930  0587  0DD9               	rlf	(___awdiv@quotient+1),f
  5931  0588  3EFF               	addlw	-1
  5932  0589  1D03               	skipz
  5933  058A  2D85               	goto	u3825
  5934                           	line	27
  5935  058B  0852               	movf	(___awdiv@divisor+1),w
  5936  058C  0254               	subwf	(___awdiv@dividend+1),w
  5937  058D  1D03               	skipz
  5938  058E  2D91               	goto	u3835
  5939  058F  0851               	movf	(___awdiv@divisor),w
  5940  0590  0253               	subwf	(___awdiv@dividend),w
  5941  0591                     u3835:
  5942  0591  1C03               	skipc
  5943  0592  2D94               	goto	u3831
  5944  0593  2D95               	goto	u3830
  5945  0594                     u3831:
  5946  0594  2D9D               	goto	l10739
  5947  0595                     u3830:
  5948                           	line	28
  5949                           	
  5950  0595                     l10735:	
  5951  0595  0851               	movf	(___awdiv@divisor),w
  5952  0596  02D3               	subwf	(___awdiv@dividend),f
  5953  0597  0852               	movf	(___awdiv@divisor+1),w
  5954  0598  1C03               	skipc
  5955  0599  03D4               	decf	(___awdiv@dividend+1),f
  5956  059A  02D4               	subwf	(___awdiv@dividend+1),f
  5957                           	line	29
  5958                           	
  5959  059B                     l10737:	
  5960  059B  1458               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5961  059C  2D9D               	goto	l10739
  5962                           	line	30
  5963                           	
  5964  059D                     l8482:	
  5965                           	line	31
  5966                           	
  5967  059D                     l10739:	
  5968  059D  3001               	movlw	01h
  5969                           	
  5970  059E                     u3845:
  5971  059E  1003               	clrc
  5972  059F  0CD2               	rrf	(___awdiv@divisor+1),f
  5973  05A0  0CD1               	rrf	(___awdiv@divisor),f
  5974  05A1  3EFF               	addlw	-1
  5975  05A2  1D03               	skipz
  5976  05A3  2D9E               	goto	u3845
  5977                           	line	32
  5978                           	
  5979  05A4                     l10741:	
  5980  05A4  3001               	movlw	low(01h)
  5981  05A5  02D6               	subwf	(___awdiv@counter),f
  5982  05A6  1D03               	btfss	status,2
  5983  05A7  2DA9               	goto	u3851
  5984  05A8  2DAA               	goto	u3850
  5985  05A9                     u3851:
  5986  05A9  2D84               	goto	l10733
  5987  05AA                     u3850:
  5988  05AA  2DAC               	goto	l10743
  5989                           	
  5990  05AB                     l8483:	
  5991  05AB  2DAC               	goto	l10743
  5992                           	line	33
  5993                           	
  5994  05AC                     l8477:	
  5995                           	line	34
  5996                           	
  5997  05AC                     l10743:	
  5998  05AC  0857               	movf	(___awdiv@sign),w
  5999  05AD  1D03               	skipz
  6000  05AE  2DB0               	goto	u3860
  6001  05AF  2DB6               	goto	l10747
  6002  05B0                     u3860:
  6003                           	line	35
  6004                           	
  6005  05B0                     l10745:	
  6006  05B0  09D8               	comf	(___awdiv@quotient),f
  6007  05B1  09D9               	comf	(___awdiv@quotient+1),f
  6008  05B2  0AD8               	incf	(___awdiv@quotient),f
  6009  05B3  1903               	skipnz
  6010  05B4  0AD9               	incf	(___awdiv@quotient+1),f
  6011  05B5  2DB6               	goto	l10747
  6012                           	
  6013  05B6                     l8484:	
  6014                           	line	36
  6015                           	
  6016  05B6                     l10747:	
  6017  05B6  0859               	movf	(___awdiv@quotient+1),w
  6018  05B7  01D2               	clrf	(?___awdiv+1)
  6019  05B8  07D2               	addwf	(?___awdiv+1)
  6020  05B9  0858               	movf	(___awdiv@quotient),w
  6021  05BA  01D1               	clrf	(?___awdiv)
  6022  05BB  07D1               	addwf	(?___awdiv)
  6023                           
  6024  05BC  2DBD               	goto	l8485
  6025                           	
  6026  05BD                     l10749:	
  6027                           	line	37
  6028                           	
  6029  05BD                     l8485:	
  6030  05BD  0008               	return
  6031                           	opt stack 0
  6032                           GLOBAL	__end_of___awdiv
  6033  05BE                     	__end_of___awdiv:
  6034 ;; =============== function ___awdiv ends ============
  6035                           
  6036                           	signat	___awdiv,8314
  6037                           	global	___lmul
  6038                           psect	text839,local,class=CODE,delta=2
  6039                           global __ptext839
  6040  0E09                     __ptext839:
  6041                           
  6042 ;; *************** function ___lmul *****************
  6043 ;; Defined at:
  6044 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lmul.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6047 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  product         4    9[BANK0 ] unsigned long 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  4    0[BANK0 ] unsigned long 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6059 ;;      Params:         0       8       0       0       0
  6060 ;;      Locals:         0       4       0       0       0
  6061 ;;      Temps:          0       1       0       0       0
  6062 ;;      Totals:         0      13       0       0       0
  6063 ;;Total ram usage:       13 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    2
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_pwm_update
  6070 ;;		_Convert_to_Voltage
  6071 ;;		_Divizor_U_Sense
  6072 ;;		_Divizor_U_Pot
  6073 ;;		_UpotToPWM
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           psect	text839
  6077                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lmul.c"
  6078                           	line	3
  6079                           	global	__size_of___lmul
  6080  004C                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  6081                           	
  6082  0E09                     ___lmul:	
  6083                           	opt	stack 3
  6084                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6085                           	line	4
  6086                           	
  6087  0E09                     l10697:	
  6088  0E09  3000               	movlw	0
  6089  0E0A  1283               	bcf	status, 5	;RP0=0, select bank0
  6090  0E0B  1303               	bcf	status, 6	;RP1=0, select bank0
  6091  0E0C  00DD               	movwf	(___lmul@product+3)
  6092  0E0D  3000               	movlw	0
  6093  0E0E  00DC               	movwf	(___lmul@product+2)
  6094  0E0F  3000               	movlw	0
  6095  0E10  00DB               	movwf	(___lmul@product+1)
  6096  0E11  3000               	movlw	0
  6097  0E12  00DA               	movwf	(___lmul@product)
  6098                           
  6099  0E13  2E14               	goto	l10699
  6100                           	line	6
  6101                           	
  6102  0E14                     l8410:	
  6103                           	line	7
  6104                           	
  6105  0E14                     l10699:	
  6106  0E14  1C51               	btfss	(___lmul@multiplier),(0)&7
  6107  0E15  2E17               	goto	u3721
  6108  0E16  2E18               	goto	u3720
  6109  0E17                     u3721:
  6110  0E17  2E30               	goto	l10703
  6111  0E18                     u3720:
  6112                           	line	8
  6113                           	
  6114  0E18                     l10701:	
  6115  0E18  0855               	movf	(___lmul@multiplicand),w
  6116  0E19  07DA               	addwf	(___lmul@product),f
  6117  0E1A  0856               	movf	(___lmul@multiplicand+1),w
  6118  0E1B  1103               	clrz
  6119  0E1C  1803               	skipnc
  6120  0E1D  3E01               	addlw	1
  6121  0E1E  1903               	skipnz
  6122  0E1F  2E21               	goto	u3731
  6123  0E20  07DB               	addwf	(___lmul@product+1),f
  6124  0E21                     u3731:
  6125  0E21  0857               	movf	(___lmul@multiplicand+2),w
  6126  0E22  1103               	clrz
  6127  0E23  1803               	skipnc
  6128  0E24  3E01               	addlw	1
  6129  0E25  1903               	skipnz
  6130  0E26  2E28               	goto	u3732
  6131  0E27  07DC               	addwf	(___lmul@product+2),f
  6132  0E28                     u3732:
  6133  0E28  0858               	movf	(___lmul@multiplicand+3),w
  6134  0E29  1103               	clrz
  6135  0E2A  1803               	skipnc
  6136  0E2B  3E01               	addlw	1
  6137  0E2C  1903               	skipnz
  6138  0E2D  2E2F               	goto	u3733
  6139  0E2E  07DD               	addwf	(___lmul@product+3),f
  6140  0E2F                     u3733:
  6141                           
  6142  0E2F  2E30               	goto	l10703
  6143                           	
  6144  0E30                     l8411:	
  6145                           	line	9
  6146                           	
  6147  0E30                     l10703:	
  6148  0E30  3001               	movlw	01h
  6149  0E31  00D9               	movwf	(??___lmul+0)+0
  6150  0E32                     u3745:
  6151  0E32  1003               	clrc
  6152  0E33  0DD5               	rlf	(___lmul@multiplicand),f
  6153  0E34  0DD6               	rlf	(___lmul@multiplicand+1),f
  6154  0E35  0DD7               	rlf	(___lmul@multiplicand+2),f
  6155  0E36  0DD8               	rlf	(___lmul@multiplicand+3),f
  6156  0E37  0BD9               	decfsz	(??___lmul+0)+0
  6157  0E38  2E32               	goto	u3745
  6158                           	line	10
  6159                           	
  6160  0E39                     l10705:	
  6161  0E39  3001               	movlw	01h
  6162  0E3A                     u3755:
  6163  0E3A  1003               	clrc
  6164  0E3B  0CD4               	rrf	(___lmul@multiplier+3),f
  6165  0E3C  0CD3               	rrf	(___lmul@multiplier+2),f
  6166  0E3D  0CD2               	rrf	(___lmul@multiplier+1),f
  6167  0E3E  0CD1               	rrf	(___lmul@multiplier),f
  6168  0E3F  3EFF               	addlw	-1
  6169  0E40  1D03               	skipz
  6170  0E41  2E3A               	goto	u3755
  6171                           
  6172                           	line	11
  6173  0E42  0854               	movf	(___lmul@multiplier+3),w
  6174  0E43  0453               	iorwf	(___lmul@multiplier+2),w
  6175  0E44  0452               	iorwf	(___lmul@multiplier+1),w
  6176  0E45  0451               	iorwf	(___lmul@multiplier),w
  6177  0E46  1D03               	skipz
  6178  0E47  2E49               	goto	u3761
  6179  0E48  2E4A               	goto	u3760
  6180  0E49                     u3761:
  6181  0E49  2E14               	goto	l10699
  6182  0E4A                     u3760:
  6183  0E4A  2E4B               	goto	l10707
  6184                           	
  6185  0E4B                     l8412:	
  6186                           	line	12
  6187                           	
  6188  0E4B                     l10707:	
  6189  0E4B  085D               	movf	(___lmul@product+3),w
  6190  0E4C  00D4               	movwf	(?___lmul+3)
  6191  0E4D  085C               	movf	(___lmul@product+2),w
  6192  0E4E  00D3               	movwf	(?___lmul+2)
  6193  0E4F  085B               	movf	(___lmul@product+1),w
  6194  0E50  00D2               	movwf	(?___lmul+1)
  6195  0E51  085A               	movf	(___lmul@product),w
  6196  0E52  00D1               	movwf	(?___lmul)
  6197                           
  6198  0E53  2E54               	goto	l8413
  6199                           	
  6200  0E54                     l10709:	
  6201                           	line	13
  6202                           	
  6203  0E54                     l8413:	
  6204  0E54  0008               	return
  6205                           	opt stack 0
  6206                           GLOBAL	__end_of___lmul
  6207  0E55                     	__end_of___lmul:
  6208 ;; =============== function ___lmul ends ============
  6209                           
  6210                           	signat	___lmul,8316
  6211                           	global	___wmul
  6212                           psect	text840,local,class=CODE,delta=2
  6213                           global __ptext840
  6214  0CE9                     __ptext840:
  6215                           
  6216 ;; *************** function ___wmul *****************
  6217 ;; Defined at:
  6218 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6221 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  product         2    4[BANK0 ] unsigned int 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  2    0[BANK0 ] unsigned int 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6233 ;;      Params:         0       4       0       0       0
  6234 ;;      Locals:         0       2       0       0       0
  6235 ;;      Temps:          0       0       0       0       0
  6236 ;;      Totals:         0       6       0       0       0
  6237 ;;Total ram usage:        6 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    2
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_SetDisplay_Voltage
  6244 ;;		_SetDisplay_Current
  6245 ;;		_SetDisplay_Current_target
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           psect	text840
  6249                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  6250                           	line	3
  6251                           	global	__size_of___wmul
  6252  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6253                           	
  6254  0CE9                     ___wmul:	
  6255                           	opt	stack 3
  6256                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6257                           	line	4
  6258                           	
  6259  0CE9                     l10685:	
  6260  0CE9  1283               	bcf	status, 5	;RP0=0, select bank0
  6261  0CEA  1303               	bcf	status, 6	;RP1=0, select bank0
  6262  0CEB  01D5               	clrf	(___wmul@product)
  6263  0CEC  01D6               	clrf	(___wmul@product+1)
  6264  0CED  2CEE               	goto	l10687
  6265                           	line	6
  6266                           	
  6267  0CEE                     l8335:	
  6268                           	line	7
  6269                           	
  6270  0CEE                     l10687:	
  6271  0CEE  1C51               	btfss	(___wmul@multiplier),(0)&7
  6272  0CEF  2CF1               	goto	u3681
  6273  0CF0  2CF2               	goto	u3680
  6274  0CF1                     u3681:
  6275  0CF1  2CF8               	goto	l8336
  6276  0CF2                     u3680:
  6277                           	line	8
  6278                           	
  6279  0CF2                     l10689:	
  6280  0CF2  0853               	movf	(___wmul@multiplicand),w
  6281  0CF3  07D5               	addwf	(___wmul@product),f
  6282  0CF4  1803               	skipnc
  6283  0CF5  0AD6               	incf	(___wmul@product+1),f
  6284  0CF6  0854               	movf	(___wmul@multiplicand+1),w
  6285  0CF7  07D6               	addwf	(___wmul@product+1),f
  6286                           	
  6287  0CF8                     l8336:	
  6288                           	line	9
  6289  0CF8  3001               	movlw	01h
  6290                           	
  6291  0CF9                     u3695:
  6292  0CF9  1003               	clrc
  6293  0CFA  0DD3               	rlf	(___wmul@multiplicand),f
  6294  0CFB  0DD4               	rlf	(___wmul@multiplicand+1),f
  6295  0CFC  3EFF               	addlw	-1
  6296  0CFD  1D03               	skipz
  6297  0CFE  2CF9               	goto	u3695
  6298                           	line	10
  6299                           	
  6300  0CFF                     l10691:	
  6301  0CFF  3001               	movlw	01h
  6302                           	
  6303  0D00                     u3705:
  6304  0D00  1003               	clrc
  6305  0D01  0CD2               	rrf	(___wmul@multiplier+1),f
  6306  0D02  0CD1               	rrf	(___wmul@multiplier),f
  6307  0D03  3EFF               	addlw	-1
  6308  0D04  1D03               	skipz
  6309  0D05  2D00               	goto	u3705
  6310                           	line	11
  6311  0D06  0852               	movf	((___wmul@multiplier+1)),w
  6312  0D07  0451               	iorwf	((___wmul@multiplier)),w
  6313  0D08  1D03               	skipz
  6314  0D09  2D0B               	goto	u3711
  6315  0D0A  2D0C               	goto	u3710
  6316  0D0B                     u3711:
  6317  0D0B  2CEE               	goto	l10687
  6318  0D0C                     u3710:
  6319  0D0C  2D0D               	goto	l10693
  6320                           	
  6321  0D0D                     l8337:	
  6322                           	line	12
  6323                           	
  6324  0D0D                     l10693:	
  6325  0D0D  0856               	movf	(___wmul@product+1),w
  6326  0D0E  01D2               	clrf	(?___wmul+1)
  6327  0D0F  07D2               	addwf	(?___wmul+1)
  6328  0D10  0855               	movf	(___wmul@product),w
  6329  0D11  01D1               	clrf	(?___wmul)
  6330  0D12  07D1               	addwf	(?___wmul)
  6331                           
  6332  0D13  2D14               	goto	l8338
  6333                           	
  6334  0D14                     l10695:	
  6335                           	line	13
  6336                           	
  6337  0D14                     l8338:	
  6338  0D14  0008               	return
  6339                           	opt stack 0
  6340                           GLOBAL	__end_of___wmul
  6341  0D15                     	__end_of___wmul:
  6342 ;; =============== function ___wmul ends ============
  6343                           
  6344                           	signat	___wmul,8314
  6345                           	global	_LCD_delay_us
  6346                           psect	text841,local,class=CODE,delta=2
  6347                           global __ptext841
  6348  0BD7                     __ptext841:
  6349                           
  6350 ;; *************** function _LCD_delay_us *****************
  6351 ;; Defined at:
  6352 ;;		line 317 in file "E:\my_projects\2013\power\software\Display_2raw.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  delay           1    wreg     unsigned char 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  delay           1    1[BANK0 ] unsigned char 
  6357 ;;  index           1    2[BANK0 ] unsigned char 
  6358 ;; Return value:  Size  Location     Type
  6359 ;;		None               void
  6360 ;; Registers used:
  6361 ;;		wreg, status,2, status,0
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6367 ;;      Params:         0       0       0       0       0
  6368 ;;      Locals:         0       2       0       0       0
  6369 ;;      Temps:          0       1       0       0       0
  6370 ;;      Totals:         0       3       0       0       0
  6371 ;;Total ram usage:        3 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; Hardware stack levels required when called:    2
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_SetCommand
  6378 ;;		_WriteData
  6379 ;;		_IsBusy
  6380 ;;		_ReadData
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           psect	text841
  6384                           	file	"E:\my_projects\2013\power\software\Display_2raw.c"
  6385                           	line	317
  6386                           	global	__size_of_LCD_delay_us
  6387  0013                     	__size_of_LCD_delay_us	equ	__end_of_LCD_delay_us-_LCD_delay_us
  6388                           	
  6389  0BD7                     _LCD_delay_us:	
  6390                           	opt	stack 2
  6391                           ; Regs used in _LCD_delay_us: [wreg+status,2+status,0]
  6392                           ;LCD_delay_us@delay stored from wreg
  6393  0BD7  1283               	bcf	status, 5	;RP0=0, select bank0
  6394  0BD8  1303               	bcf	status, 6	;RP1=0, select bank0
  6395  0BD9  00D2               	movwf	(LCD_delay_us@delay)
  6396                           	line	318
  6397                           	
  6398  0BDA                     l10663:	
  6399                           ;Display_2raw.c: 318: T_UBYTE index = 0;
  6400  0BDA  01D3               	clrf	(LCD_delay_us@index)
  6401                           	line	319
  6402                           ;Display_2raw.c: 319: for (index = 0; index<delay; index++);
  6403  0BDB  01D3               	clrf	(LCD_delay_us@index)
  6404  0BDC  2BE2               	goto	l10667
  6405                           	
  6406  0BDD                     l7083:	
  6407                           	
  6408  0BDD                     l10665:	
  6409  0BDD  3001               	movlw	(01h)
  6410  0BDE  00D1               	movwf	(??_LCD_delay_us+0)+0
  6411  0BDF  0851               	movf	(??_LCD_delay_us+0)+0,w
  6412  0BE0  07D3               	addwf	(LCD_delay_us@index),f
  6413  0BE1  2BE2               	goto	l10667
  6414                           	
  6415  0BE2                     l7082:	
  6416                           	
  6417  0BE2                     l10667:	
  6418  0BE2  0852               	movf	(LCD_delay_us@delay),w
  6419  0BE3  0253               	subwf	(LCD_delay_us@index),w
  6420  0BE4  1C03               	skipc
  6421  0BE5  2BE7               	goto	u3671
  6422  0BE6  2BE8               	goto	u3670
  6423  0BE7                     u3671:
  6424  0BE7  2BDD               	goto	l10665
  6425  0BE8                     u3670:
  6426  0BE8  2BE9               	goto	l7085
  6427                           	
  6428  0BE9                     l7084:	
  6429                           	line	320
  6430                           	
  6431  0BE9                     l7085:	
  6432  0BE9  0008               	return
  6433                           	opt stack 0
  6434                           GLOBAL	__end_of_LCD_delay_us
  6435  0BEA                     	__end_of_LCD_delay_us:
  6436 ;; =============== function _LCD_delay_us ends ============
  6437                           
  6438                           	signat	_LCD_delay_us,4216
  6439                           	global	_init_timer0
  6440                           psect	text842,local,class=CODE,delta=2
  6441                           global __ptext842
  6442  07F5                     __ptext842:
  6443                           
  6444 ;; *************** function _init_timer0 *****************
  6445 ;; Defined at:
  6446 ;;		line 25 in file "E:\my_projects\2013\power\software\main.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;		None
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;		None
  6451 ;; Return value:  Size  Location     Type
  6452 ;;		None               void
  6453 ;; Registers used:
  6454 ;;		None
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6460 ;;      Params:         0       0       0       0       0
  6461 ;;      Locals:         0       0       0       0       0
  6462 ;;      Temps:          0       0       0       0       0
  6463 ;;      Totals:         0       0       0       0       0
  6464 ;;Total ram usage:        0 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    2
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_main
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           psect	text842
  6474                           	file	"E:\my_projects\2013\power\software\main.c"
  6475                           	line	25
  6476                           	global	__size_of_init_timer0
  6477  000B                     	__size_of_init_timer0	equ	__end_of_init_timer0-_init_timer0
  6478                           	
  6479  07F5                     _init_timer0:	
  6480                           	opt	stack 5
  6481                           ; Regs used in _init_timer0: []
  6482                           	line	27
  6483                           	
  6484  07F5                     l10639:	
  6485                           ;main.c: 27: T0CS=0;
  6486  07F5  1683               	bsf	status, 5	;RP0=1, select bank1
  6487  07F6  1303               	bcf	status, 6	;RP1=0, select bank1
  6488  07F7  1281               	bcf	(1037/8)^080h,(1037)&7
  6489                           	line	29
  6490                           ;main.c: 29: PSA=0;
  6491  07F8  1181               	bcf	(1035/8)^080h,(1035)&7
  6492                           	line	31
  6493                           ;main.c: 31: PS2=0;
  6494  07F9  1101               	bcf	(1034/8)^080h,(1034)&7
  6495                           	line	32
  6496                           ;main.c: 32: PS1=0;
  6497  07FA  1081               	bcf	(1033/8)^080h,(1033)&7
  6498                           	line	33
  6499                           ;main.c: 33: PS0=0;
  6500  07FB  1001               	bcf	(1032/8)^080h,(1032)&7
  6501                           	line	36
  6502                           ;main.c: 36: TMR0IE=1;
  6503  07FC  168B               	bsf	(93/8),(93)&7
  6504                           	line	38
  6505                           ;main.c: 38: PEIE=1;
  6506  07FD  170B               	bsf	(94/8),(94)&7
  6507                           	line	39
  6508                           ;main.c: 39: {GIE=1;};
  6509  07FE  178B               	bsf	(95/8),(95)&7
  6510                           	line	40
  6511                           	
  6512  07FF                     l3154:	
  6513  07FF  0008               	return
  6514                           	opt stack 0
  6515                           GLOBAL	__end_of_init_timer0
  6516  0800                     	__end_of_init_timer0:
  6517 ;; =============== function _init_timer0 ends ============
  6518                           
  6519                           	signat	_init_timer0,88
  6520                           	global	_init_botifilter
  6521                           psect	text843,local,class=CODE,delta=2
  6522                           global __ptext843
  6523  0CC3                     __ptext843:
  6524                           
  6525 ;; *************** function _init_botifilter *****************
  6526 ;; Defined at:
  6527 ;;		line 4 in file "E:\my_projects\2013\power\software\control.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;  Buffer          1    wreg     PTR unsigned short 
  6530 ;;		 -> auwPWMOut(16), auwUPOT(10), 
  6531 ;;  luwInitValue    2    0[BANK0 ] unsigned short 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  Buffer          1    4[BANK0 ] PTR unsigned short 
  6534 ;;		 -> auwPWMOut(16), auwUPOT(10), 
  6535 ;;  lubindex        1    5[BANK0 ] unsigned char 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;		None               void
  6538 ;; Registers used:
  6539 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6545 ;;      Params:         0       2       0       0       0
  6546 ;;      Locals:         0       2       0       0       0
  6547 ;;      Temps:          0       2       0       0       0
  6548 ;;      Totals:         0       6       0       0       0
  6549 ;;Total ram usage:        6 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; Hardware stack levels required when called:    2
  6552 ;; This function calls:
  6553 ;;		Nothing
  6554 ;; This function is called by:
  6555 ;;		_init
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           psect	text843
  6559                           	file	"E:\my_projects\2013\power\software\control.c"
  6560                           	line	4
  6561                           	global	__size_of_init_botifilter
  6562  0026                     	__size_of_init_botifilter	equ	__end_of_init_botifilter-_init_botifilter
  6563                           	
  6564  0CC3                     _init_botifilter:	
  6565                           	opt	stack 4
  6566                           ; Regs used in _init_botifilter: [wreg-fsr0h+status,2+status,0]
  6567                           ;init_botifilter@Buffer stored from wreg
  6568  0CC3  1283               	bcf	status, 5	;RP0=0, select bank0
  6569  0CC4  1303               	bcf	status, 6	;RP1=0, select bank0
  6570  0CC5  00D5               	movwf	(init_botifilter@Buffer)
  6571                           	line	5
  6572                           	
  6573  0CC6                     l10627:	
  6574                           ;control.c: 5: T_UBYTE lubindex = 0;
  6575  0CC6  01D6               	clrf	(init_botifilter@lubindex)
  6576                           	line	6
  6577                           ;control.c: 6: for (lubindex =0;lubindex<(8+1);lubindex++)
  6578  0CC7  01D6               	clrf	(init_botifilter@lubindex)
  6579                           	
  6580  0CC8                     l10629:	
  6581  0CC8  3009               	movlw	(09h)
  6582  0CC9  0256               	subwf	(init_botifilter@lubindex),w
  6583  0CCA  1C03               	skipc
  6584  0CCB  2CCD               	goto	u3621
  6585  0CCC  2CCE               	goto	u3620
  6586  0CCD                     u3621:
  6587  0CCD  2CD0               	goto	l10633
  6588  0CCE                     u3620:
  6589  0CCE  2CE8               	goto	l7700
  6590                           	
  6591  0CCF                     l10631:	
  6592  0CCF  2CE8               	goto	l7700
  6593                           	line	7
  6594                           	
  6595  0CD0                     l7698:	
  6596                           	line	8
  6597                           	
  6598  0CD0                     l10633:	
  6599                           ;control.c: 7: {
  6600                           ;control.c: 8: Buffer[lubindex] = luwInitValue;
  6601  0CD0  0856               	movf	(init_botifilter@lubindex),w
  6602  0CD1  00D3               	movwf	(??_init_botifilter+0)+0
  6603  0CD2  0753               	addwf	(??_init_botifilter+0)+0,w
  6604  0CD3  0755               	addwf	(init_botifilter@Buffer),w
  6605  0CD4  00D4               	movwf	(??_init_botifilter+1)+0
  6606  0CD5  0854               	movf	0+(??_init_botifilter+1)+0,w
  6607  0CD6  0084               	movwf	fsr0
  6608  0CD7  0851               	movf	(init_botifilter@luwInitValue),w
  6609  0CD8  1383               	bcf	status, 7	;select IRP bank0
  6610  0CD9  0080               	movwf	indf
  6611  0CDA  0A84               	incf	fsr0,f
  6612  0CDB  0852               	movf	(init_botifilter@luwInitValue+1),w
  6613  0CDC  0080               	movwf	indf
  6614                           	line	6
  6615                           	
  6616  0CDD                     l10635:	
  6617  0CDD  3001               	movlw	(01h)
  6618  0CDE  00D3               	movwf	(??_init_botifilter+0)+0
  6619  0CDF  0853               	movf	(??_init_botifilter+0)+0,w
  6620  0CE0  07D6               	addwf	(init_botifilter@lubindex),f
  6621                           	
  6622  0CE1                     l10637:	
  6623  0CE1  3009               	movlw	(09h)
  6624  0CE2  0256               	subwf	(init_botifilter@lubindex),w
  6625  0CE3  1C03               	skipc
  6626  0CE4  2CE6               	goto	u3631
  6627  0CE5  2CE7               	goto	u3630
  6628  0CE6                     u3631:
  6629  0CE6  2CD0               	goto	l10633
  6630  0CE7                     u3630:
  6631  0CE7  2CE8               	goto	l7700
  6632                           	
  6633  0CE8                     l7699:	
  6634                           	line	10
  6635                           	
  6636  0CE8                     l7700:	
  6637  0CE8  0008               	return
  6638                           	opt stack 0
  6639                           GLOBAL	__end_of_init_botifilter
  6640  0CE9                     	__end_of_init_botifilter:
  6641 ;; =============== function _init_botifilter ends ============
  6642                           
  6643                           	signat	_init_botifilter,8312
  6644                           	global	_InitDisplay2raw
  6645                           psect	text844,local,class=CODE,delta=2
  6646                           global __ptext844
  6647  0D15                     __ptext844:
  6648                           
  6649 ;; *************** function _InitDisplay2raw *****************
  6650 ;; Defined at:
  6651 ;;		line 38 in file "E:\my_projects\2013\power\software\Display_2raw.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;		None
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;		None
  6656 ;; Return value:  Size  Location     Type
  6657 ;;		None               void
  6658 ;; Registers used:
  6659 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6665 ;;      Params:         0       0       0       0       0
  6666 ;;      Locals:         0       0       0       0       0
  6667 ;;      Temps:          0       1       0       0       0
  6668 ;;      Totals:         0       1       0       0       0
  6669 ;;Total ram usage:        1 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:    2
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_init
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           psect	text844
  6679                           	file	"E:\my_projects\2013\power\software\Display_2raw.c"
  6680                           	line	38
  6681                           	global	__size_of_InitDisplay2raw
  6682  0032                     	__size_of_InitDisplay2raw	equ	__end_of_InitDisplay2raw-_InitDisplay2raw
  6683                           	
  6684  0D15                     _InitDisplay2raw:	
  6685                           	opt	stack 4
  6686                           ; Regs used in _InitDisplay2raw: [wreg-fsr0h+status,2+status,0]
  6687                           	line	39
  6688                           	
  6689  0D15                     l10595:	
  6690                           ;Display_2raw.c: 39: ubFirstByte = 0;
  6691  0D15  1283               	bcf	status, 5	;RP0=0, select bank0
  6692  0D16  1303               	bcf	status, 6	;RP1=0, select bank0
  6693  0D17  01C6               	clrf	(_ubFirstByte)
  6694                           	line	40
  6695                           ;Display_2raw.c: 40: ubSecondByte = 0;
  6696  0D18  01C8               	clrf	(_ubSecondByte)
  6697                           	line	41
  6698                           	
  6699  0D19                     l10597:	
  6700                           ;Display_2raw.c: 41: ubNumberINT = 0;
  6701  0D19  01AB               	clrf	(_ubNumberINT)
  6702  0D1A  01AC               	clrf	(_ubNumberINT+1)
  6703                           	line	42
  6704                           	
  6705  0D1B                     l10599:	
  6706                           ;Display_2raw.c: 42: ubThrdByte=0;
  6707  0D1B  01C9               	clrf	(_ubThrdByte)
  6708                           	line	43
  6709                           	
  6710  0D1C                     l10601:	
  6711                           ;Display_2raw.c: 43: ubFourthByte=0;
  6712  0D1C  01C7               	clrf	(_ubFourthByte)
  6713                           	line	44
  6714                           	
  6715  0D1D                     l10603:	
  6716                           ;Display_2raw.c: 44: ub_counter_1 = 0;
  6717  0D1D  01CE               	clrf	(_ub_counter_1)
  6718                           	line	45
  6719                           	
  6720  0D1E                     l10605:	
  6721                           ;Display_2raw.c: 45: ub_busy = 0;
  6722  0D1E  01CB               	clrf	(_ub_busy)
  6723                           	line	46
  6724                           	
  6725  0D1F                     l10607:	
  6726                           ;Display_2raw.c: 46: ub_char = 0;
  6727  0D1F  01FA               	clrf	(_ub_char)
  6728                           	line	47
  6729                           	
  6730  0D20                     l10609:	
  6731                           ;Display_2raw.c: 47: RC0 = 0;
  6732  0D20  1007               	bcf	(56/8),(56)&7
  6733                           	line	48
  6734                           	
  6735  0D21                     l10611:	
  6736                           ;Display_2raw.c: 48: for (ubDispIndex = 0;ubDispIndex<16;ubDispIndex++)
  6737  0D21  01C5               	clrf	(_ubDispIndex)
  6738                           	
  6739  0D22                     l10613:	
  6740  0D22  3010               	movlw	(010h)
  6741  0D23  0245               	subwf	(_ubDispIndex),w
  6742  0D24  1C03               	skipc
  6743  0D25  2D27               	goto	u3601
  6744  0D26  2D28               	goto	u3600
  6745  0D27                     u3601:
  6746  0D27  2D2A               	goto	l10617
  6747  0D28                     u3600:
  6748  0D28  2D3D               	goto	l10623
  6749                           	
  6750  0D29                     l10615:	
  6751  0D29  2D3D               	goto	l10623
  6752                           	line	49
  6753                           	
  6754  0D2A                     l7025:	
  6755                           	line	50
  6756                           	
  6757  0D2A                     l10617:	
  6758                           ;Display_2raw.c: 49: {
  6759                           ;Display_2raw.c: 50: ubDisplay_buf[ubDispIndex]= 0x20;
  6760  0D2A  3020               	movlw	(020h)
  6761  0D2B  00D1               	movwf	(??_InitDisplay2raw+0)+0
  6762  0D2C  0845               	movf	(_ubDispIndex),w
  6763  0D2D  3EA0               	addlw	_ubDisplay_buf&0ffh
  6764  0D2E  0084               	movwf	fsr0
  6765  0D2F  0851               	movf	(??_InitDisplay2raw+0)+0,w
  6766  0D30  1383               	bcf	status, 7	;select IRP bank1
  6767  0D31  0080               	movwf	indf
  6768                           	line	48
  6769                           	
  6770  0D32                     l10619:	
  6771  0D32  3001               	movlw	(01h)
  6772  0D33  00D1               	movwf	(??_InitDisplay2raw+0)+0
  6773  0D34  0851               	movf	(??_InitDisplay2raw+0)+0,w
  6774  0D35  07C5               	addwf	(_ubDispIndex),f
  6775                           	
  6776  0D36                     l10621:	
  6777  0D36  3010               	movlw	(010h)
  6778  0D37  0245               	subwf	(_ubDispIndex),w
  6779  0D38  1C03               	skipc
  6780  0D39  2D3B               	goto	u3611
  6781  0D3A  2D3C               	goto	u3610
  6782  0D3B                     u3611:
  6783  0D3B  2D2A               	goto	l10617
  6784  0D3C                     u3610:
  6785  0D3C  2D3D               	goto	l10623
  6786                           	
  6787  0D3D                     l7026:	
  6788                           	line	52
  6789                           	
  6790  0D3D                     l10623:	
  6791                           ;Display_2raw.c: 51: }
  6792                           ;Display_2raw.c: 52: ubDisplay_buf[0] = 0x11;
  6793  0D3D  3011               	movlw	(011h)
  6794  0D3E  00D1               	movwf	(??_InitDisplay2raw+0)+0
  6795  0D3F  0851               	movf	(??_InitDisplay2raw+0)+0,w
  6796  0D40  1683               	bsf	status, 5	;RP0=1, select bank1
  6797  0D41  1303               	bcf	status, 6	;RP1=0, select bank1
  6798  0D42  00A0               	movwf	(_ubDisplay_buf)^080h
  6799                           	line	53
  6800                           	
  6801  0D43                     l10625:	
  6802                           ;Display_2raw.c: 53: ub_state_Display2r = Display_no_init;
  6803  0D43  1283               	bcf	status, 5	;RP0=0, select bank0
  6804  0D44  1303               	bcf	status, 6	;RP1=0, select bank0
  6805  0D45  01CF               	clrf	(_ub_state_Display2r)
  6806                           	line	54
  6807                           	
  6808  0D46                     l7027:	
  6809  0D46  0008               	return
  6810                           	opt stack 0
  6811                           GLOBAL	__end_of_InitDisplay2raw
  6812  0D47                     	__end_of_InitDisplay2raw:
  6813 ;; =============== function _InitDisplay2raw ends ============
  6814                           
  6815                           	signat	_InitDisplay2raw,88
  6816                           	global	_init_signal_procesing
  6817                           psect	text845,local,class=CODE,delta=2
  6818                           global __ptext845
  6819  0003                     __ptext845:
  6820                           
  6821 ;; *************** function _init_signal_procesing *****************
  6822 ;; Defined at:
  6823 ;;		line 24 in file "E:\my_projects\2013\power\software\signal_proc.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;		None
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;		None
  6828 ;; Return value:  Size  Location     Type
  6829 ;;		None               void
  6830 ;; Registers used:
  6831 ;;		None
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6837 ;;      Params:         0       0       0       0       0
  6838 ;;      Locals:         0       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0
  6840 ;;      Totals:         0       0       0       0       0
  6841 ;;Total ram usage:        0 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:    2
  6844 ;; This function calls:
  6845 ;;		Nothing
  6846 ;; This function is called by:
  6847 ;;		_init
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           psect	text845
  6851                           	file	"E:\my_projects\2013\power\software\signal_proc.c"
  6852                           	line	24
  6853                           	global	__size_of_init_signal_procesing
  6854  0001                     	__size_of_init_signal_procesing	equ	__end_of_init_signal_procesing-_init_signal_procesi
                                 ng
  6855                           	
  6856  0003                     _init_signal_procesing:	
  6857                           	opt	stack 4
  6858                           ; Regs used in _init_signal_procesing: []
  6859                           	line	26
  6860                           	
  6861  0003                     l4443:	
  6862  0003  0008               	return
  6863                           	opt stack 0
  6864                           GLOBAL	__end_of_init_signal_procesing
  6865  0004                     	__end_of_init_signal_procesing:
  6866 ;; =============== function _init_signal_procesing ends ============
  6867                           
  6868                           	signat	_init_signal_procesing,88
  6869                           	global	_pwm_init
  6870                           psect	text846,local,class=CODE,delta=2
  6871                           global __ptext846
  6872  0C17                     __ptext846:
  6873                           
  6874 ;; *************** function _pwm_init *****************
  6875 ;; Defined at:
  6876 ;;		line 13 in file "E:\my_projects\2013\power\software\pwm.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  loc_channel     1    wreg     unsigned char 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;  loc_channel     1    0[BANK0 ] unsigned char 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;		None               void
  6883 ;; Registers used:
  6884 ;;		wreg
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6890 ;;      Params:         0       0       0       0       0
  6891 ;;      Locals:         0       1       0       0       0
  6892 ;;      Temps:          0       0       0       0       0
  6893 ;;      Totals:         0       1       0       0       0
  6894 ;;Total ram usage:        1 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:    2
  6897 ;; This function calls:
  6898 ;;		Nothing
  6899 ;; This function is called by:
  6900 ;;		_init
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           psect	text846
  6904                           	file	"E:\my_projects\2013\power\software\pwm.c"
  6905                           	line	13
  6906                           	global	__size_of_pwm_init
  6907  0017                     	__size_of_pwm_init	equ	__end_of_pwm_init-_pwm_init
  6908                           	
  6909  0C17                     _pwm_init:	
  6910                           	opt	stack 4
  6911                           ; Regs used in _pwm_init: [wreg]
  6912                           ;pwm_init@loc_channel stored from wreg
  6913                           	line	15
  6914  0C17  1283               	bcf	status, 5	;RP0=0, select bank0
  6915  0C18  1303               	bcf	status, 6	;RP1=0, select bank0
  6916  0C19  00D1               	movwf	(pwm_init@loc_channel)
  6917                           	
  6918  0C1A                     l10591:	
  6919                           ;pwm.c: 15: TRISC2=0;
  6920  0C1A  1683               	bsf	status, 5	;RP0=1, select bank1
  6921  0C1B  1303               	bcf	status, 6	;RP1=0, select bank1
  6922  0C1C  1107               	bcf	(1082/8)^080h,(1082)&7
  6923                           	line	16
  6924                           ;pwm.c: 16: TRISC1=0;
  6925  0C1D  1087               	bcf	(1081/8)^080h,(1081)&7
  6926                           	line	19
  6927                           ;pwm.c: 19: T2CKPS1=0;
  6928  0C1E  1283               	bcf	status, 5	;RP0=0, select bank0
  6929  0C1F  1303               	bcf	status, 6	;RP1=0, select bank0
  6930  0C20  1092               	bcf	(145/8),(145)&7
  6931                           	line	20
  6932                           ;pwm.c: 20: T2CKPS0=0;
  6933  0C21  1012               	bcf	(144/8),(144)&7
  6934                           	line	22
  6935                           ;pwm.c: 22: TMR2ON=1;
  6936  0C22  1512               	bsf	(146/8),(146)&7
  6937                           	line	24
  6938                           ;pwm.c: 24: if ((loc_channel & 0x80)==0x80)
  6939  0C23  1FD1               	btfss	(pwm_init@loc_channel),(7)&7
  6940  0C24  2C26               	goto	u3591
  6941  0C25  2C27               	goto	u3590
  6942  0C26                     u3591:
  6943  0C26  2C2A               	goto	l3787
  6944  0C27                     u3590:
  6945                           	line	26
  6946                           	
  6947  0C27                     l10593:	
  6948                           ;pwm.c: 25: {
  6949                           ;pwm.c: 26: CCP1M3=1;
  6950  0C27  1597               	bsf	(187/8),(187)&7
  6951                           	line	27
  6952                           ;pwm.c: 27: CCP1M2=1;
  6953  0C28  1517               	bsf	(186/8),(186)&7
  6954                           	line	28
  6955                           ;pwm.c: 28: }
  6956  0C29  2C2D               	goto	l3789
  6957                           	line	29
  6958                           	
  6959  0C2A                     l3787:	
  6960                           	line	31
  6961                           ;pwm.c: 29: else
  6962                           ;pwm.c: 30: {
  6963                           ;pwm.c: 31: CCP2M3=1;
  6964  0C2A  159D               	bsf	(235/8),(235)&7
  6965                           	line	32
  6966                           ;pwm.c: 32: CCP2M2=1;
  6967  0C2B  151D               	bsf	(234/8),(234)&7
  6968  0C2C  2C2D               	goto	l3789
  6969                           	line	33
  6970                           	
  6971  0C2D                     l3788:	
  6972                           	line	34
  6973                           	
  6974  0C2D                     l3789:	
  6975  0C2D  0008               	return
  6976                           	opt stack 0
  6977                           GLOBAL	__end_of_pwm_init
  6978  0C2E                     	__end_of_pwm_init:
  6979 ;; =============== function _pwm_init ends ============
  6980                           
  6981                           	signat	_pwm_init,4216
  6982                           	global	_pwm_setDuty
  6983                           psect	text847,local,class=CODE,delta=2
  6984                           global __ptext847
  6985  0C9E                     __ptext847:
  6986                           
  6987 ;; *************** function _pwm_setDuty *****************
  6988 ;; Defined at:
  6989 ;;		line 37 in file "E:\my_projects\2013\power\software\pwm.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  loc_channel     1    wreg     unsigned char 
  6992 ;;  lul_Duty        2    0[BANK0 ] unsigned short 
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;  loc_channel     1    3[BANK0 ] unsigned char 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;		None               void
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7004 ;;      Params:         0       2       0       0       0
  7005 ;;      Locals:         0       1       0       0       0
  7006 ;;      Temps:          0       1       0       0       0
  7007 ;;      Totals:         0       4       0       0       0
  7008 ;;Total ram usage:        4 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; Hardware stack levels required when called:    2
  7011 ;; This function calls:
  7012 ;;		Nothing
  7013 ;; This function is called by:
  7014 ;;		_init
  7015 ;;		_task_slow
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           psect	text847
  7019                           	file	"E:\my_projects\2013\power\software\pwm.c"
  7020                           	line	37
  7021                           	global	__size_of_pwm_setDuty
  7022  0025                     	__size_of_pwm_setDuty	equ	__end_of_pwm_setDuty-_pwm_setDuty
  7023                           	
  7024  0C9E                     _pwm_setDuty:	
  7025                           	opt	stack 4
  7026                           ; Regs used in _pwm_setDuty: [wreg+status,2+status,0]
  7027                           ;pwm_setDuty@loc_channel stored from wreg
  7028  0C9E  1283               	bcf	status, 5	;RP0=0, select bank0
  7029  0C9F  1303               	bcf	status, 6	;RP1=0, select bank0
  7030  0CA0  00D4               	movwf	(pwm_setDuty@loc_channel)
  7031                           	line	38
  7032                           	
  7033  0CA1                     l10581:	
  7034                           ;pwm.c: 38: if (lul_Duty<=1024)
  7035  0CA1  3004               	movlw	high(0401h)
  7036  0CA2  0252               	subwf	(pwm_setDuty@lul_Duty+1),w
  7037  0CA3  3001               	movlw	low(0401h)
  7038  0CA4  1903               	skipnz
  7039  0CA5  0251               	subwf	(pwm_setDuty@lul_Duty),w
  7040  0CA6  1803               	skipnc
  7041  0CA7  2CA9               	goto	u3571
  7042  0CA8  2CAA               	goto	u3570
  7043  0CA9                     u3571:
  7044  0CA9  2CC2               	goto	l3795
  7045  0CAA                     u3570:
  7046                           	line	40
  7047                           	
  7048  0CAA                     l10583:	
  7049                           ;pwm.c: 39: {
  7050                           ;pwm.c: 40: s_pwm.channel=s_pwm.channel|0x20;
  7051  0CAA  0826               	movf	0+(_s_pwm)+06h,w
  7052  0CAB  3820               	iorlw	020h
  7053  0CAC  00D3               	movwf	(??_pwm_setDuty+0)+0
  7054  0CAD  0853               	movf	(??_pwm_setDuty+0)+0,w
  7055  0CAE  00A6               	movwf	0+(_s_pwm)+06h
  7056                           	line	41
  7057                           	
  7058  0CAF                     l10585:	
  7059                           ;pwm.c: 41: if ((loc_channel & 0x80)==0x80)
  7060  0CAF  1FD4               	btfss	(pwm_setDuty@loc_channel),(7)&7
  7061  0CB0  2CB2               	goto	u3581
  7062  0CB1  2CB3               	goto	u3580
  7063  0CB2                     u3581:
  7064  0CB2  2CBA               	goto	l10589
  7065  0CB3                     u3580:
  7066                           	line	43
  7067                           	
  7068  0CB3                     l10587:	
  7069                           ;pwm.c: 42: {
  7070                           ;pwm.c: 43: s_pwm.duty_1=lul_Duty;
  7071  0CB3  0852               	movf	(pwm_setDuty@lul_Duty+1),w
  7072  0CB4  01A1               	clrf	(_s_pwm+1)
  7073  0CB5  07A1               	addwf	(_s_pwm+1)
  7074  0CB6  0851               	movf	(pwm_setDuty@lul_Duty),w
  7075  0CB7  01A0               	clrf	(_s_pwm)
  7076  0CB8  07A0               	addwf	(_s_pwm)
  7077                           
  7078                           	line	44
  7079                           ;pwm.c: 44: }
  7080  0CB9  2CC2               	goto	l3795
  7081                           	line	45
  7082                           	
  7083  0CBA                     l3793:	
  7084                           	line	47
  7085                           	
  7086  0CBA                     l10589:	
  7087                           ;pwm.c: 45: else
  7088                           ;pwm.c: 46: {
  7089                           ;pwm.c: 47: s_pwm.duty_2=lul_Duty;
  7090  0CBA  0852               	movf	(pwm_setDuty@lul_Duty+1),w
  7091  0CBB  01A3               	clrf	1+(_s_pwm)+02h
  7092  0CBC  07A3               	addwf	1+(_s_pwm)+02h
  7093  0CBD  0851               	movf	(pwm_setDuty@lul_Duty),w
  7094  0CBE  01A2               	clrf	0+(_s_pwm)+02h
  7095  0CBF  07A2               	addwf	0+(_s_pwm)+02h
  7096                           
  7097  0CC0  2CC2               	goto	l3795
  7098                           	line	48
  7099                           	
  7100  0CC1                     l3794:	
  7101  0CC1  2CC2               	goto	l3795
  7102                           	line	49
  7103                           	
  7104  0CC2                     l3792:	
  7105                           	line	50
  7106                           	
  7107  0CC2                     l3795:	
  7108  0CC2  0008               	return
  7109                           	opt stack 0
  7110                           GLOBAL	__end_of_pwm_setDuty
  7111  0CC3                     	__end_of_pwm_setDuty:
  7112 ;; =============== function _pwm_setDuty ends ============
  7113                           
  7114                           	signat	_pwm_setDuty,8312
  7115                           	global	_pwm_setPeriod
  7116                           psect	text848,local,class=CODE,delta=2
  7117                           global __ptext848
  7118  0C48                     __ptext848:
  7119                           
  7120 ;; *************** function _pwm_setPeriod *****************
  7121 ;; Defined at:
  7122 ;;		line 61 in file "E:\my_projects\2013\power\software\pwm.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;  luw_Period      2    0[BANK0 ] unsigned short 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;		None
  7127 ;; Return value:  Size  Location     Type
  7128 ;;		None               void
  7129 ;; Registers used:
  7130 ;;		wreg, status,2, status,0
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7136 ;;      Params:         0       2       0       0       0
  7137 ;;      Locals:         0       0       0       0       0
  7138 ;;      Temps:          0       1       0       0       0
  7139 ;;      Totals:         0       3       0       0       0
  7140 ;;Total ram usage:        3 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    2
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_init
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           psect	text848
  7150                           	file	"E:\my_projects\2013\power\software\pwm.c"
  7151                           	line	61
  7152                           	global	__size_of_pwm_setPeriod
  7153  001C                     	__size_of_pwm_setPeriod	equ	__end_of_pwm_setPeriod-_pwm_setPeriod
  7154                           	
  7155  0C48                     _pwm_setPeriod:	
  7156                           	opt	stack 4
  7157                           ; Regs used in _pwm_setPeriod: [wreg+status,2+status,0]
  7158                           	line	63
  7159                           	
  7160  0C48                     l10573:	
  7161                           ;pwm.c: 63: if(luw_Period>1023)
  7162  0C48  3004               	movlw	high(0400h)
  7163  0C49  1283               	bcf	status, 5	;RP0=0, select bank0
  7164  0C4A  1303               	bcf	status, 6	;RP1=0, select bank0
  7165  0C4B  0252               	subwf	(pwm_setPeriod@luw_Period+1),w
  7166  0C4C  3000               	movlw	low(0400h)
  7167  0C4D  1903               	skipnz
  7168  0C4E  0251               	subwf	(pwm_setPeriod@luw_Period),w
  7169  0C4F  1C03               	skipc
  7170  0C50  2C52               	goto	u3561
  7171  0C51  2C53               	goto	u3560
  7172  0C52                     u3561:
  7173  0C52  2C58               	goto	l10577
  7174  0C53                     u3560:
  7175                           	line	65
  7176                           	
  7177  0C53                     l10575:	
  7178                           ;pwm.c: 64: {
  7179                           ;pwm.c: 65: luw_Period=1023;
  7180  0C53  30FF               	movlw	low(03FFh)
  7181  0C54  00D1               	movwf	(pwm_setPeriod@luw_Period)
  7182  0C55  3003               	movlw	high(03FFh)
  7183  0C56  00D2               	movwf	((pwm_setPeriod@luw_Period))+1
  7184  0C57  2C58               	goto	l10577
  7185                           	line	66
  7186                           	
  7187  0C58                     l3803:	
  7188                           	line	67
  7189                           	
  7190  0C58                     l10577:	
  7191                           ;pwm.c: 66: }
  7192                           ;pwm.c: 67: s_pwm.period=luw_Period;
  7193  0C58  0852               	movf	(pwm_setPeriod@luw_Period+1),w
  7194  0C59  01A5               	clrf	1+(_s_pwm)+04h
  7195  0C5A  07A5               	addwf	1+(_s_pwm)+04h
  7196  0C5B  0851               	movf	(pwm_setPeriod@luw_Period),w
  7197  0C5C  01A4               	clrf	0+(_s_pwm)+04h
  7198  0C5D  07A4               	addwf	0+(_s_pwm)+04h
  7199                           
  7200                           	line	68
  7201                           	
  7202  0C5E                     l10579:	
  7203                           ;pwm.c: 68: s_pwm.channel=s_pwm.channel|0x40;
  7204  0C5E  0826               	movf	0+(_s_pwm)+06h,w
  7205  0C5F  3840               	iorlw	040h
  7206  0C60  00D3               	movwf	(??_pwm_setPeriod+0)+0
  7207  0C61  0853               	movf	(??_pwm_setPeriod+0)+0,w
  7208  0C62  00A6               	movwf	0+(_s_pwm)+06h
  7209                           	line	69
  7210                           	
  7211  0C63                     l3804:	
  7212  0C63  0008               	return
  7213                           	opt stack 0
  7214                           GLOBAL	__end_of_pwm_setPeriod
  7215  0C64                     	__end_of_pwm_setPeriod:
  7216 ;; =============== function _pwm_setPeriod ends ============
  7217                           
  7218                           	signat	_pwm_setPeriod,4216
  7219                           	global	_io_init
  7220                           psect	text849,local,class=CODE,delta=2
  7221                           global __ptext849
  7222  0BCC                     __ptext849:
  7223                           
  7224 ;; *************** function _io_init *****************
  7225 ;; Defined at:
  7226 ;;		line 4 in file "E:\my_projects\2013\power\software\io.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;		None
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;		None
  7231 ;; Return value:  Size  Location     Type
  7232 ;;		None               void
  7233 ;; Registers used:
  7234 ;;		wreg, status,2
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7240 ;;      Params:         0       0       0       0       0
  7241 ;;      Locals:         0       0       0       0       0
  7242 ;;      Temps:          0       0       0       0       0
  7243 ;;      Totals:         0       0       0       0       0
  7244 ;;Total ram usage:        0 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; Hardware stack levels required when called:    2
  7247 ;; This function calls:
  7248 ;;		Nothing
  7249 ;; This function is called by:
  7250 ;;		_init
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           psect	text849
  7254                           	file	"E:\my_projects\2013\power\software\io.c"
  7255                           	line	4
  7256                           	global	__size_of_io_init
  7257  000B                     	__size_of_io_init	equ	__end_of_io_init-_io_init
  7258                           	
  7259  0BCC                     _io_init:	
  7260                           	opt	stack 4
  7261                           ; Regs used in _io_init: [wreg+status,2]
  7262                           	line	5
  7263                           	
  7264  0BCC                     l10563:	
  7265                           ;io.c: 5: TRISA=TRISA&0xFF;
  7266  0BCC  1683               	bsf	status, 5	;RP0=1, select bank1
  7267  0BCD  1303               	bcf	status, 6	;RP1=0, select bank1
  7268  0BCE  0805               	movf	(133)^080h,w	;volatile
  7269  0BCF  0085               	movwf	(133)^080h	;volatile
  7270                           	line	6
  7271                           	
  7272  0BD0                     l10565:	
  7273                           ;io.c: 6: TRISB=TRISB&0x00;
  7274  0BD0  0186               	clrf	(134)^080h	;volatile
  7275                           	line	7
  7276                           	
  7277  0BD1                     l10567:	
  7278                           ;io.c: 7: TRISC=TRISC&0x00;
  7279  0BD1  0187               	clrf	(135)^080h	;volatile
  7280                           	line	8
  7281                           	
  7282  0BD2                     l10569:	
  7283                           ;io.c: 8: PORTB = 0x00;
  7284  0BD2  1283               	bcf	status, 5	;RP0=0, select bank0
  7285  0BD3  1303               	bcf	status, 6	;RP1=0, select bank0
  7286  0BD4  0186               	clrf	(6)	;volatile
  7287                           	line	9
  7288                           	
  7289  0BD5                     l10571:	
  7290                           ;io.c: 9: PORTC = 0x00;
  7291  0BD5  0187               	clrf	(7)	;volatile
  7292                           	line	11
  7293                           	
  7294  0BD6                     l2527:	
  7295  0BD6  0008               	return
  7296                           	opt stack 0
  7297                           GLOBAL	__end_of_io_init
  7298  0BD7                     	__end_of_io_init:
  7299 ;; =============== function _io_init ends ============
  7300                           
  7301                           	signat	_io_init,88
  7302                           	global	_adc_convert_one_channel
  7303                           psect	text850,local,class=CODE,delta=2
  7304                           global __ptext850
  7305  0631                     __ptext850:
  7306                           
  7307 ;; *************** function _adc_convert_one_channel *****************
  7308 ;; Defined at:
  7309 ;;		line 56 in file "E:\my_projects\2013\power\software\adc.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  ub_channel      1    wreg     unsigned char 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  ub_channel      1    1[BANK0 ] unsigned char 
  7314 ;;  ub_Index1       1    2[BANK0 ] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;		None               void
  7317 ;; Registers used:
  7318 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7324 ;;      Params:         0       0       0       0       0
  7325 ;;      Locals:         0       2       0       0       0
  7326 ;;      Temps:          0       1       0       0       0
  7327 ;;      Totals:         0       3       0       0       0
  7328 ;;Total ram usage:        3 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    2
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_Read_Buton_state
  7335 ;;		_task_slow
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           psect	text850
  7339                           	file	"E:\my_projects\2013\power\software\adc.c"
  7340                           	line	56
  7341                           	global	__size_of_adc_convert_one_channel
  7342  0073                     	__size_of_adc_convert_one_channel	equ	__end_of_adc_convert_one_channel-_adc_convert_one
                                 _channel
  7343                           	
  7344  0631                     _adc_convert_one_channel:	
  7345                           	opt	stack 4
  7346                           ; Regs used in _adc_convert_one_channel: [wreg-fsr0h+status,2+status,0]
  7347                           ;adc_convert_one_channel@ub_channel stored from wreg
  7348                           	line	58
  7349  0631  1283               	bcf	status, 5	;RP0=0, select bank0
  7350  0632  1303               	bcf	status, 6	;RP1=0, select bank0
  7351  0633  00D2               	movwf	(adc_convert_one_channel@ub_channel)
  7352                           	
  7353  0634                     l10535:	
  7354                           ;adc.c: 57: T_UBYTE ub_Index1;
  7355                           ;adc.c: 58: {CHS0=(ub_channel)&0x1; CHS1=((ub_channel)&0x2)>>1;CHS2=((ub_channel)&0x4)>>
                                 2;};
  7356  0634  1852               	btfsc	(adc_convert_one_channel@ub_channel),0
  7357  0635  2E37               	goto	u3421
  7358  0636  2E3B               	goto	u3420
  7359                           	
  7360  0637                     u3421:
  7361  0637  1283               	bcf	status, 5	;RP0=0, select bank0
  7362  0638  1303               	bcf	status, 6	;RP1=0, select bank0
  7363  0639  159F               	bsf	(251/8),(251)&7
  7364  063A  2E3E               	goto	u3434
  7365  063B                     u3420:
  7366  063B  1283               	bcf	status, 5	;RP0=0, select bank0
  7367  063C  1303               	bcf	status, 6	;RP1=0, select bank0
  7368  063D  119F               	bcf	(251/8),(251)&7
  7369  063E                     u3434:
  7370                           	
  7371  063E                     l10537:	
  7372  063E  0852               	movf	(adc_convert_one_channel@ub_channel),w
  7373  063F  00D1               	movwf	(??_adc_convert_one_channel+0)+0
  7374  0640  3001               	movlw	01h
  7375  0641                     u3445:
  7376  0641  1003               	clrc
  7377  0642  0CD1               	rrf	(??_adc_convert_one_channel+0)+0,f
  7378  0643  3EFF               	addlw	-1
  7379  0644  1D03               	skipz
  7380  0645  2E41               	goto	u3445
  7381  0646  1851               	btfsc	0+(??_adc_convert_one_channel+0)+0,0
  7382  0647  2E49               	goto	u3451
  7383  0648  2E4D               	goto	u3450
  7384                           	
  7385  0649                     u3451:
  7386  0649  1283               	bcf	status, 5	;RP0=0, select bank0
  7387  064A  1303               	bcf	status, 6	;RP1=0, select bank0
  7388  064B  161F               	bsf	(252/8),(252)&7
  7389  064C  2E50               	goto	u3464
  7390  064D                     u3450:
  7391  064D  1283               	bcf	status, 5	;RP0=0, select bank0
  7392  064E  1303               	bcf	status, 6	;RP1=0, select bank0
  7393  064F  121F               	bcf	(252/8),(252)&7
  7394  0650                     u3464:
  7395  0650  0852               	movf	(adc_convert_one_channel@ub_channel),w
  7396  0651  00D1               	movwf	(??_adc_convert_one_channel+0)+0
  7397  0652  3002               	movlw	02h
  7398  0653                     u3475:
  7399  0653  1003               	clrc
  7400  0654  0CD1               	rrf	(??_adc_convert_one_channel+0)+0,f
  7401  0655  3EFF               	addlw	-1
  7402  0656  1D03               	skipz
  7403  0657  2E53               	goto	u3475
  7404  0658  1851               	btfsc	0+(??_adc_convert_one_channel+0)+0,0
  7405  0659  2E5B               	goto	u3481
  7406  065A  2E5F               	goto	u3480
  7407                           	
  7408  065B                     u3481:
  7409  065B  1283               	bcf	status, 5	;RP0=0, select bank0
  7410  065C  1303               	bcf	status, 6	;RP1=0, select bank0
  7411  065D  169F               	bsf	(253/8),(253)&7
  7412  065E  2E62               	goto	u3494
  7413  065F                     u3480:
  7414  065F  1283               	bcf	status, 5	;RP0=0, select bank0
  7415  0660  1303               	bcf	status, 6	;RP1=0, select bank0
  7416  0661  129F               	bcf	(253/8),(253)&7
  7417  0662                     u3494:
  7418                           	line	59
  7419                           	
  7420  0662                     l10539:	
  7421                           ;adc.c: 59: for (ub_Index1=0;ub_Index1<5;ub_Index1++);
  7422  0662  01D3               	clrf	(adc_convert_one_channel@ub_Index1)
  7423                           	
  7424  0663                     l10541:	
  7425  0663  3005               	movlw	(05h)
  7426  0664  0253               	subwf	(adc_convert_one_channel@ub_Index1),w
  7427  0665  1C03               	skipc
  7428  0666  2E68               	goto	u3501
  7429  0667  2E69               	goto	u3500
  7430  0668                     u3501:
  7431  0668  2E6B               	goto	l10545
  7432  0669                     u3500:
  7433  0669  2E75               	goto	l631
  7434                           	
  7435  066A                     l10543:	
  7436  066A  2E75               	goto	l631
  7437                           	
  7438  066B                     l630:	
  7439                           	
  7440  066B                     l10545:	
  7441  066B  3001               	movlw	(01h)
  7442  066C  00D1               	movwf	(??_adc_convert_one_channel+0)+0
  7443  066D  0851               	movf	(??_adc_convert_one_channel+0)+0,w
  7444  066E  07D3               	addwf	(adc_convert_one_channel@ub_Index1),f
  7445                           	
  7446  066F                     l10547:	
  7447  066F  3005               	movlw	(05h)
  7448  0670  0253               	subwf	(adc_convert_one_channel@ub_Index1),w
  7449  0671  1C03               	skipc
  7450  0672  2E74               	goto	u3511
  7451  0673  2E75               	goto	u3510
  7452  0674                     u3511:
  7453  0674  2E6B               	goto	l10545
  7454  0675                     u3510:
  7455                           	
  7456  0675                     l631:	
  7457                           	line	61
  7458                           ;adc.c: 61: ADIF = 0;
  7459  0675  130C               	bcf	(102/8),(102)&7
  7460                           	line	62
  7461                           ;adc.c: 62: GO_DONE=1;
  7462  0676  151F               	bsf	(250/8),(250)&7
  7463                           	line	63
  7464                           ;adc.c: 63: while((ADIF == 0) ||(GO_DONE==1));
  7465  0677  2E78               	goto	l632
  7466                           	
  7467  0678                     l633:	
  7468                           	
  7469  0678                     l632:	
  7470  0678  1F0C               	btfss	(102/8),(102)&7
  7471  0679  2E7B               	goto	u3521
  7472  067A  2E7C               	goto	u3520
  7473  067B                     u3521:
  7474  067B  2E78               	goto	l632
  7475  067C                     u3520:
  7476                           	
  7477  067C                     l10549:	
  7478  067C  191F               	btfsc	(250/8),(250)&7
  7479  067D  2E7F               	goto	u3531
  7480  067E  2E80               	goto	u3530
  7481  067F                     u3531:
  7482  067F  2E78               	goto	l632
  7483  0680                     u3530:
  7484                           	
  7485  0680                     l634:	
  7486                           	line	64
  7487                           ;adc.c: 64: for (ub_Index1=0;ub_Index1<5;ub_Index1++);
  7488  0680  01D3               	clrf	(adc_convert_one_channel@ub_Index1)
  7489                           	
  7490  0681                     l10551:	
  7491  0681  3005               	movlw	(05h)
  7492  0682  0253               	subwf	(adc_convert_one_channel@ub_Index1),w
  7493  0683  1C03               	skipc
  7494  0684  2E86               	goto	u3541
  7495  0685  2E87               	goto	u3540
  7496  0686                     u3541:
  7497  0686  2E89               	goto	l10555
  7498  0687                     u3540:
  7499  0687  2E94               	goto	l10559
  7500                           	
  7501  0688                     l10553:	
  7502  0688  2E94               	goto	l10559
  7503                           	
  7504  0689                     l635:	
  7505                           	
  7506  0689                     l10555:	
  7507  0689  3001               	movlw	(01h)
  7508  068A  00D1               	movwf	(??_adc_convert_one_channel+0)+0
  7509  068B  0851               	movf	(??_adc_convert_one_channel+0)+0,w
  7510  068C  07D3               	addwf	(adc_convert_one_channel@ub_Index1),f
  7511                           	
  7512  068D                     l10557:	
  7513  068D  3005               	movlw	(05h)
  7514  068E  0253               	subwf	(adc_convert_one_channel@ub_Index1),w
  7515  068F  1C03               	skipc
  7516  0690  2E92               	goto	u3551
  7517  0691  2E93               	goto	u3550
  7518  0692                     u3551:
  7519  0692  2E89               	goto	l10555
  7520  0693                     u3550:
  7521  0693  2E94               	goto	l10559
  7522                           	
  7523  0694                     l636:	
  7524                           	line	65
  7525                           	
  7526  0694                     l10559:	
  7527                           ;adc.c: 65: adc_buffer[ub_channel]=(ADRESL)|((T_UWORD)(ADRESH<<8));
  7528  0694  0852               	movf	(adc_convert_one_channel@ub_channel),w
  7529  0695  00D1               	movwf	(??_adc_convert_one_channel+0)+0
  7530  0696  0751               	addwf	(??_adc_convert_one_channel+0)+0,w
  7531  0697  3EB0               	addlw	_adc_buffer&0ffh
  7532  0698  0084               	movwf	fsr0
  7533  0699  1683               	bsf	status, 5	;RP0=1, select bank1
  7534  069A  1303               	bcf	status, 6	;RP1=0, select bank1
  7535  069B  081E               	movf	(158)^080h,w	;volatile
  7536  069C  1383               	bcf	status, 7	;select IRP bank1
  7537  069D  0080               	movwf	indf
  7538  069E  0A84               	incf	fsr0,f
  7539  069F  1283               	bcf	status, 5	;RP0=0, select bank0
  7540  06A0  1303               	bcf	status, 6	;RP1=0, select bank0
  7541  06A1  081E               	movf	(30),w	;volatile
  7542  06A2  0080               	movwf	indf
  7543                           	line	66
  7544                           	
  7545  06A3                     l637:	
  7546  06A3  0008               	return
  7547                           	opt stack 0
  7548                           GLOBAL	__end_of_adc_convert_one_channel
  7549  06A4                     	__end_of_adc_convert_one_channel:
  7550 ;; =============== function _adc_convert_one_channel ends ============
  7551                           
  7552                           	signat	_adc_convert_one_channel,4216
  7553                           	global	_adc_init
  7554                           psect	text851,local,class=CODE,delta=2
  7555                           global __ptext851
  7556  0BEA                     __ptext851:
  7557                           
  7558 ;; *************** function _adc_init *****************
  7559 ;; Defined at:
  7560 ;;		line 12 in file "E:\my_projects\2013\power\software\adc.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;		None
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;		None
  7565 ;; Return value:  Size  Location     Type
  7566 ;;		None               void
  7567 ;; Registers used:
  7568 ;;		None
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7574 ;;      Params:         0       0       0       0       0
  7575 ;;      Locals:         0       0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0
  7577 ;;      Totals:         0       0       0       0       0
  7578 ;;Total ram usage:        0 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    2
  7581 ;; This function calls:
  7582 ;;		Nothing
  7583 ;; This function is called by:
  7584 ;;		_init
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           psect	text851
  7588                           	file	"E:\my_projects\2013\power\software\adc.c"
  7589                           	line	12
  7590                           	global	__size_of_adc_init
  7591  0016                     	__size_of_adc_init	equ	__end_of_adc_init-_adc_init
  7592                           	
  7593  0BEA                     _adc_init:	
  7594                           	opt	stack 4
  7595                           ; Regs used in _adc_init: []
  7596                           	line	15
  7597                           	
  7598  0BEA                     l10499:	
  7599                           ;adc.c: 15: ADCS2=0;
  7600  0BEA  1683               	bsf	status, 5	;RP0=1, select bank1
  7601  0BEB  1303               	bcf	status, 6	;RP1=0, select bank1
  7602  0BEC  131F               	bcf	(1278/8)^080h,(1278)&7
  7603                           	line	16
  7604                           ;adc.c: 16: ADCS1=1;
  7605  0BED  1283               	bcf	status, 5	;RP0=0, select bank0
  7606  0BEE  1303               	bcf	status, 6	;RP1=0, select bank0
  7607  0BEF  179F               	bsf	(255/8),(255)&7
  7608                           	line	17
  7609                           ;adc.c: 17: ADCS0=1;
  7610  0BF0  171F               	bsf	(254/8),(254)&7
  7611                           	line	19
  7612                           ;adc.c: 19: ADFM=1;
  7613  0BF1  1683               	bsf	status, 5	;RP0=1, select bank1
  7614  0BF2  1303               	bcf	status, 6	;RP1=0, select bank1
  7615  0BF3  179F               	bsf	(1279/8)^080h,(1279)&7
  7616                           	line	21
  7617                           ;adc.c: 21: PCFG3=0;
  7618  0BF4  119F               	bcf	(1275/8)^080h,(1275)&7
  7619                           	line	22
  7620                           ;adc.c: 22: PCFG2=0;
  7621  0BF5  111F               	bcf	(1274/8)^080h,(1274)&7
  7622                           	line	23
  7623                           ;adc.c: 23: PCFG1=1;
  7624  0BF6  149F               	bsf	(1273/8)^080h,(1273)&7
  7625                           	line	24
  7626                           ;adc.c: 24: PCFG0=0;
  7627  0BF7  101F               	bcf	(1272/8)^080h,(1272)&7
  7628                           	line	27
  7629                           ;adc.c: 27: TRISA0=1;
  7630  0BF8  1405               	bsf	(1064/8)^080h,(1064)&7
  7631                           	line	28
  7632                           ;adc.c: 28: TRISA1=1;
  7633  0BF9  1485               	bsf	(1065/8)^080h,(1065)&7
  7634                           	line	29
  7635                           ;adc.c: 29: TRISA2=1;
  7636  0BFA  1505               	bsf	(1066/8)^080h,(1066)&7
  7637                           	line	30
  7638                           ;adc.c: 30: TRISA3=1;
  7639  0BFB  1585               	bsf	(1067/8)^080h,(1067)&7
  7640                           	line	33
  7641                           ;adc.c: 33: ADON=1;
  7642  0BFC  1283               	bcf	status, 5	;RP0=0, select bank0
  7643  0BFD  1303               	bcf	status, 6	;RP1=0, select bank0
  7644  0BFE  141F               	bsf	(248/8),(248)&7
  7645                           	line	34
  7646                           	
  7647  0BFF                     l615:	
  7648  0BFF  0008               	return
  7649                           	opt stack 0
  7650                           GLOBAL	__end_of_adc_init
  7651  0C00                     	__end_of_adc_init:
  7652 ;; =============== function _adc_init ends ============
  7653                           
  7654                           	signat	_adc_init,88
  7655                           	global	_external_isr
  7656                           psect	text852,local,class=CODE,delta=2
  7657                           global __ptext852
  7658  0C00                     __ptext852:
  7659                           
  7660 ;; *************** function _external_isr *****************
  7661 ;; Defined at:
  7662 ;;		line 62 in file "E:\my_projects\2013\power\software\main.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;		None
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;		None
  7667 ;; Return value:  Size  Location     Type
  7668 ;;		None               void
  7669 ;; Registers used:
  7670 ;;		wreg, status,2, status,0, pclath, cstack
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7676 ;;      Params:         0       0       0       0       0
  7677 ;;      Locals:         0       0       0       0       0
  7678 ;;      Temps:          4       0       0       0       0
  7679 ;;      Totals:         4       0       0       0       0
  7680 ;;Total ram usage:        4 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; Hardware stack levels required when called:    1
  7683 ;; This function calls:
  7684 ;;		_timer0_isr
  7685 ;; This function is called by:
  7686 ;;		Interrupt level 1
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           psect	text852
  7690                           	file	"E:\my_projects\2013\power\software\main.c"
  7691                           	line	62
  7692                           	global	__size_of_external_isr
  7693  0017                     	__size_of_external_isr	equ	__end_of_external_isr-_external_isr
  7694                           	
  7695  0C00                     _external_isr:	
  7696                           	opt	stack 2
  7697                           ; Regs used in _external_isr: [wreg+status,2+status,0+pclath+cstack]
  7698                           psect	intentry,class=CODE,delta=2
  7699                           global __pintentry
  7700  0004                     __pintentry:
  7701                           global interrupt_function
  7702  0004                     interrupt_function:
  7703                           	global saved_w
  7704  007E                     	saved_w	set	btemp+0
  7705  0004  00FE               	movwf	saved_w
  7706  0005  0E03               	swapf	status,w
  7707  0006  00F4               	movwf	(??_external_isr+0)
  7708  0007  0804               	movf	fsr0,w
  7709  0008  00F5               	movwf	(??_external_isr+1)
  7710  0009  080A               	movf	pclath,w
  7711  000A  00F6               	movwf	(??_external_isr+2)
  7712  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  7713  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  7714  000D  087F               	movf	btemp+1,w
  7715  000E  00F7               	movwf	(??_external_isr+3)
  7716  000F  120A  158A  2C00   	ljmp	_external_isr
  7717                           psect	text852
  7718                           	line	63
  7719                           	
  7720  0C00                     i1l10659:	
  7721                           ;main.c: 63: if (TMR0IF==1)
  7722  0C00  1D0B               	btfss	(90/8),(90)&7
  7723  0C01  2C03               	goto	u366_21
  7724  0C02  2C04               	goto	u366_20
  7725  0C03                     u366_21:
  7726  0C03  2C0A               	goto	i1l3163
  7727  0C04                     u366_20:
  7728                           	line	64
  7729                           	
  7730  0C04                     i1l10661:	
  7731                           ;main.c: 64: timer0_isr();
  7732  0C04  120A  118A  2453   	fcall	_timer0_isr
              120A  158A         
  7733  0C09  2C0A               	goto	i1l3163
  7734                           	
  7735  0C0A                     i1l3162:	
  7736                           	line	75
  7737                           	
  7738  0C0A                     i1l3163:	
  7739  0C0A  0877               	movf	(??_external_isr+3),w
  7740  0C0B  1283               	bcf	status, 5	;RP0=0, select bank0
  7741  0C0C  1303               	bcf	status, 6	;RP1=0, select bank0
  7742  0C0D  00FF               	movwf	btemp+1
  7743  0C0E  0876               	movf	(??_external_isr+2),w
  7744  0C0F  008A               	movwf	pclath
  7745  0C10  0875               	movf	(??_external_isr+1),w
  7746  0C11  0084               	movwf	fsr0
  7747  0C12  0E74               	swapf	(??_external_isr+0)^0FFFFFF80h,w
  7748  0C13  0083               	movwf	status
  7749  0C14  0EFE               	swapf	saved_w,f
  7750  0C15  0E7E               	swapf	saved_w,w
  7751  0C16  0009               	retfie
  7752                           	opt stack 0
  7753                           GLOBAL	__end_of_external_isr
  7754  0C17                     	__end_of_external_isr:
  7755 ;; =============== function _external_isr ends ============
  7756                           
  7757                           	signat	_external_isr,88
  7758                           	global	_timer0_isr
  7759                           psect	text853,local,class=CODE,delta=2
  7760                           global __ptext853
  7761  0453                     __ptext853:
  7762                           
  7763 ;; *************** function _timer0_isr *****************
  7764 ;; Defined at:
  7765 ;;		line 44 in file "E:\my_projects\2013\power\software\main.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;		None
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;		None               void
  7772 ;; Registers used:
  7773 ;;		wreg, status,2, status,0
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7779 ;;      Params:         0       0       0       0       0
  7780 ;;      Locals:         0       0       0       0       0
  7781 ;;      Temps:          4       0       0       0       0
  7782 ;;      Totals:         4       0       0       0       0
  7783 ;;Total ram usage:        4 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_external_isr
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           psect	text853
  7792                           	file	"E:\my_projects\2013\power\software\main.c"
  7793                           	line	44
  7794                           	global	__size_of_timer0_isr
  7795  007C                     	__size_of_timer0_isr	equ	__end_of_timer0_isr-_timer0_isr
  7796                           	
  7797  0453                     _timer0_isr:	
  7798                           	opt	stack 2
  7799                           ; Regs used in _timer0_isr: [wreg+status,2+status,0]
  7800                           	line	45
  7801                           	
  7802  0453                     i1l10641:	
  7803                           ;main.c: 45: ul_mseconds++;
  7804  0453  3001               	movlw	01h
  7805  0454  1683               	bsf	status, 5	;RP0=1, select bank1
  7806  0455  1303               	bcf	status, 6	;RP1=0, select bank1
  7807  0456  07BA               	addwf	(_ul_mseconds)^080h,f
  7808  0457  3000               	movlw	0
  7809  0458  1803               	skipnc
  7810  0459  3001               movlw 1
  7811  045A  07BB               	addwf	(_ul_mseconds+1)^080h,f
  7812  045B  3000               	movlw	0
  7813  045C  1803               	skipnc
  7814  045D  3001               movlw 1
  7815  045E  07BC               	addwf	(_ul_mseconds+2)^080h,f
  7816  045F  3000               	movlw	0
  7817  0460  1803               	skipnc
  7818  0461  3001               movlw 1
  7819  0462  07BD               	addwf	(_ul_mseconds+3)^080h,f
  7820                           	line	46
  7821                           ;main.c: 46: ul_task1++;
  7822  0463  3001               	movlw	01h
  7823  0464  07BE               	addwf	(_ul_task1)^080h,f
  7824  0465  3000               	movlw	0
  7825  0466  1803               	skipnc
  7826  0467  3001               movlw 1
  7827  0468  07BF               	addwf	(_ul_task1+1)^080h,f
  7828  0469  3000               	movlw	0
  7829  046A  1803               	skipnc
  7830  046B  3001               movlw 1
  7831  046C  07C0               	addwf	(_ul_task1+2)^080h,f
  7832  046D  3000               	movlw	0
  7833  046E  1803               	skipnc
  7834  046F  3001               movlw 1
  7835  0470  07C1               	addwf	(_ul_task1+3)^080h,f
  7836                           	line	47
  7837                           ;main.c: 47: ul_task2++;
  7838  0471  3001               	movlw	01h
  7839  0472  07C2               	addwf	(_ul_task2)^080h,f
  7840  0473  3000               	movlw	0
  7841  0474  1803               	skipnc
  7842  0475  3001               movlw 1
  7843  0476  07C3               	addwf	(_ul_task2+1)^080h,f
  7844  0477  3000               	movlw	0
  7845  0478  1803               	skipnc
  7846  0479  3001               movlw 1
  7847  047A  07C4               	addwf	(_ul_task2+2)^080h,f
  7848  047B  3000               	movlw	0
  7849  047C  1803               	skipnc
  7850  047D  3001               movlw 1
  7851  047E  07C5               	addwf	(_ul_task2+3)^080h,f
  7852                           	line	48
  7853                           	
  7854  047F                     i1l10643:	
  7855                           ;main.c: 48: TMR0 += -250;
  7856  047F  3006               	movlw	(06h)
  7857  0480  00F0               	movwf	(??_timer0_isr+0)+0
  7858  0481  0870               	movf	(??_timer0_isr+0)+0,w
  7859  0482  1283               	bcf	status, 5	;RP0=0, select bank0
  7860  0483  1303               	bcf	status, 6	;RP1=0, select bank0
  7861  0484  0781               	addwf	(1),f	;volatile
  7862                           	line	49
  7863                           	
  7864  0485                     i1l10645:	
  7865                           ;main.c: 49: if ((ul_task1&4)==4)
  7866  0485  1683               	bsf	status, 5	;RP0=1, select bank1
  7867  0486  1303               	bcf	status, 6	;RP1=0, select bank1
  7868  0487  1D3E               	btfss	(_ul_task1)^080h,(2)&7
  7869  0488  2C8A               	goto	u364_21
  7870  0489  2C8B               	goto	u364_20
  7871  048A                     u364_21:
  7872  048A  2C9D               	goto	i1l10651
  7873  048B                     u364_20:
  7874                           	line	51
  7875                           	
  7876  048B                     i1l10647:	
  7877                           ;main.c: 50: {
  7878                           ;main.c: 51: ub_task=ub_task|0x01;
  7879  048B  1283               	bcf	status, 5	;RP0=0, select bank0
  7880  048C  1303               	bcf	status, 6	;RP1=0, select bank0
  7881  048D  0850               	movf	(_ub_task),w
  7882  048E  3801               	iorlw	01h
  7883  048F  00F0               	movwf	(??_timer0_isr+0)+0
  7884  0490  0870               	movf	(??_timer0_isr+0)+0,w
  7885  0491  00D0               	movwf	(_ub_task)
  7886                           	line	52
  7887                           	
  7888  0492                     i1l10649:	
  7889                           ;main.c: 52: ul_task1=0;
  7890  0492  3000               	movlw	0
  7891  0493  1683               	bsf	status, 5	;RP0=1, select bank1
  7892  0494  1303               	bcf	status, 6	;RP1=0, select bank1
  7893  0495  00C1               	movwf	(_ul_task1+3)^080h
  7894  0496  3000               	movlw	0
  7895  0497  00C0               	movwf	(_ul_task1+2)^080h
  7896  0498  3000               	movlw	0
  7897  0499  00BF               	movwf	(_ul_task1+1)^080h
  7898  049A  3000               	movlw	0
  7899  049B  00BE               	movwf	(_ul_task1)^080h
  7900                           
  7901  049C  2C9D               	goto	i1l10651
  7902                           	line	53
  7903                           	
  7904  049D                     i1l3157:	
  7905                           	line	54
  7906                           	
  7907  049D                     i1l10651:	
  7908                           ;main.c: 53: }
  7909                           ;main.c: 54: if ((ul_task2&200)==200)
  7910  049D  30C8               	movlw	0C8h
  7911  049E  0542               	andwf	(_ul_task2)^080h,w
  7912  049F  00F0               	movwf	(??_timer0_isr+0)+0
  7913  04A0  3000               	movlw	0
  7914  04A1  0543               	andwf	(_ul_task2+1)^080h,w
  7915  04A2  00F1               	movwf	((??_timer0_isr+0)+0+1)
  7916  04A3  3000               	movlw	0
  7917  04A4  0544               	andwf	(_ul_task2+2)^080h,w
  7918  04A5  00F2               	movwf	((??_timer0_isr+0)+0+2)
  7919  04A6  3000               	movlw	0
  7920  04A7  0545               	andwf	(_ul_task2+3)^080h,w
  7921  04A8  00F3               	movwf	((??_timer0_isr+0)+0+3)
  7922  04A9  3000               	movlw	0
  7923  04AA  0673               	xorwf	3+(??_timer0_isr+0)+0,w
  7924  04AB  1D03               	skipz
  7925  04AC  2CB7               	goto	u365_25
  7926  04AD  3000               	movlw	0
  7927  04AE  0672               	xorwf	2+(??_timer0_isr+0)+0,w
  7928  04AF  1D03               	skipz
  7929  04B0  2CB7               	goto	u365_25
  7930  04B1  3000               	movlw	0
  7931  04B2  0671               	xorwf	1+(??_timer0_isr+0)+0,w
  7932  04B3  1D03               	skipz
  7933  04B4  2CB7               	goto	u365_25
  7934  04B5  30C8               	movlw	0C8h
  7935  04B6  0670               	xorwf	0+(??_timer0_isr+0)+0,w
  7936  04B7                     u365_25:
  7937  04B7  1D03               	skipz
  7938  04B8  2CBA               	goto	u365_21
  7939  04B9  2CBB               	goto	u365_20
  7940  04BA                     u365_21:
  7941  04BA  2CCD               	goto	i1l10657
  7942  04BB                     u365_20:
  7943                           	line	56
  7944                           	
  7945  04BB                     i1l10653:	
  7946                           ;main.c: 55: {
  7947                           ;main.c: 56: ub_task=ub_task|0x02;
  7948  04BB  1283               	bcf	status, 5	;RP0=0, select bank0
  7949  04BC  1303               	bcf	status, 6	;RP1=0, select bank0
  7950  04BD  0850               	movf	(_ub_task),w
  7951  04BE  3802               	iorlw	02h
  7952  04BF  00F0               	movwf	(??_timer0_isr+0)+0
  7953  04C0  0870               	movf	(??_timer0_isr+0)+0,w
  7954  04C1  00D0               	movwf	(_ub_task)
  7955                           	line	57
  7956                           	
  7957  04C2                     i1l10655:	
  7958                           ;main.c: 57: ul_task2=0;
  7959  04C2  3000               	movlw	0
  7960  04C3  1683               	bsf	status, 5	;RP0=1, select bank1
  7961  04C4  1303               	bcf	status, 6	;RP1=0, select bank1
  7962  04C5  00C5               	movwf	(_ul_task2+3)^080h
  7963  04C6  3000               	movlw	0
  7964  04C7  00C4               	movwf	(_ul_task2+2)^080h
  7965  04C8  3000               	movlw	0
  7966  04C9  00C3               	movwf	(_ul_task2+1)^080h
  7967  04CA  3000               	movlw	0
  7968  04CB  00C2               	movwf	(_ul_task2)^080h
  7969                           
  7970  04CC  2CCD               	goto	i1l10657
  7971                           	line	58
  7972                           	
  7973  04CD                     i1l3158:	
  7974                           	line	59
  7975                           	
  7976  04CD                     i1l10657:	
  7977                           ;main.c: 58: }
  7978                           ;main.c: 59: TMR0IF=0;
  7979  04CD  110B               	bcf	(90/8),(90)&7
  7980                           	line	60
  7981                           	
  7982  04CE                     i1l3159:	
  7983  04CE  0008               	return
  7984                           	opt stack 0
  7985                           GLOBAL	__end_of_timer0_isr
  7986  04CF                     	__end_of_timer0_isr:
  7987 ;; =============== function _timer0_isr ends ============
  7988                           
  7989                           	signat	_timer0_isr,88
  7990                           psect	text854,local,class=CODE,delta=2
  7991                           global __ptext854
  7992  0000                     __ptext854:
  7993                           	global	btemp
  7994  007E                     	btemp set 07Eh
  7995                           
  7996                           	DABS	1,126,2	;btemp
  7997                           	global	wtemp0
  7998  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Thu Mar 20 22:41:34 2014

       SetDisplay_Current@lubNumber 005B                    _ub_counter_retry 007B  
                       _pwm_setDuty 0C9E                                  _RD 0C60  
                                _WR 0C61                        ___awdiv@sign 0057  
                                fsr 0004                 ___wmul@multiplicand 0053  
   SetDisplay_Voltage@luwNumberFrac 0061                                 l630 066B  
                               l615 0BFF                                 l631 0675  
                               l632 0678                                 l633 0678  
                               l634 0680                                 l635 0689  
                               l636 0694                                 l637 06A3  
                               _GIE 005F                                 _RC0 0038  
                               _RC3 003B                                 _RC4 003C  
                               _RC5 003D                                 _PS0 0408  
                               _PR2 0092                                 _PS1 0409  
                               _PS2 040A                                 _PSA 040B  
                               fsr0 0004                                 indf 0000  
                      ___awmod@sign 0057              Divizor_U_Sense@lul_aux 0066  
                              l1270 0DBC                                l1271 0DBE  
                              l1272 0DBE                                l1268 0DB0  
                              l1269 0DB4                                l3154 07FF  
                              l3170 062D                                l3171 062E  
                              l3172 062E                                l3166 05C9  
                              l2527 0BD6                                l3167 05EC  
                              l3168 05FE                                l3169 062C  
                              l1914 0784                                l5130 0196  
                              l5131 01A9                                l5124 0BC3  
                              l5127 0181                                l4440 0EA4  
                              l5128 0180                                l5129 0197  
                              l3810 0300                                l3803 0C58  
                              l4443 0003                                l3811 03A4  
                              l3804 0C63                                l3820 0393  
                              l3812 0356                                l3821 0395  
                              l3813 033F                                l3814 0340  
                              l3822 03A4                                l7030 0452  
                              l3815 0346                                l3816 0348  
                              l7040 01AB                                l7025 0D2A  
                              l3817 03A3                                l7033 0547  
                              l7041 01C0                                l7026 0D3D  
                              l3818 038C                                l7050 020F  
                              l7042 01C5                                l7027 0D46  
                              l3819 038D                                l7043 02E2  
                              l7051 0210                                l7036 0714  
                              l7060 0270                                l7052 0234  
                              l7044 01C6                                l7061 0272  
                              l7053 0233                                l7045 01D3  
                              l7070 0C80                                l7062 028E  
                              l7054 0239                                l7046 01EF  
                              l7039 02C3                                l7063 028F  
                              l7055 023A                                l7047 01F0  
                              l3792 0CC2                                l7064 02BF  
                              l7056 024E                                l7048 01F1  
                              l3793 0CBA                                l6361 0F97  
                              l7073 0C9D                                l7065 02BE  
                              l7057 024F                                l7049 020E  
                              l3794 0CC1                                l7082 0BE2  
                              l7066 02C0                                l7058 0271  
                              l3795 0CC2                                l3787 0C2A  
                              l7083 0BDD                                l7059 026B  
                              l7067 02E2                                l3788 0C2D  
                              l7084 0BE9                                l6364 0F44  
                              l3789 0C2D                                l7085 0BE9  
                              l6358 0EF4                                l6367 0E06  
                              l7079 0D7D                                l6368 0E08  
                              _ADIF 0066                                _ADFM 04FF  
                              l8410 0E14                                l8411 0E30  
                              l7700 0CE8                                l8412 0E4B  
                              l8413 0E54                                l8510 07AE  
                              l8335 0CEE                                l8511 07AF  
                              l8336 0CF8                                l8512 07DA  
                              l8337 0D0D                                l8513 07EA  
                              l8338 0D14                                l8514 07F4  
                              l8507 07EB                                l8508 07A9  
                              l8509 079B                                l8550 0FDF  
                              l8551 0FED                                l8543 0FA8  
                              l8480 0583                                l8552 0FF8  
                              l8544 0FB2                                l8481 0584  
                              l8553 0FFF                                l8545 0FEE  
                              l8482 059D                                l8546 0FC8  
                              l8483 05AB                                l8475 0558  
                              l8547 0FBC                                l8484 05B6  
                              l8476 0566                                l8548 0FCD  
                              _ADON 00F8                                l8485 05BD  
                              l8477 05AC                                l8549 0FCE  
                              l8478 057E                                l8479 0572  
                              l7698 0CD0                                l7699 0CE8  
                              _CHS0 00FB                                _CHS1 00FC  
                              _CHS2 00FD                                _T0CS 040D  
                              u4010 0FEC                                u4011 0FEB  
                              u4020 0FF2                                u4100 0344  
                              u4005 0FE0                                u4101 0343  
                              u4030 0E8C                                u4120 037D  
                              u4040 02EA                                u4200 0F76  
                              u4041 02E9                                u4130 038A  
                              u4035 0E87                                u4131 0389  
                              u4115 034D                                u3500 0669  
                              u3420 063B                                u4140 0391  
                              u4060 0305                                u4300 0DB8  
                              u3501 0668                                u3421 0637  
                              u4141 0390                                u4125 0378  
                              u4061 0304                                u4205 0F71  
                              u4301 0DB7                                u3510 0675  
                              u4070 0309                                u4230 0F2C  
                              u4310 01B3                                u3511 0674  
                              u4071 0308                                u4055 02F4  
                              u4215 04D7                                u4311 01B2  
                              u3520 067C                                u3600 0D28  
                              u4080 0330                                u4160 0EDC  
                              u4400 029E                                u4320 01E2  
                              u3521 067B                                u3601 0D27  
                              u4225 050D                                u4401 029D  
                              u4321 01E1                                u3530 0680  
                              u3450 064D                                u3434 063E  
                              u3610 0D3C                                u4090 033D  
                              u4410 02B8                                u4330 0200  
                              u3531 067F                                u3451 0649  
                              u3611 0D3B                                u4155 039A  
                              u4091 033C                                u4235 0F27  
                              u4411 02B7                                u4331 01FF  
                              u3540 0687                                u3620 0CCE  
                              u4260 0DED                                u4340 0216  
                              u3541 0686                                u3445 0641  
                              u3621 0CCD                                u4085 032B  
                              u4165 0ED7                                u4245 06AC  
                              u4341 0215                                u3550 0693  
                              u3630 0CE7                                u3710 0D0C  
                              u4270 0E02                                u4350 0225  
                              u4430 016C                                u3551 0692  
                              u3631 0CE6                                u3711 0D0B  
                              u4175 03AD                                u4255 06E2  
                              u4271 0E01                                u4351 0224  
                              u4431 016B                                u3480 065F  
                              u3464 0650                                u3560 0C53  
                              u3720 0E18                                u4360 0249  
                              u4440 017B                                u3481 065B  
                              u3561 0C52                                u3705 0D00  
                              u3721 0E17                                u4185 041F  
                              u4265 0DE8                                u4361 0248  
                              u4441 017A                                u4425 00FD  
                              u3570 0CAA                                u3810 0582  
                              u4290 0DAE                                u4370 025E  
                              u4450 0186                                u3475 0653  
                              u3571 0CA9                                u3731 0E21  
                              u3811 0581                                u4195 0F54  
                              u4291 0DAD                                u4371 025D  
                              u4451 0185                                _PEIE 005E  
                              u3580 0CB3                                u3732 0E28  
                              u4380 0264                                u4460 018F  
                              u3581 0CB2                                u3733 0E2F  
                              u3805 0573                                u4285 0D71  
                              u4381 0263                                u4461 018E  
                              u3494 0662                                u3590 0C27  
                              u3670 0BE8                                u3830 0595  
                              u3910 07CA                                u4390 0281  
                              u4470 05CF                                u3591 0C26  
                              u3671 0BE7                                u3831 0594  
                              u3911 07C9                                u4391 0280  
                              u4471 05CE                                u3680 0CF2  
                              u3760 0E4A                                u4480 05F1  
                              u3681 0CF1                                u3761 0E49  
                              u3745 0E32                                u3825 0585  
                              u3905 07B1                                u4481 05F0  
                              u3850 05AA                                u3770 054F  
                              u3930 07E9                                u4490 0612  
                              u3755 0E3A                                u3851 05A9  
                              u3835 0591                                u3771 054E  
                              u3931 07E8                                u3915 07C6  
                              u4491 0611                                u3860 05B0  
                              u3780 055C                                u3940 0F9F  
                              u3845 059E                                u3781 055B  
                              u3925 07DB                                u3941 0F9E  
                              u3790 056E                                u3870 0797  
                              u3950 0FAC                                u3695 0CF9  
                              u3791 056D                                u3871 0796  
                              u3951 0FAB                                u4495 060E  
                              u3960 0FB8                                u3961 0FB7  
                              u3890 07AD                                u3891 07AC  
                              u3980 0FCC                                u3885 079D  
                              u3981 0FCB                                u3990 0FD8  
                              u3991 0FD7                                u3975 0FBD  
                              u3995 0FD4                                _TMR0 0001  
                              _WREN 0C62                       _pwm_setPeriod 0C48  
        Rawvalue_to_Current@lul_aux 0065                                _main 05BE  
                              _init 0715                                btemp 007E  
                              start 0012            ?_adc_convert_one_channel 0070  
                   ??_Divizor_U_Pot 0060                       ?_LCD_delay_us 0070  
                             l11001 0D4E                               l11011 0D63  
                             l11003 0D54                               l11013 0D6C  
                             l11005 0D57                               l11021 0C87  
                             l11101 01FB                               l11015 0D7B  
                             l11007 0D58                               l11031 0C94  
                             l11023 0C8D                               l11111 0216  
                             l11103 0200                               l11017 0D7D  
                             l11009 0D59                               l11033 0C9A  
                             l11025 0C90                               l11041 0DA5  
                             l11113 0220                               l11121 0234  
                             l11105 0206                               l11201 0125  
                             l11027 0C91                               l11019 0C84  
                             l11043 0DAE                               l11035 0D7E  
                             l11051 0715                               l11131 0259  
                             l11123 023A                               l11115 0225  
                             l11107 020C                               l11211 016C  
                             l11203 012B                               l11029 0C92  
                             l11045 0DB0                               l11037 0D84  
                             l11061 0743                               l11053 071A  
                             l11141 026B                               l11133 025E  
                             l11125 0244                               l11117 022B  
                             l11109 0210                               l11221 0197  
                             l11213 017B                               l11205 0139  
                             l11047 0DB4                               l11039 0D92  
                             l11071 076C                               l11063 0751  
                             l11055 071E                               l11151 028F  
                             l11143 0272                               l11135 0264  
                             l11127 0249                               l11119 0231  
                             l11223 01A3                               l11215 0181  
                             l11207 014C                               l11231 05C3  
                             l10601 0D1C                               l11049 0DB8  
                             l11073 0778                               l11065 075D  
                             l11057 0737                               l11161 02B2  
                             l11153 0299                               l11145 027C  
                             l11137 0268                               l11129 024F  
                             l11081 01B9                               l11217 0186  
                             l11209 0165                               l11225 0BBD  
                             l11241 05EC                               l11233 05C9  
                             l10611 0D21                               l10603 0D1D  
                             l11067 0762                               l11059 073D  
                             l11163 02B8                               l11155 029E  
                             l11147 0281                               l11139 0269  
                             l11091 01D3                               l11083 01BE  
                             l11075 01AA                               l11219 018F  
                             l11171 0015                               l11227 0BBE  
                             l11251 062A                               l11243 05F1  
                             l11235 05CF                               l10541 0663  
                             l10621 0D36                               l10613 0D22  
                             l10605 0D1E                               l10701 0E18  
                             l11069 0767                               l11165 02BC  
                             l11157 02A6                               l11149 0287  
                             l11093 01DD                               l11085 01C0  
                             l11077 01AB                               l11181 005F  
                             l11173 0020                               l11245 05F6  
                             l11237 05D4                               l11229 05BE  
                             l10551 0681                               l10543 066A  
                             l10535 0634                               l10615 0D29  
                             l10623 0D3D                               l10607 0D1F  
                             l10631 0CCF                               l10703 0E30  
                             l10711 0548                               l11167 02C2  
                             l11159 02AC                               l11095 01E2  
                             l11087 01C6                               l11079 01B3  
                             l11191 00D7                               l11183 0065  
                             l11175 002E                               l11247 05FE  
                             l11239 05DB                               l10553 0688  
                             l10545 066B                               l10537 063E  
                             l10625 0D43                               l10617 0D2A  
                             l10609 0D20                               l10633 0CD0  
                             l10705 0E39                               l10721 0566  
                             l10713 054F                               l10801 0FEE  
                             l11097 01E8                               l11089 01CC  
                             l11169 02C3                               l11193 00EA  
                             l11185 00B0                               l11177 0041  
                             l11249 0612                               l10555 0689  
                             l10547 066F                               l10539 0662  
                             l10571 0BD5                               l10563 0BCC  
                             l10619 0D32                               l10635 0CDD  
                             l10627 0CC6                               l10707 0E4B  
                             l10731 057E                               l10723 0568  
                             l10715 0558                               l10803 0FF2  
                             l10811 0E59                               l11099 01F1  
                             l11195 00F5                               l11187 00B6  
                             l11179 0054                               l10557 068D  
                             l10549 067C                               l10565 0BD0  
                             l10573 0C48                               l10581 0CA1  
                             l10637 0CE1                               l10629 0CC8  
                             l10709 0E54                               l10741 05A4  
                             l10733 0584                               l10725 056E  
                             l10717 055C                               l10805 0FF8  
                             l10821 0EA4                               l10813 0E61  
                             l10901 0F97                               l11197 0113  
                             l11189 00C4                               l10559 0694  
                             l10567 0BD1                               l10575 0C53  
                             l10583 0CAA                               l10591 0C1A  
                             l10639 07F5                               l10663 0BDA  
                             l10735 0595                               l10727 0572  
                             l10743 05AC                               l10719 0561  
                             l10751 0785                               l10807 0FFF  
                             l10815 0E7E                               l10831 0309  
                             l10823 02E6                               l10911 04F1  
                             l10903 04CF                               l11199 011F  
                             l10569 0BD2                               l10577 0C58  
                             l10585 0CAF                               l10593 0C27  
                             l10665 0BDD                               l10745 05B0  
                             l10737 059B                               l10729 0579  
                             l10761 07B8                               l10753 0797  
                             l10817 0E97                               l10809 0E55  
                             l10841 0348                               l10833 030F  
                             l10825 02EA                               l10921 0525  
                             l10913 0508                               l10905 04D2  
                             l10499 0BEA                               l10579 0C5E  
                             l10587 0CB3                               l10595 0D15  
                             l10667 0BE2                               l10691 0CFF  
                             l10747 05B6                               l10739 059D  
                             l10763 07CA                               l10755 079B  
                             l10771 07EB                               l10819 0E9D  
                             l10851 0391                               l10835 0339  
                             l10843 0356                               l10827 0300  
                             l10923 052E                               l10915 0517  
                             l10907 04E7                               l10931 0EF9  
                             l10589 0CBA                               l10597 0D19  
                             l10693 0D0D                               l10685 0CE9  
                             l10749 05BD                               l10773 07F4  
                             l10765 07D8                               l10757 07A9  
                             l10781 0FAC                               l10853 0395  
                             l10845 035C                               l10837 033D  
                             l10829 0305                               l10861 0ECE  
                             l10925 0536                               l10917 051B  
                             l10909 04EB                               l10941 0F44  
                             l10933 0F01                               l10599 0D1B  
                             l10695 0D14                               l10687 0CEE  
                             l10767 07DA                               l10759 07AF  
                             l10791 0FC8                               l10783 0FB2  
                             l10775 0F98                               l10847 0386  
                             l10839 0344                               l10863 0EE7  
                             l10855 0EA5                               l10871 03A8  
                             l10927 053F                               l10919 051F  
                             l10935 0F1E                               l10951 06C6  
                             l10943 06A4                               l10689 0CF2  
                             l10697 0E09                               l10769 07E3  
                             l10793 0FCE                               l10785 0FB8  
                             l10777 0F9F                               l10849 038A  
                             l10865 0EED                               l10857 0EA9  
                             l10881 03FD                               l10873 03B7  
                             l10937 0F37                               l10929 0EF5  
                             l10961 06FB                               l10953 06DD  
                             l10945 06A7                               l10699 0E14  
                             l10795 0FD8                               l10787 0FBC  
                             l10779 0FA8                               l10867 0EF4  
                             l10859 0EB1                               l10891 0441  
                             l10883 0403                               l10875 03BB  
                             l10939 0F3D                               l10963 0703  
                             l10955 06EC                               l10947 06BC  
                             l10971 0DCA                               l10797 0FDF  
                             l10789 0FC3                               l10885 0429  
                             l10877 03D1                               l10869 03A5  
                             l10893 0F45                               l10965 070C  
                             l10957 06F0                               l10949 06C0  
                             l10973 0DF8                               l10981 0C67  
                             l10799 0FE6                               l10887 042D  
                             l10879 03E7                               l10895 0F4F  
                             l10959 06F4                               l10975 0DFC  
                             l10967 0DBF                               l10991 0C75  
                             l10983 0C6A                               l10889 043A  
                             l10897 0F60                               l10977 0E02  
                             l10969 0DC2                               l10993 0C77  
                             l10985 0C70                               l10899 0F90  
                             l10979 0E08                               l10995 0C7D  
                             l10987 0C73                               l10989 0C74  
                             l10997 0D47                               l10999 0D4A  
                             _ADCS0 00FE                               _ADCS1 00FF  
                             _ADCS2 04FE                               ?_main 0070  
                             ?_init 0070                               _CCP1X 00BD  
                             _CCP1Y 00BC                               _CCP2X 00ED  
                             _CCP2Y 00EC                     __end_of___awdiv 05BE  
                             _EEADR 010D                     __end_of___awmod 1000  
      Divizor_U_Sense@luw_UoutSense 0064                               _CARRY 0018  
                   __end_of___lldiv 07F5                     ___awdiv@divisor 0051  
                             _PCFG0 04F8                               _PCFG1 04F9  
                             _PCFG2 04FA                               _PCFG3 04FB  
                   ___awdiv@counter 0056                       _ubDisplay_buf 00A0  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
                      ?_init_timer0 0070                 ___lmul@multiplicand 0055  
__size_of_SetDisplay_Current_target 0071               _init_signal_procesing 0003  
                   __end_of_io_init 0BD7                               _s_pwm 0020  
          __end_of_Read_Buton_state 0DBF                 pwm_setDuty@lul_Duty 0051  
                    ?_pwm_setPeriod 0051                               pclath 000A  
                             status 0003                               wtemp0 007E  
          __size_of_Divizor_U_Sense 0050                        __end_of_main 0631  
                      __end_of_init 0785                      ??_LCD_delay_us 0051  
        __end_of_Convert_to_Voltage 0EA5            Divizor_U_Sense@luw_ADCV0 005E  
                   _InitDisplay2raw 0D15                              ??_main 006E  
                            ??_init 0065                    _Dispaly2raw_task 01AA  
                        _SetCommand 0C64        __size_of_Rawvalue_to_Current 0053  
 adc_convert_one_channel@ub_channel 0052                              _CCP1M0 00B8  
                            _CCP1M1 00B9                              _CCP1M2 00BA  
                            _CCP1M3 00BB                              _CCP2M0 00E8  
                            _CCP2M1 00E9                              _CCP2M2 00EA  
                            _CCP2M3 00EB                              _ADRESH 001E  
                            _ADRESL 009E   SetDisplay_Current_target@uwCurent 0057  
                            _EEDATA 010C                              _CCPR1L 0015  
                            _CCPR2L 001B                              _EECON1 018C  
                            _EECON2 018D                    ___awdiv@dividend 0053  
                  __end_of_adc_init 0C00                              i1l3162 0C0A  
                            i1l3163 0C0A                              i1l3157 049D  
                            i1l3158 04CD                              i1l3159 04CE  
                            u364_20 048B                              u364_21 048A  
                            u365_20 04BB                              u365_21 04BA  
                            u365_25 04B7                              u366_20 0C04  
                            u366_21 0C03                              _TMR0IE 005D  
                            _TMR0IF 005A                              _TMR2ON 0092  
                            _TRISA0 0428                              _TRISA1 0429  
                            _TRISA2 042A                              _TRISA3 042B  
                            _TRISC1 0439                              _TRISC2 043A  
            UpotToPWM@lub_duty_pwm1 0068                              _IsBusy 0D47  
                pwm_update@luw_duty 0063                              ___lmul 0E09  
                   _init_botifilter 0CC3                              ___wmul 0CE9  
                         ??___awdiv 0055                           ??___awmod 0055  
    Convert_to_Voltage@uw_raw_value 005E                           ??___lldiv 0059  
                  ___awdiv@quotient 0058                     ___awmod@divisor 0051  
                   ___awmod@counter 0056                              clrloop 0BC5  
                         ??_io_init 0051         SetDisplay_Voltage@lubNumber 0063  
            ?_init_signal_procesing 0070                              saved_w 007E  
      Convert_to_Voltage@lul_result 0066                    __end_of_pwm_init 0C2E  
                   ??_pwm_setPeriod 0053         init_botifilter@luwInitValue 0051  
                __size_of_UpotToPWM 004A          __end_of_SetDisplay_Current 0548  
                __size_of_WriteData 001D        Convert_to_Voltage@luw_result 0064  
           __end_of_InitDisplay2raw 0D47          __end_of_SetDisplay_Voltage 0453  
                    __pcstackCOMMON 0070         SetDisplay_Voltage@uwVoltage 005A  
                        _adc_buffer 00B0                   ??_Divizor_U_Sense 0060  
                      ?_pwm_setDuty 0051    adc_convert_one_channel@ub_Index1 0053  
                     ?_external_isr 0070      SetDisplay_Voltage@lubFirstByte 0060  
  SetDisplay_Current_target@luwTemp 005C                         ?_SetCommand 0070  
              __size_of_init_timer0 000B                          __pbssBANK0 0020  
                        __pbssBANK1 00A0                __end_of_LCD_delay_us 0BEA  
SetDisplay_Current_target@lubNumber 005B             __end_of_init_botifilter 0CE9  
                           ?_IsBusy 0070                          __pmaintext 05BE  
                           ?___lmul 0051                    _ub_islimit_power 007C  
                           ?___wmul 0051                          __pintentry 0004  
                    ___lmul@product 005A                   __end_of_UpotToPWM 0E09  
                __size_of_task_fast 0007                      ??_external_isr 0074  
                         ?_adc_init 0070                  __size_of_task_slow 0195  
  __size_of_adc_convert_one_channel 0073                             _T2CKPS0 0090  
                           _T2CKPS1 0091                   __end_of_WriteData 0C9E  
                           i1l10641 0453                             i1l10651 049D  
                           i1l10643 047F                             i1l10653 04BB  
                           i1l10645 0485                             i1l10661 0C04  
                           i1l10655 04C2                             i1l10647 048B  
                           i1l10657 04CD                             i1l10649 0492  
                           i1l10659 0C00           SetDisplay_Current@luwTemp 005C  
                           _GO_DONE 00FA                   ?_Read_Buton_state 0070  
                 LCD_delay_us@delay 0052                   LCD_delay_us@index 0053  
                ??_Read_Buton_state 006A            __end_of_Dispaly2raw_task 02E3  
                   __size_of_IsBusy 0037                    ?_InitDisplay2raw 0070  
               _Rawvalue_to_Current 0F45                             ___awdiv 0548  
                   __size_of___lmul 004C                 __size_of_SetCommand 001D  
                           ___awmod 0F98                             ___lldiv 0785  
                   __size_of___wmul 002C               __end_of_Divizor_U_Pot 0F45  
                         ?_pwm_init 0070               init_botifilter@Buffer 0055  
                        _ubThrdByte 0049                          ??_adc_init 0051  
                           _auwUPOT 00DE                             _io_init 0BCC  
                _ub_state_Display2r 004F                             _ub_char 007A  
                  ___awmod@dividend 0053                             _ub_busy 004B  
                           _ub_task 0050                             _uw_IPot 0039  
              ?_Rawvalue_to_Current 005F                             _uw_UPot 00CC  
                _Convert_to_Voltage 0E55                end_of_initialization 0C44  
                 __end_of_task_fast 0BC4                   __end_of_task_slow 01AA  
               ?_Convert_to_Voltage 005E                    ?_init_botifilter 0051  
                   ___lldiv@divisor 0051                     ___lldiv@counter 005E  
                    IsBusy@ub_Bussy 0056                          _timer0_isr 0453  
                        ??_pwm_init 0051               pwm_update@loc_channel 0062  
           ??_init_signal_procesing 0051                ??_Convert_to_Voltage 0060  
              __size_of_pwm_setDuty 0025               __size_of_LCD_delay_us 0013  
             ??_Rawvalue_to_Current 0061                          _pwm_update 02E3  
                 UpotToPWM@lul_temp 0064                   UpotToPWM@luw_UPot 005E  
        ?_SetDisplay_Current_target 0057                     _Divizor_U_Sense 0EA5  
              __end_of_external_isr 0C17                      __end_of_IsBusy 0D7E  
                _SetDisplay_Current 04CF                      __end_of___lmul 0E55  
                    __end_of___wmul 0D15                        _LCD_delay_us 0BD7  
           _adc_convert_one_channel 0631             pwm_setPeriod@luw_Period 0051  
                _SetDisplay_Voltage 03A5                 ?_SetDisplay_Current 0057  
               start_initialization 0C2E                        ??_SetCommand 0054  
               ?_SetDisplay_Voltage 005A               __end_of_pwm_setPeriod 0C64  
                    _temp_duty_pwm2 00C6                SetCommand@ub_Command 0054  
                      _ub_Datawrite 004A   __end_of_SetDisplay_Current_target 0715  
              ??_SetDisplay_Current 0059                            ??_IsBusy 0054  
                      _ubFourthByte 0047                ??_SetDisplay_Voltage 005C  
                       ?_timer0_isr 0070                            ??___lmul 0059  
                          ??___wmul 0055                  __end_of_SetCommand 0C81  
                      _ubSecondByte 0048                           _UpotToPWM 0DBF  
                 __size_of_adc_init 0016                       ??_init_timer0 0051  
                       __pbssCOMMON 0078                       __pcstackBANK0 0051  
   SetDisplay_Voltage@lubSecondByte 005F                           _WriteData 0C81  
           __end_of_Divizor_U_Sense 0EF5                         ?_pwm_update 0070  
                 ?_Dispaly2raw_task 0070                  ??_Dispaly2raw_task 0057  
         ??_adc_convert_one_channel 0051                            ?___awdiv 0051  
                          ?___awmod 0051                           __ptext820 0015  
                         __ptext821 01AA                           __ptext830 04CF  
                         __ptext822 0715                           __ptext831 0F45  
                         __ptext823 0D7E                           __ptext840 0CE9  
                         __ptext832 03A5                           __ptext824 0C81  
                         __ptext841 0BD7                           __ptext833 0EA5  
                         __ptext825 0D47                           __ptext850 0631  
                         __ptext842 07F5                           __ptext834 02E3  
                         __ptext826 0C64                           __ptext818 0000  
                         __ptext851 0BEA                           __ptext843 0CC3  
                         __ptext835 0E55                           __ptext827 0DBF  
                         __ptext819 0BBD                           __ptext852 0C00  
                         __ptext844 0D15                           __ptext836 0F98  
                         __ptext828 06A4                           __ptext853 0453  
                         __ptext845 0003                           __ptext837 0785  
                         __ptext829 0EF5                           __ptext854 0000  
                         __ptext846 0C17                           __ptext838 0548  
                         __ptext847 0C9E                           __ptext839 0E09  
                         __ptext848 0C48                           __ptext849 0BCC  
                          ?___lldiv 0051           __size_of_Read_Buton_state 0041  
                         _auwPWMOut 00CE                   __size_of_pwm_init 0017  
                  WriteData@ub_Data 0054                            ?_io_init 0070  
                        ?_UpotToPWM 005E                          ?_WriteData 0070  
             __size_of_external_isr 0017                 __size_of_timer0_isr 007C  
               __end_of_init_timer0 0800                           _duty_pwm1 0027  
                         _duty_pwm2 0029                   interrupt_function 0004  
                    ___wmul@product 0055          SetDisplay_Current@uwCurent 0057  
                         _uw_ADCVS3 00C8                           _uw_ADCVS4 0037  
           init_botifilter@lubindex 0056                           _task_fast 0BBD  
                         _task_slow 0015                Divizor_U_Pot@lul_aux 0066  
               __size_of_pwm_update 00C2                           _uw_Isense 00CA  
                      _ub_counter_1 004E            __size_of_InitDisplay2raw 0032  
                         _uw_adcCH0 003B                           _uw_adcCH1 003D  
                         _uw_adcCH2 003F                           _uw_adcCH3 0041  
                         _uw_adcCH4 0043                   ___wmul@multiplier 0051  
                         _uw_Usense 0078                        _external_isr 0C00  
    __size_of_init_signal_procesing 0001       __end_of_init_signal_procesing 0004  
                       _ubDispIndex 0045     __end_of_adc_convert_one_channel 06A4  
                  ?_Divizor_U_Sense 005E                   ___lmul@multiplier 0051  
                       _ubFirstByte 0046              __size_of_Divizor_U_Pot 0050  
       ??_SetDisplay_Current_target 0059                          ?_task_fast 0070  
                        ?_task_slow 0070                       ??_pwm_setDuty 0053  
          __size_of_init_botifilter 0026              pwm_setDuty@loc_channel 0054  
                  __size_of___awdiv 0076                    __size_of___awmod 0068  
                  __size_of___lldiv 0070         __end_of_Rawvalue_to_Current 0F98  
                          _adc_init 0BEA         __size_of_Convert_to_Voltage 0050  
                       _ubNumberINT 002B                         ??_UpotToPWM 0060  
                  __size_of_io_init 000B                         _init_timer0 07F5  
                       ??_WriteData 0054                       __size_of_main 0073  
                     __size_of_init 0070                            _uw_ADCV0 002F  
                          _uw_ADCV1 0031                            _uw_ADCV2 0033  
                          _uw_ADCV3 0035                            clear_ram 0BC4  
                      ??_timer0_isr 0070                            _ul_task1 00BE  
                          _ul_task2 00C2                    _Read_Buton_state 0D7E  
                          _pwm_init 0C17                         _ub_buton_s2 004C  
                       _ub_buton_s3 004D                       _Divizor_U_Pot 0EF5  
         _SetDisplay_Current_target 06A4                 __end_of_pwm_setDuty 0CC3  
        Divizor_U_Pot@luw_UoutSense 0064                   ??_InitDisplay2raw 0051  
                      ??_pwm_update 005E                            intlevel1 0000  
                __end_of_timer0_isr 04CF                    ___lldiv@dividend 0055  
       __size_of_SetDisplay_Current 0079                         ??_task_fast 0058  
                       ??_task_slow 006A         __size_of_SetDisplay_Voltage 00AE  
                    ?_Divizor_U_Pot 005E              __size_of_pwm_setPeriod 001C  
                __end_of_pwm_update 03A5           __size_of_Dispaly2raw_task 0139  
      Rawvalue_to_Current@luw_ADCV1 005F                    ___lldiv@quotient 005A  
                 ??_init_botifilter 0053              Divizor_U_Pot@luw_ADCV2 005E  
                       _ul_mseconds 00BA                 pwm_init@loc_channel 0051  
                       _uwNumberFRC 002D  
